 = An Open Requirements Engineering Tool =

 == Developer's Manual ==

 * To develop OpenPF/OpenOME inside the Eclipse IDE, you need the following steps:
  * checkout both the code for openpf:
    git svn clone -r HEAD https://computing-research.open.ac.uk/repos/openpf/trunk openpf
If you are behind a proxy server, you need to change the configuration file 
$HOME/.subversion/servers, for example:
[global]
http-proxy-host = wwwcache.open.ac.uk
http-proxy-port = 80

  * Install the Eclipse IDE.  
To simplify the development, we currently use the script IDE/pf-3.6.sh to install all necessary dependent products.

  * Run Eclipse
The following menu/dialog options are used to develop for the first time:
    * import the projects from the workspace
      File > Import ... >  General > Existing Projects into the workspace > Next > Browse > OK > Finish
    * change the compiler settings for the restricted API usages
      Window > Preferences > Java > Compiler > Errors/Warnings > Deprecated and restricted API > 
      Forbidden references (access rules) > Error => Warning > OK > Yes

  * Run the product:
    Project Explorer > problem > Double click at the pf.product file > Testing > Launch an Eclipse Application

 == Maintainer's Manual ==

  * Run the headless script to build locally:
    cd build.x86_64   (or cd build.macosx)
    build.sh 

  * It is now continously integrated on the sead1 server: any commit to subversion repository trunk/workspace will trigger a rebuilt of the binaries.

Enjoy Problem Solving,

Yijun Yu

Appendix A. Checkout OpenOME

  * Currently we are using one version of openome. You can checkout its latest
development from:
    git svn clone -r HEAD https://se.cs.toronto.edu/svn/trac/ome/trunk/workspace ../openome-workspace
	* Note for the checkout access, please ask Jennifer Horkoff <mailto:jenhork@cs.utoronto.ca> at the
	  University of Toronto to get the permission

