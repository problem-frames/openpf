 = User's Manual = 
 * Click at the toolbar button with an icon showing multiple paint frames, 
   a new project Examples will be created
 * Select a file with ".pf" extension under the Examples project folder
	* You can also create your own problem frames by either editing a file
	  with the ".pf" extension, or 
	* by creating a new diagram using the Problem Diagram editor
 * Edit:
	* The syntax highlighting text editor makes sure you are entering a
	  valid problem diagram textually. If you save the text, a diagram will 
	  be created
 	* Inside the graphical editor, edit the name and description of the domains by clicking and editing
		* You can also open up the properties editor (right click) to change the domain types
		* You can edit any node as a subproblem diagram using double click at the node
 * Save when you are using the text editor
	 * The file with ".problem" extension will be generated for the EMF model
	 * The file with ".problem_diagram" extension will be generated for the GMF diagram
	 * If the diagram file already exists, a SaveAs dialog will prompt you to avoid overwrite it

 = Developer's Manual = 
 * To develop OpenPF inside Eclipse IDE, you need the following steps:
  * checkout the code
    git svn clone https://computing-research.open.ac.uk/repos/openpf/trunk openpf
  * Install an compatible Eclipse Modeling Tools IDE
    download eclipse-modeling-galileo-SR2-incubation-linux-gtk.tar.gz
    update the antlr library: http://download.itemis.com/updates/releases/site/site.xml
  * Run Eclipse
	* Import the projects from the workspace folder
  	* Change the Preference/Java/Compiler/Deprecated,Restricted Access/ from Error to Warning
  * Double click at the pf.product file
	* Launch the product as an Eclipse Application

 = Deployer's Manual =
  * Run the headless script build.sh to create a RCP application specific for PF

Enjoy,

Yijun Yu
