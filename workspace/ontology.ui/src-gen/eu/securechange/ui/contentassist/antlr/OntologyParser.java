/*
* generated by Xtext
*/
package eu.securechange.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import eu.securechange.services.OntologyGrammarAccess;

public class OntologyParser extends AbstractContentAssistParser {
	
	@Inject
	private OntologyGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected eu.securechange.ui.contentassist.antlr.internal.InternalOntologyParser createParser() {
		eu.securechange.ui.contentassist.antlr.internal.InternalOntologyParser result = new eu.securechange.ui.contentassist.antlr.internal.InternalOntologyParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getThingAccess().getAlternatives(), "rule__Thing__Alternatives");
					put(grammarAccess.getObjectAccess().getAlternatives(), "rule__Object__Alternatives");
					put(grammarAccess.getBeliefWorldAccess().getAlternatives_1(), "rule__BeliefWorld__Alternatives_1");
					put(grammarAccess.getEntityAccess().getAlternatives(), "rule__Entity__Alternatives");
					put(grammarAccess.getActorAccess().getAlternatives(), "rule__Actor__Alternatives");
					put(grammarAccess.getProcessAccess().getAlternatives(), "rule__Process__Alternatives");
					put(grammarAccess.getResourceAccess().getAlternatives(), "rule__Resource__Alternatives");
					put(grammarAccess.getRelationshipAccess().getAlternatives(), "rule__Relationship__Alternatives");
					put(grammarAccess.getDomainTypeAccess().getAlternatives(), "rule__DomainType__Alternatives");
					put(grammarAccess.getPropositionTypeAccess().getAlternatives(), "rule__PropositionType__Alternatives");
					put(grammarAccess.getDecomposesTypeAccess().getAlternatives(), "rule__DecomposesType__Alternatives");
					put(grammarAccess.getContributesTypeAccess().getAlternatives(), "rule__ContributesType__Alternatives");
					put(grammarAccess.getSituationAccess().getGroup(), "rule__Situation__Group__0");
					put(grammarAccess.getSituationAccess().getGroup_0(), "rule__Situation__Group_0__0");
					put(grammarAccess.getWorldAccess().getGroup(), "rule__World__Group__0");
					put(grammarAccess.getEventAccess().getGroup(), "rule__Event__Group__0");
					put(grammarAccess.getPhysicalWorldAccess().getGroup(), "rule__PhysicalWorld__Group__0");
					put(grammarAccess.getBeliefWorldAccess().getGroup(), "rule__BeliefWorld__Group__0");
					put(grammarAccess.getDomainAccess().getGroup(), "rule__Domain__Group__0");
					put(grammarAccess.getDomainAccess().getGroup_3(), "rule__Domain__Group_3__0");
					put(grammarAccess.getPropositionAccess().getGroup(), "rule__Proposition__Group__0");
					put(grammarAccess.getStakeholderAccess().getGroup(), "rule__Stakeholder__Group__0");
					put(grammarAccess.getAttackerAccess().getGroup(), "rule__Attacker__Group__0");
					put(grammarAccess.getNaturalProcessAccess().getGroup(), "rule__NaturalProcess__Group__0");
					put(grammarAccess.getNaturalProcessAccess().getGroup_2(), "rule__NaturalProcess__Group_2__0");
					put(grammarAccess.getHumanActivityAccess().getGroup(), "rule__HumanActivity__Group__0");
					put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
					put(grammarAccess.getResourceAccess().getGroup_0(), "rule__Resource__Group_0__0");
					put(grammarAccess.getAssetAccess().getGroup(), "rule__Asset__Group__0");
					put(grammarAccess.getWantsAccess().getGroup(), "rule__Wants__Group__0");
					put(grammarAccess.getDoesAccess().getGroup(), "rule__Does__Group__0");
					put(grammarAccess.getDecomposesAccess().getGroup(), "rule__Decomposes__Group__0");
					put(grammarAccess.getTrustsAccess().getGroup(), "rule__Trusts__Group__0");
					put(grammarAccess.getDelegatesAccess().getGroup(), "rule__Delegates__Group__0");
					put(grammarAccess.getContributesAccess().getGroup(), "rule__Contributes__Group__0");
					put(grammarAccess.getFulfilsAccess().getGroup(), "rule__Fulfils__Group__0");
					put(grammarAccess.getProvidesAccess().getGroup(), "rule__Provides__Group__0");
					put(grammarAccess.getConsumesAccess().getGroup(), "rule__Consumes__Group__0");
					put(grammarAccess.getExploitsAccess().getGroup(), "rule__Exploits__Group__0");
					put(grammarAccess.getDamagesAccess().getGroup(), "rule__Damages__Group__0");
					put(grammarAccess.getAttacksAccess().getGroup(), "rule__Attacks__Group__0");
					put(grammarAccess.getArguesAccess().getGroup(), "rule__Argues__Group__0");
					put(grammarAccess.getSituationAccess().getTimeAssignment_0_1(), "rule__Situation__TimeAssignment_0_1");
					put(grammarAccess.getSituationAccess().getWorldAssignment_1(), "rule__Situation__WorldAssignment_1");
					put(grammarAccess.getWorldAccess().getPhysicalAssignment_1(), "rule__World__PhysicalAssignment_1");
					put(grammarAccess.getWorldAccess().getBeliefAssignment_2(), "rule__World__BeliefAssignment_2");
					put(grammarAccess.getEventAccess().getNameAssignment_1(), "rule__Event__NameAssignment_1");
					put(grammarAccess.getPhysicalWorldAccess().getEntitiesAssignment_1(), "rule__PhysicalWorld__EntitiesAssignment_1");
					put(grammarAccess.getBeliefWorldAccess().getDomainsAssignment_1_0(), "rule__BeliefWorld__DomainsAssignment_1_0");
					put(grammarAccess.getBeliefWorldAccess().getRelationshipsAssignment_1_1(), "rule__BeliefWorld__RelationshipsAssignment_1_1");
					put(grammarAccess.getDomainAccess().getNameAssignment_0(), "rule__Domain__NameAssignment_0");
					put(grammarAccess.getDomainAccess().getTypeAssignment_1(), "rule__Domain__TypeAssignment_1");
					put(grammarAccess.getDomainAccess().getPropertiesAssignment_2(), "rule__Domain__PropertiesAssignment_2");
					put(grammarAccess.getDomainAccess().getPropertiesAssignment_3_1(), "rule__Domain__PropertiesAssignment_3_1");
					put(grammarAccess.getPropositionAccess().getTypeAssignment_0(), "rule__Proposition__TypeAssignment_0");
					put(grammarAccess.getPropositionAccess().getNameAssignment_1(), "rule__Proposition__NameAssignment_1");
					put(grammarAccess.getStakeholderAccess().getNameAssignment_1(), "rule__Stakeholder__NameAssignment_1");
					put(grammarAccess.getAttackerAccess().getNameAssignment_1(), "rule__Attacker__NameAssignment_1");
					put(grammarAccess.getNaturalProcessAccess().getNameAssignment_1(), "rule__NaturalProcess__NameAssignment_1");
					put(grammarAccess.getNaturalProcessAccess().getActivitiesAssignment_2_1(), "rule__NaturalProcess__ActivitiesAssignment_2_1");
					put(grammarAccess.getHumanActivityAccess().getNameAssignment_2(), "rule__HumanActivity__NameAssignment_2");
					put(grammarAccess.getHumanActivityAccess().getActionsAssignment_3(), "rule__HumanActivity__ActionsAssignment_3");
					put(grammarAccess.getActionAccess().getNameAssignment_1(), "rule__Action__NameAssignment_1");
					put(grammarAccess.getResourceAccess().getNameAssignment_0_1(), "rule__Resource__NameAssignment_0_1");
					put(grammarAccess.getAssetAccess().getNameAssignment_1(), "rule__Asset__NameAssignment_1");
					put(grammarAccess.getWantsAccess().getTypeAssignment_0(), "rule__Wants__TypeAssignment_0");
					put(grammarAccess.getWantsAccess().getSourceAssignment_2(), "rule__Wants__SourceAssignment_2");
					put(grammarAccess.getWantsAccess().getTargetAssignment_4(), "rule__Wants__TargetAssignment_4");
					put(grammarAccess.getDoesAccess().getTypeAssignment_0(), "rule__Does__TypeAssignment_0");
					put(grammarAccess.getDoesAccess().getSourceAssignment_2(), "rule__Does__SourceAssignment_2");
					put(grammarAccess.getDoesAccess().getTargetAssignment_4(), "rule__Does__TargetAssignment_4");
					put(grammarAccess.getDecomposesAccess().getTypeAssignment_0(), "rule__Decomposes__TypeAssignment_0");
					put(grammarAccess.getDecomposesAccess().getSourceAssignment_2(), "rule__Decomposes__SourceAssignment_2");
					put(grammarAccess.getDecomposesAccess().getTargetAssignment_4(), "rule__Decomposes__TargetAssignment_4");
					put(grammarAccess.getTrustsAccess().getTypeAssignment_0(), "rule__Trusts__TypeAssignment_0");
					put(grammarAccess.getTrustsAccess().getSourceAssignment_2(), "rule__Trusts__SourceAssignment_2");
					put(grammarAccess.getTrustsAccess().getTargetAssignment_4(), "rule__Trusts__TargetAssignment_4");
					put(grammarAccess.getDelegatesAccess().getTypeAssignment_0(), "rule__Delegates__TypeAssignment_0");
					put(grammarAccess.getDelegatesAccess().getSourceAssignment_2(), "rule__Delegates__SourceAssignment_2");
					put(grammarAccess.getDelegatesAccess().getTargetAssignment_4(), "rule__Delegates__TargetAssignment_4");
					put(grammarAccess.getContributesAccess().getTypeAssignment_0(), "rule__Contributes__TypeAssignment_0");
					put(grammarAccess.getContributesAccess().getSourceAssignment_2(), "rule__Contributes__SourceAssignment_2");
					put(grammarAccess.getContributesAccess().getTargetAssignment_4(), "rule__Contributes__TargetAssignment_4");
					put(grammarAccess.getFulfilsAccess().getTypeAssignment_0(), "rule__Fulfils__TypeAssignment_0");
					put(grammarAccess.getFulfilsAccess().getSourceAssignment_2(), "rule__Fulfils__SourceAssignment_2");
					put(grammarAccess.getFulfilsAccess().getTargetAssignment_4(), "rule__Fulfils__TargetAssignment_4");
					put(grammarAccess.getProvidesAccess().getTypeAssignment_0(), "rule__Provides__TypeAssignment_0");
					put(grammarAccess.getProvidesAccess().getSourceAssignment_2(), "rule__Provides__SourceAssignment_2");
					put(grammarAccess.getProvidesAccess().getTargetAssignment_4(), "rule__Provides__TargetAssignment_4");
					put(grammarAccess.getConsumesAccess().getTypeAssignment_0(), "rule__Consumes__TypeAssignment_0");
					put(grammarAccess.getConsumesAccess().getSourceAssignment_2(), "rule__Consumes__SourceAssignment_2");
					put(grammarAccess.getConsumesAccess().getTargetAssignment_4(), "rule__Consumes__TargetAssignment_4");
					put(grammarAccess.getExploitsAccess().getTypeAssignment_0(), "rule__Exploits__TypeAssignment_0");
					put(grammarAccess.getExploitsAccess().getSourceAssignment_2(), "rule__Exploits__SourceAssignment_2");
					put(grammarAccess.getExploitsAccess().getTargetAssignment_4(), "rule__Exploits__TargetAssignment_4");
					put(grammarAccess.getDamagesAccess().getTypeAssignment_0(), "rule__Damages__TypeAssignment_0");
					put(grammarAccess.getDamagesAccess().getSourceAssignment_2(), "rule__Damages__SourceAssignment_2");
					put(grammarAccess.getDamagesAccess().getTargetAssignment_4(), "rule__Damages__TargetAssignment_4");
					put(grammarAccess.getAttacksAccess().getTypeAssignment_0(), "rule__Attacks__TypeAssignment_0");
					put(grammarAccess.getAttacksAccess().getSourceAssignment_2(), "rule__Attacks__SourceAssignment_2");
					put(grammarAccess.getAttacksAccess().getTargetAssignment_4(), "rule__Attacks__TargetAssignment_4");
					put(grammarAccess.getArguesAccess().getTypeAssignment_0(), "rule__Argues__TypeAssignment_0");
					put(grammarAccess.getArguesAccess().getSourceAssignment_2(), "rule__Argues__SourceAssignment_2");
					put(grammarAccess.getArguesAccess().getTargetAssignment_4(), "rule__Argues__TargetAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			eu.securechange.ui.contentassist.antlr.internal.InternalOntologyParser typedParser = (eu.securechange.ui.contentassist.antlr.internal.InternalOntologyParser) parser;
			typedParser.entryRuleSituation();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public OntologyGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(OntologyGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
