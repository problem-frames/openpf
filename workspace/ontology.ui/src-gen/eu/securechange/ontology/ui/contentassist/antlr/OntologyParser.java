/*
* generated by Xtext
*/
package eu.securechange.ontology.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import eu.securechange.ontology.services.OntologyGrammarAccess;

public class OntologyParser extends AbstractContentAssistParser {
	
	@Inject
	private OntologyGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected eu.securechange.ontology.ui.contentassist.antlr.internal.InternalOntologyParser createParser() {
		eu.securechange.ontology.ui.contentassist.antlr.internal.InternalOntologyParser result = new eu.securechange.ontology.ui.contentassist.antlr.internal.InternalOntologyParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getWorldAccess().getAlternatives_1(), "rule__World__Alternatives_1");
					put(grammarAccess.getGoalAccess().getAlternatives(), "rule__Goal__Alternatives");
					put(grammarAccess.getDomainAccess().getAlternatives(), "rule__Domain__Alternatives");
					put(grammarAccess.getRelTypeAccess().getAlternatives(), "rule__RelType__Alternatives");
					put(grammarAccess.getSituationAccess().getGroup(), "rule__Situation__Group__0");
					put(grammarAccess.getSituationAccess().getGroup_0(), "rule__Situation__Group_0__0");
					put(grammarAccess.getWorldAccess().getGroup(), "rule__World__Group__0");
					put(grammarAccess.getSecurityGoalAccess().getGroup(), "rule__SecurityGoal__Group__0");
					put(grammarAccess.getSecurityGoalAccess().getGroup_2(), "rule__SecurityGoal__Group_2__0");
					put(grammarAccess.getRequirementAccess().getGroup(), "rule__Requirement__Group__0");
					put(grammarAccess.getRequirementAccess().getGroup_2(), "rule__Requirement__Group_2__0");
					put(grammarAccess.getAntiRequirementAccess().getGroup(), "rule__AntiRequirement__Group__0");
					put(grammarAccess.getAntiRequirementAccess().getGroup_2(), "rule__AntiRequirement__Group_2__0");
					put(grammarAccess.getActorAccess().getGroup(), "rule__Actor__Group__0");
					put(grammarAccess.getActorAccess().getGroup_2(), "rule__Actor__Group_2__0");
					put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
					put(grammarAccess.getActionAccess().getGroup_2(), "rule__Action__Group_2__0");
					put(grammarAccess.getAssetAccess().getGroup(), "rule__Asset__Group__0");
					put(grammarAccess.getAssetAccess().getGroup_2(), "rule__Asset__Group_2__0");
					put(grammarAccess.getResourceAccess().getGroup(), "rule__Resource__Group__0");
					put(grammarAccess.getResourceAccess().getGroup_2(), "rule__Resource__Group_2__0");
					put(grammarAccess.getAttackerAccess().getGroup(), "rule__Attacker__Group__0");
					put(grammarAccess.getAttackerAccess().getGroup_2(), "rule__Attacker__Group_2__0");
					put(grammarAccess.getRelationshipAccess().getGroup(), "rule__Relationship__Group__0");
					put(grammarAccess.getSituationAccess().getTimeAssignment_0_1(), "rule__Situation__TimeAssignment_0_1");
					put(grammarAccess.getSituationAccess().getWorldAssignment_1(), "rule__Situation__WorldAssignment_1");
					put(grammarAccess.getWorldAccess().getGoalsAssignment_1_0(), "rule__World__GoalsAssignment_1_0");
					put(grammarAccess.getWorldAccess().getDomainsAssignment_1_1(), "rule__World__DomainsAssignment_1_1");
					put(grammarAccess.getWorldAccess().getRelationshipsAssignment_1_2(), "rule__World__RelationshipsAssignment_1_2");
					put(grammarAccess.getSecurityGoalAccess().getNameAssignment_0(), "rule__SecurityGoal__NameAssignment_0");
					put(grammarAccess.getSecurityGoalAccess().getTypeAssignment_1(), "rule__SecurityGoal__TypeAssignment_1");
					put(grammarAccess.getSecurityGoalAccess().getPropertiesAssignment_2_1(), "rule__SecurityGoal__PropertiesAssignment_2_1");
					put(grammarAccess.getRequirementAccess().getNameAssignment_0(), "rule__Requirement__NameAssignment_0");
					put(grammarAccess.getRequirementAccess().getTypeAssignment_1(), "rule__Requirement__TypeAssignment_1");
					put(grammarAccess.getRequirementAccess().getPropertiesAssignment_2_1(), "rule__Requirement__PropertiesAssignment_2_1");
					put(grammarAccess.getAntiRequirementAccess().getNameAssignment_0(), "rule__AntiRequirement__NameAssignment_0");
					put(grammarAccess.getAntiRequirementAccess().getTypeAssignment_1(), "rule__AntiRequirement__TypeAssignment_1");
					put(grammarAccess.getAntiRequirementAccess().getPropertiesAssignment_2_1(), "rule__AntiRequirement__PropertiesAssignment_2_1");
					put(grammarAccess.getActorAccess().getNameAssignment_0(), "rule__Actor__NameAssignment_0");
					put(grammarAccess.getActorAccess().getTypeAssignment_1(), "rule__Actor__TypeAssignment_1");
					put(grammarAccess.getActorAccess().getPropertiesAssignment_2_1(), "rule__Actor__PropertiesAssignment_2_1");
					put(grammarAccess.getActionAccess().getNameAssignment_0(), "rule__Action__NameAssignment_0");
					put(grammarAccess.getActionAccess().getTypeAssignment_1(), "rule__Action__TypeAssignment_1");
					put(grammarAccess.getActionAccess().getPropertiesAssignment_2_1(), "rule__Action__PropertiesAssignment_2_1");
					put(grammarAccess.getAssetAccess().getNameAssignment_0(), "rule__Asset__NameAssignment_0");
					put(grammarAccess.getAssetAccess().getTypeAssignment_1(), "rule__Asset__TypeAssignment_1");
					put(grammarAccess.getAssetAccess().getPropertiesAssignment_2_1(), "rule__Asset__PropertiesAssignment_2_1");
					put(grammarAccess.getResourceAccess().getNameAssignment_0(), "rule__Resource__NameAssignment_0");
					put(grammarAccess.getResourceAccess().getTypeAssignment_1(), "rule__Resource__TypeAssignment_1");
					put(grammarAccess.getResourceAccess().getPropertiesAssignment_2_1(), "rule__Resource__PropertiesAssignment_2_1");
					put(grammarAccess.getAttackerAccess().getNameAssignment_0(), "rule__Attacker__NameAssignment_0");
					put(grammarAccess.getAttackerAccess().getTypeAssignment_1(), "rule__Attacker__TypeAssignment_1");
					put(grammarAccess.getAttackerAccess().getPropertiesAssignment_2_1(), "rule__Attacker__PropertiesAssignment_2_1");
					put(grammarAccess.getPropositionAccess().getNameAssignment(), "rule__Proposition__NameAssignment");
					put(grammarAccess.getRelationshipAccess().getTypeAssignment_0(), "rule__Relationship__TypeAssignment_0");
					put(grammarAccess.getRelationshipAccess().getSourceAssignment_2(), "rule__Relationship__SourceAssignment_2");
					put(grammarAccess.getRelationshipAccess().getTargetAssignment_4(), "rule__Relationship__TargetAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			eu.securechange.ontology.ui.contentassist.antlr.internal.InternalOntologyParser typedParser = (eu.securechange.ontology.ui.contentassist.antlr.internal.InternalOntologyParser) parser;
			typedParser.entryRuleSituation();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public OntologyGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(OntologyGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
