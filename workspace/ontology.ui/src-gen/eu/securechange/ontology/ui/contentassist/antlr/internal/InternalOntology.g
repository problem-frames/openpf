/*
* generated by Xtext
*/
grammar InternalOntology;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package eu.securechange.ontology.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package eu.securechange.ontology.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import eu.securechange.ontology.services.OntologyGrammarAccess;

}

@parser::members {
 
 	private OntologyGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(OntologyGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSituation
entryRuleSituation 
:
{ before(grammarAccess.getSituationRule()); }
	 ruleSituation
{ after(grammarAccess.getSituationRule()); } 
	 EOF 
;

// Rule Situation
ruleSituation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSituationAccess().getGroup()); }
(rule__Situation__Group__0)
{ after(grammarAccess.getSituationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWorld
entryRuleWorld 
:
{ before(grammarAccess.getWorldRule()); }
	 ruleWorld
{ after(grammarAccess.getWorldRule()); } 
	 EOF 
;

// Rule World
ruleWorld
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWorldAccess().getGroup()); }
(rule__World__Group__0)
{ after(grammarAccess.getWorldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getGroup()); }
(rule__Event__Group__0)
{ after(grammarAccess.getEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObject
entryRuleObject 
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectAccess().getAlternatives()); }
(rule__Object__Alternatives)
{ after(grammarAccess.getObjectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomain
entryRuleDomain 
:
{ before(grammarAccess.getDomainRule()); }
	 ruleDomain
{ after(grammarAccess.getDomainRule()); } 
	 EOF 
;

// Rule Domain
ruleDomain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainAccess().getGroup()); }
(rule__Domain__Group__0)
{ after(grammarAccess.getDomainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProposition
entryRuleProposition 
:
{ before(grammarAccess.getPropositionRule()); }
	 ruleProposition
{ after(grammarAccess.getPropositionRule()); } 
	 EOF 
;

// Rule Proposition
ruleProposition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropositionAccess().getAlternatives()); }
(rule__Proposition__Alternatives)
{ after(grammarAccess.getPropositionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequirement
entryRuleRequirement 
:
{ before(grammarAccess.getRequirementRule()); }
	 ruleRequirement
{ after(grammarAccess.getRequirementRule()); } 
	 EOF 
;

// Rule Requirement
ruleRequirement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequirementAccess().getAlternatives()); }
(rule__Requirement__Alternatives)
{ after(grammarAccess.getRequirementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomainAssumption
entryRuleDomainAssumption 
:
{ before(grammarAccess.getDomainAssumptionRule()); }
	 ruleDomainAssumption
{ after(grammarAccess.getDomainAssumptionRule()); } 
	 EOF 
;

// Rule DomainAssumption
ruleDomainAssumption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainAssumptionAccess().getGroup()); }
(rule__DomainAssumption__Group__0)
{ after(grammarAccess.getDomainAssumptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionalRequirement
entryRuleFunctionalRequirement 
:
{ before(grammarAccess.getFunctionalRequirementRule()); }
	 ruleFunctionalRequirement
{ after(grammarAccess.getFunctionalRequirementRule()); } 
	 EOF 
;

// Rule FunctionalRequirement
ruleFunctionalRequirement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionalRequirementAccess().getGroup()); }
(rule__FunctionalRequirement__Group__0)
{ after(grammarAccess.getFunctionalRequirementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSecurityRequirement
entryRuleSecurityRequirement 
:
{ before(grammarAccess.getSecurityRequirementRule()); }
	 ruleSecurityRequirement
{ after(grammarAccess.getSecurityRequirementRule()); } 
	 EOF 
;

// Rule SecurityRequirement
ruleSecurityRequirement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSecurityRequirementAccess().getGroup()); }
(rule__SecurityRequirement__Group__0)
{ after(grammarAccess.getSecurityRequirementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAntiRequirement
entryRuleAntiRequirement 
:
{ before(grammarAccess.getAntiRequirementRule()); }
	 ruleAntiRequirement
{ after(grammarAccess.getAntiRequirementRule()); } 
	 EOF 
;

// Rule AntiRequirement
ruleAntiRequirement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAntiRequirementAccess().getGroup()); }
(rule__AntiRequirement__Group__0)
{ after(grammarAccess.getAntiRequirementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualityRequirement
entryRuleQualityRequirement 
:
{ before(grammarAccess.getQualityRequirementRule()); }
	 ruleQualityRequirement
{ after(grammarAccess.getQualityRequirementRule()); } 
	 EOF 
;

// Rule QualityRequirement
ruleQualityRequirement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualityRequirementAccess().getGroup()); }
(rule__QualityRequirement__Group__0)
{ after(grammarAccess.getQualityRequirementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgument
entryRuleArgument 
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentAccess().getGroup()); }
(rule__Argument__Group__0)
{ after(grammarAccess.getArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getAlternatives()); }
(rule__Entity__Alternatives)
{ after(grammarAccess.getEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActor
entryRuleActor 
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorAccess().getAlternatives()); }
(rule__Actor__Alternatives)
{ after(grammarAccess.getActorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStakeholder
entryRuleStakeholder 
:
{ before(grammarAccess.getStakeholderRule()); }
	 ruleStakeholder
{ after(grammarAccess.getStakeholderRule()); } 
	 EOF 
;

// Rule Stakeholder
ruleStakeholder
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStakeholderAccess().getGroup()); }
(rule__Stakeholder__Group__0)
{ after(grammarAccess.getStakeholderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttacker
entryRuleAttacker 
:
{ before(grammarAccess.getAttackerRule()); }
	 ruleAttacker
{ after(grammarAccess.getAttackerRule()); } 
	 EOF 
;

// Rule Attacker
ruleAttacker
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttackerAccess().getGroup()); }
(rule__Attacker__Group__0)
{ after(grammarAccess.getAttackerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcess
entryRuleProcess 
:
{ before(grammarAccess.getProcessRule()); }
	 ruleProcess
{ after(grammarAccess.getProcessRule()); } 
	 EOF 
;

// Rule Process
ruleProcess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcessAccess().getAlternatives()); }
(rule__Process__Alternatives)
{ after(grammarAccess.getProcessAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNaturalProcess
entryRuleNaturalProcess 
:
{ before(grammarAccess.getNaturalProcessRule()); }
	 ruleNaturalProcess
{ after(grammarAccess.getNaturalProcessRule()); } 
	 EOF 
;

// Rule NaturalProcess
ruleNaturalProcess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNaturalProcessAccess().getGroup()); }
(rule__NaturalProcess__Group__0)
{ after(grammarAccess.getNaturalProcessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHumanActivity
entryRuleHumanActivity 
:
{ before(grammarAccess.getHumanActivityRule()); }
	 ruleHumanActivity
{ after(grammarAccess.getHumanActivityRule()); } 
	 EOF 
;

// Rule HumanActivity
ruleHumanActivity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHumanActivityAccess().getGroup()); }
(rule__HumanActivity__Group__0)
{ after(grammarAccess.getHumanActivityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getGroup()); }
(rule__Action__Group__0)
{ after(grammarAccess.getActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResource
entryRuleResource 
:
{ before(grammarAccess.getResourceRule()); }
	 ruleResource
{ after(grammarAccess.getResourceRule()); } 
	 EOF 
;

// Rule Resource
ruleResource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceAccess().getAlternatives()); }
(rule__Resource__Alternatives)
{ after(grammarAccess.getResourceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAsset
entryRuleAsset 
:
{ before(grammarAccess.getAssetRule()); }
	 ruleAsset
{ after(grammarAccess.getAssetRule()); } 
	 EOF 
;

// Rule Asset
ruleAsset
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssetAccess().getGroup()); }
(rule__Asset__Group__0)
{ after(grammarAccess.getAssetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationship
entryRuleRelationship 
:
{ before(grammarAccess.getRelationshipRule()); }
	 ruleRelationship
{ after(grammarAccess.getRelationshipRule()); } 
	 EOF 
;

// Rule Relationship
ruleRelationship
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationshipAccess().getAlternatives()); }
(rule__Relationship__Alternatives)
{ after(grammarAccess.getRelationshipAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWants
entryRuleWants 
:
{ before(grammarAccess.getWantsRule()); }
	 ruleWants
{ after(grammarAccess.getWantsRule()); } 
	 EOF 
;

// Rule Wants
ruleWants
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWantsAccess().getGroup()); }
(rule__Wants__Group__0)
{ after(grammarAccess.getWantsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoes
entryRuleDoes 
:
{ before(grammarAccess.getDoesRule()); }
	 ruleDoes
{ after(grammarAccess.getDoesRule()); } 
	 EOF 
;

// Rule Does
ruleDoes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoesAccess().getGroup()); }
(rule__Does__Group__0)
{ after(grammarAccess.getDoesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecomposes
entryRuleDecomposes 
:
{ before(grammarAccess.getDecomposesRule()); }
	 ruleDecomposes
{ after(grammarAccess.getDecomposesRule()); } 
	 EOF 
;

// Rule Decomposes
ruleDecomposes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecomposesAccess().getGroup()); }
(rule__Decomposes__Group__0)
{ after(grammarAccess.getDecomposesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrusts
entryRuleTrusts 
:
{ before(grammarAccess.getTrustsRule()); }
	 ruleTrusts
{ after(grammarAccess.getTrustsRule()); } 
	 EOF 
;

// Rule Trusts
ruleTrusts
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrustsAccess().getGroup()); }
(rule__Trusts__Group__0)
{ after(grammarAccess.getTrustsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelegates
entryRuleDelegates 
:
{ before(grammarAccess.getDelegatesRule()); }
	 ruleDelegates
{ after(grammarAccess.getDelegatesRule()); } 
	 EOF 
;

// Rule Delegates
ruleDelegates
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelegatesAccess().getGroup()); }
(rule__Delegates__Group__0)
{ after(grammarAccess.getDelegatesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContributes
entryRuleContributes 
:
{ before(grammarAccess.getContributesRule()); }
	 ruleContributes
{ after(grammarAccess.getContributesRule()); } 
	 EOF 
;

// Rule Contributes
ruleContributes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContributesAccess().getGroup()); }
(rule__Contributes__Group__0)
{ after(grammarAccess.getContributesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFulfils
entryRuleFulfils 
:
{ before(grammarAccess.getFulfilsRule()); }
	 ruleFulfils
{ after(grammarAccess.getFulfilsRule()); } 
	 EOF 
;

// Rule Fulfils
ruleFulfils
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFulfilsAccess().getGroup()); }
(rule__Fulfils__Group__0)
{ after(grammarAccess.getFulfilsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProvides
entryRuleProvides 
:
{ before(grammarAccess.getProvidesRule()); }
	 ruleProvides
{ after(grammarAccess.getProvidesRule()); } 
	 EOF 
;

// Rule Provides
ruleProvides
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProvidesAccess().getGroup()); }
(rule__Provides__Group__0)
{ after(grammarAccess.getProvidesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConsumes
entryRuleConsumes 
:
{ before(grammarAccess.getConsumesRule()); }
	 ruleConsumes
{ after(grammarAccess.getConsumesRule()); } 
	 EOF 
;

// Rule Consumes
ruleConsumes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConsumesAccess().getGroup()); }
(rule__Consumes__Group__0)
{ after(grammarAccess.getConsumesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExploits
entryRuleExploits 
:
{ before(grammarAccess.getExploitsRule()); }
	 ruleExploits
{ after(grammarAccess.getExploitsRule()); } 
	 EOF 
;

// Rule Exploits
ruleExploits
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExploitsAccess().getGroup()); }
(rule__Exploits__Group__0)
{ after(grammarAccess.getExploitsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDamages
entryRuleDamages 
:
{ before(grammarAccess.getDamagesRule()); }
	 ruleDamages
{ after(grammarAccess.getDamagesRule()); } 
	 EOF 
;

// Rule Damages
ruleDamages
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDamagesAccess().getGroup()); }
(rule__Damages__Group__0)
{ after(grammarAccess.getDamagesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttacks
entryRuleAttacks 
:
{ before(grammarAccess.getAttacksRule()); }
	 ruleAttacks
{ after(grammarAccess.getAttacksRule()); } 
	 EOF 
;

// Rule Attacks
ruleAttacks
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttacksAccess().getGroup()); }
(rule__Attacks__Group__0)
{ after(grammarAccess.getAttacksAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgues
entryRuleArgues 
:
{ before(grammarAccess.getArguesRule()); }
	 ruleArgues
{ after(grammarAccess.getArguesRule()); } 
	 EOF 
;

// Rule Argues
ruleArgues
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArguesAccess().getGroup()); }
(rule__Argues__Group__0)
{ after(grammarAccess.getArguesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule DomainType
ruleDomainType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainTypeAccess().getAlternatives()); }
(rule__DomainType__Alternatives)
{ after(grammarAccess.getDomainTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DecomposesType
ruleDecomposesType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecomposesTypeAccess().getAlternatives()); }
(rule__DecomposesType__Alternatives)
{ after(grammarAccess.getDecomposesTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ContributesType
ruleContributesType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributesTypeAccess().getAlternatives()); }
(rule__ContributesType__Alternatives)
{ after(grammarAccess.getContributesTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule FulfilsType
ruleFulfilsType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfilsTypeAccess().getFulfilsEnumLiteralDeclaration()); }
(	'fulfils' 
)
{ after(grammarAccess.getFulfilsTypeAccess().getFulfilsEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__World__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getEntitiesAssignment_1_0()); }
(rule__World__EntitiesAssignment_1_0)
{ after(grammarAccess.getWorldAccess().getEntitiesAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getWorldAccess().getDomainsAssignment_1_1()); }
(rule__World__DomainsAssignment_1_1)
{ after(grammarAccess.getWorldAccess().getDomainsAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getWorldAccess().getRelationshipsAssignment_1_2()); }
(rule__World__RelationshipsAssignment_1_2)
{ after(grammarAccess.getWorldAccess().getRelationshipsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getEntityParserRuleCall_0()); }
	ruleEntity
{ after(grammarAccess.getObjectAccess().getEntityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getObjectAccess().getRelationshipParserRuleCall_1()); }
	ruleRelationship
{ after(grammarAccess.getObjectAccess().getRelationshipParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getObjectAccess().getPropositionParserRuleCall_2()); }
	ruleProposition
{ after(grammarAccess.getObjectAccess().getPropositionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionAccess().getDomainAssumptionParserRuleCall_0()); }
	ruleDomainAssumption
{ after(grammarAccess.getPropositionAccess().getDomainAssumptionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropositionAccess().getRequirementParserRuleCall_1()); }
	ruleRequirement
{ after(grammarAccess.getPropositionAccess().getRequirementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPropositionAccess().getArgumentParserRuleCall_2()); }
	ruleArgument
{ after(grammarAccess.getPropositionAccess().getArgumentParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getFunctionalRequirementParserRuleCall_0()); }
	ruleFunctionalRequirement
{ after(grammarAccess.getRequirementAccess().getFunctionalRequirementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRequirementAccess().getSecurityRequirementParserRuleCall_1()); }
	ruleSecurityRequirement
{ after(grammarAccess.getRequirementAccess().getSecurityRequirementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRequirementAccess().getAntiRequirementParserRuleCall_2()); }
	ruleAntiRequirement
{ after(grammarAccess.getRequirementAccess().getAntiRequirementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRequirementAccess().getQualityRequirementParserRuleCall_3()); }
	ruleQualityRequirement
{ after(grammarAccess.getRequirementAccess().getQualityRequirementParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getActorParserRuleCall_0()); }
	ruleActor
{ after(grammarAccess.getEntityAccess().getActorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getProcessParserRuleCall_1()); }
	ruleProcess
{ after(grammarAccess.getEntityAccess().getProcessParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getResourceParserRuleCall_2()); }
	ruleResource
{ after(grammarAccess.getEntityAccess().getResourceParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getStakeholderParserRuleCall_0()); }
	ruleStakeholder
{ after(grammarAccess.getActorAccess().getStakeholderParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActorAccess().getAttackerParserRuleCall_1()); }
	ruleAttacker
{ after(grammarAccess.getActorAccess().getAttackerParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessAccess().getNaturalProcessParserRuleCall_0()); }
	ruleNaturalProcess
{ after(grammarAccess.getProcessAccess().getNaturalProcessParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getProcessAccess().getHumanActivityParserRuleCall_1()); }
	ruleHumanActivity
{ after(grammarAccess.getProcessAccess().getHumanActivityParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getGroup_0()); }
(rule__Resource__Group_0__0)
{ after(grammarAccess.getResourceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getResourceAccess().getAssetParserRuleCall_1()); }
	ruleAsset
{ after(grammarAccess.getResourceAccess().getAssetParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getWantsParserRuleCall_0()); }
	ruleWants
{ after(grammarAccess.getRelationshipAccess().getWantsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getDoesParserRuleCall_1()); }
	ruleDoes
{ after(grammarAccess.getRelationshipAccess().getDoesParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getDecomposesParserRuleCall_2()); }
	ruleDecomposes
{ after(grammarAccess.getRelationshipAccess().getDecomposesParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getTrustsParserRuleCall_3()); }
	ruleTrusts
{ after(grammarAccess.getRelationshipAccess().getTrustsParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getDelegatesParserRuleCall_4()); }
	ruleDelegates
{ after(grammarAccess.getRelationshipAccess().getDelegatesParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getContributesParserRuleCall_5()); }
	ruleContributes
{ after(grammarAccess.getRelationshipAccess().getContributesParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getFulfilsParserRuleCall_6()); }
	ruleFulfils
{ after(grammarAccess.getRelationshipAccess().getFulfilsParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getProvidesParserRuleCall_7()); }
	ruleProvides
{ after(grammarAccess.getRelationshipAccess().getProvidesParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getConsumesParserRuleCall_8()); }
	ruleConsumes
{ after(grammarAccess.getRelationshipAccess().getConsumesParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getExploitsParserRuleCall_9()); }
	ruleExploits
{ after(grammarAccess.getRelationshipAccess().getExploitsParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getDamagesParserRuleCall_10()); }
	ruleDamages
{ after(grammarAccess.getRelationshipAccess().getDamagesParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getAttacksParserRuleCall_11()); }
	ruleAttacks
{ after(grammarAccess.getRelationshipAccess().getAttacksParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getArguesParserRuleCall_12()); }
	ruleArgues
{ after(grammarAccess.getRelationshipAccess().getArguesParserRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getSourceAssignment_2_0()); }
(rule__Provides__SourceAssignment_2_0)
{ after(grammarAccess.getProvidesAccess().getSourceAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getProvidesAccess().getSourceAssignment_2_1()); }
(rule__Provides__SourceAssignment_2_1)
{ after(grammarAccess.getProvidesAccess().getSourceAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Consumes__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsumesAccess().getSourceAssignment_2_0()); }
(rule__Consumes__SourceAssignment_2_0)
{ after(grammarAccess.getConsumesAccess().getSourceAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getConsumesAccess().getSourceAssignment_2_1()); }
(rule__Consumes__SourceAssignment_2_1)
{ after(grammarAccess.getConsumesAccess().getSourceAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainTypeAccess().getSpecificationEnumLiteralDeclaration_0()); }
(	'S' 
)
{ after(grammarAccess.getDomainTypeAccess().getSpecificationEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDomainTypeAccess().getRequirementEnumLiteralDeclaration_1()); }
(	'R' 
)
{ after(grammarAccess.getDomainTypeAccess().getRequirementEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getDomainTypeAccess().getWorldEnumLiteralDeclaration_2()); }
(	'W' 
)
{ after(grammarAccess.getDomainTypeAccess().getWorldEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecomposesType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecomposesTypeAccess().getANDEnumLiteralDeclaration_0()); }
(	'and' 
)
{ after(grammarAccess.getDecomposesTypeAccess().getANDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDecomposesTypeAccess().getOREnumLiteralDeclaration_1()); }
(	'or' 
)
{ after(grammarAccess.getDecomposesTypeAccess().getOREnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContributesType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributesTypeAccess().getHURTEnumLiteralDeclaration_0()); }
(	'-' 
)
{ after(grammarAccess.getContributesTypeAccess().getHURTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getContributesTypeAccess().getHELPEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getContributesTypeAccess().getHELPEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getContributesTypeAccess().getBREAKEnumLiteralDeclaration_2()); }
(	'--' 
)
{ after(grammarAccess.getContributesTypeAccess().getBREAKEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getContributesTypeAccess().getMAKEEnumLiteralDeclaration_3()); }
(	'++' 
)
{ after(grammarAccess.getContributesTypeAccess().getMAKEEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Situation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group__0__Impl
	rule__Situation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getGroup_0()); }
(rule__Situation__Group_0__0)?
{ after(grammarAccess.getSituationAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Situation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getWorldAssignment_1()); }
(rule__Situation__WorldAssignment_1)
{ after(grammarAccess.getSituationAccess().getWorldAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Situation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group_0__0__Impl
	rule__Situation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getModelKeyword_0_0()); }

	'model' 

{ after(grammarAccess.getSituationAccess().getModelKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Situation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group_0__1__Impl
	rule__Situation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getTimeAssignment_0_1()); }
(rule__Situation__TimeAssignment_0_1)
{ after(grammarAccess.getSituationAccess().getTimeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Situation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getSituationAccess().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__World__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__World__Group__0__Impl
	rule__World__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getWorldAction_0()); }
(

)
{ after(grammarAccess.getWorldAccess().getWorldAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__World__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__World__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getAlternatives_1()); }
(rule__World__Alternatives_1)*
{ after(grammarAccess.getWorldAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Event__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getEventKeyword_0()); }

	'event' 

{ after(grammarAccess.getEventAccess().getEventKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameAssignment_1()); }
(rule__Event__NameAssignment_1)
{ after(grammarAccess.getEventAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Domain__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group__0__Impl
	rule__Domain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getNameAssignment_0()); }
(rule__Domain__NameAssignment_0)
{ after(grammarAccess.getDomainAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group__1__Impl
	rule__Domain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getTypeAssignment_1()); }
(rule__Domain__TypeAssignment_1)
{ after(grammarAccess.getDomainAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getGroup_2()); }
(rule__Domain__Group_2__0)*
{ after(grammarAccess.getDomainAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Domain__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group_2__0__Impl
	rule__Domain__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getDomainAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getPropertiesAssignment_2_1()); }
(rule__Domain__PropertiesAssignment_2_1)
{ after(grammarAccess.getDomainAccess().getPropertiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DomainAssumption__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainAssumption__Group__0__Impl
	rule__DomainAssumption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAssumption__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAssumptionAccess().getDAKeyword_0()); }

	'DA' 

{ after(grammarAccess.getDomainAssumptionAccess().getDAKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainAssumption__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainAssumption__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAssumption__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAssumptionAccess().getNameAssignment_1()); }
(rule__DomainAssumption__NameAssignment_1)
{ after(grammarAccess.getDomainAssumptionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionalRequirement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalRequirement__Group__0__Impl
	rule__FunctionalRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalRequirement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalRequirementAccess().getFRKeyword_0()); }

	'FR' 

{ after(grammarAccess.getFunctionalRequirementAccess().getFRKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalRequirement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalRequirement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalRequirement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalRequirementAccess().getNameAssignment_1()); }
(rule__FunctionalRequirement__NameAssignment_1)
{ after(grammarAccess.getFunctionalRequirementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SecurityRequirement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecurityRequirement__Group__0__Impl
	rule__SecurityRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SecurityRequirement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecurityRequirementAccess().getSRKeyword_0()); }

	'SR' 

{ after(grammarAccess.getSecurityRequirementAccess().getSRKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SecurityRequirement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecurityRequirement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SecurityRequirement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecurityRequirementAccess().getNameAssignment_1()); }
(rule__SecurityRequirement__NameAssignment_1)
{ after(grammarAccess.getSecurityRequirementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AntiRequirement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntiRequirement__Group__0__Impl
	rule__AntiRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AntiRequirement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntiRequirementAccess().getARKeyword_0()); }

	'AR' 

{ after(grammarAccess.getAntiRequirementAccess().getARKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AntiRequirement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntiRequirement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AntiRequirement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntiRequirementAccess().getNameAssignment_1()); }
(rule__AntiRequirement__NameAssignment_1)
{ after(grammarAccess.getAntiRequirementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualityRequirement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualityRequirement__Group__0__Impl
	rule__QualityRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRequirement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualityRequirementAccess().getQKeyword_0()); }

	'Q' 

{ after(grammarAccess.getQualityRequirementAccess().getQKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualityRequirement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualityRequirement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRequirement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualityRequirementAccess().getNameAssignment_1()); }
(rule__QualityRequirement__NameAssignment_1)
{ after(grammarAccess.getQualityRequirementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Argument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getAKeyword_0()); }

	'A' 

{ after(grammarAccess.getArgumentAccess().getAKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
(rule__Argument__NameAssignment_1)
{ after(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stakeholder__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group__0__Impl
	rule__Stakeholder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getActorKeyword_0()); }

	'actor' 

{ after(grammarAccess.getStakeholderAccess().getActorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getNameAssignment_1()); }
(rule__Stakeholder__NameAssignment_1)
{ after(grammarAccess.getStakeholderAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attacker__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacker__Group__0__Impl
	rule__Attacker__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacker__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttackerAccess().getAttackerKeyword_0()); }

	'attacker' 

{ after(grammarAccess.getAttackerAccess().getAttackerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attacker__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacker__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacker__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttackerAccess().getNameAssignment_1()); }
(rule__Attacker__NameAssignment_1)
{ after(grammarAccess.getAttackerAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NaturalProcess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NaturalProcess__Group__0__Impl
	rule__NaturalProcess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalProcess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNaturalProcessAccess().getProcessKeyword_0()); }

	'process' 

{ after(grammarAccess.getNaturalProcessAccess().getProcessKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NaturalProcess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NaturalProcess__Group__1__Impl
	rule__NaturalProcess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalProcess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNaturalProcessAccess().getNameAssignment_1()); }
(rule__NaturalProcess__NameAssignment_1)
{ after(grammarAccess.getNaturalProcessAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NaturalProcess__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NaturalProcess__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalProcess__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNaturalProcessAccess().getGroup_2()); }
(rule__NaturalProcess__Group_2__0)?
{ after(grammarAccess.getNaturalProcessAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NaturalProcess__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NaturalProcess__Group_2__0__Impl
	rule__NaturalProcess__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalProcess__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNaturalProcessAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getNaturalProcessAccess().getLeftCurlyBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NaturalProcess__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NaturalProcess__Group_2__1__Impl
	rule__NaturalProcess__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalProcess__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNaturalProcessAccess().getActivitiesAssignment_2_1()); }
(rule__NaturalProcess__ActivitiesAssignment_2_1)*
{ after(grammarAccess.getNaturalProcessAccess().getActivitiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NaturalProcess__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NaturalProcess__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalProcess__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNaturalProcessAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getNaturalProcessAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HumanActivity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HumanActivity__Group__0__Impl
	rule__HumanActivity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HumanActivity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHumanActivityAccess().getActivityAction_0()); }
(

)
{ after(grammarAccess.getHumanActivityAccess().getActivityAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HumanActivity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HumanActivity__Group__1__Impl
	rule__HumanActivity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HumanActivity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHumanActivityAccess().getActivityKeyword_1()); }

	'activity' 

{ after(grammarAccess.getHumanActivityAccess().getActivityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HumanActivity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HumanActivity__Group__2__Impl
	rule__HumanActivity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HumanActivity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHumanActivityAccess().getNameAssignment_2()); }
(rule__HumanActivity__NameAssignment_2)
{ after(grammarAccess.getHumanActivityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HumanActivity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HumanActivity__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HumanActivity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHumanActivityAccess().getActionsAssignment_3()); }
(rule__HumanActivity__ActionsAssignment_3)*
{ after(grammarAccess.getHumanActivityAccess().getActionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Action__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getActionKeyword_0()); }

	'action' 

{ after(grammarAccess.getActionAccess().getActionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameAssignment_1()); }
(rule__Action__NameAssignment_1)
{ after(grammarAccess.getActionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Resource__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Resource__Group_0__0__Impl
	rule__Resource__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getResourceKeyword_0_0()); }

	'resource' 

{ after(grammarAccess.getResourceAccess().getResourceKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Resource__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getNameAssignment_0_1()); }
(rule__Resource__NameAssignment_0_1)
{ after(grammarAccess.getResourceAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Asset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Asset__Group__0__Impl
	rule__Asset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssetAccess().getAssetKeyword_0()); }

	'asset' 

{ after(grammarAccess.getAssetAccess().getAssetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Asset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Asset__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssetAccess().getNameAssignment_1()); }
(rule__Asset__NameAssignment_1)
{ after(grammarAccess.getAssetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Wants__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wants__Group__0__Impl
	rule__Wants__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wants__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWantsAccess().getTypeAssignment_0()); }
(rule__Wants__TypeAssignment_0)
{ after(grammarAccess.getWantsAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wants__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wants__Group__1__Impl
	rule__Wants__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Wants__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWantsAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWantsAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wants__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wants__Group__2__Impl
	rule__Wants__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Wants__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWantsAccess().getSourceAssignment_2()); }
(rule__Wants__SourceAssignment_2)
{ after(grammarAccess.getWantsAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wants__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wants__Group__3__Impl
	rule__Wants__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Wants__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWantsAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getWantsAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wants__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wants__Group__4__Impl
	rule__Wants__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Wants__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWantsAccess().getTargetAssignment_4()); }
(rule__Wants__TargetAssignment_4)
{ after(grammarAccess.getWantsAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wants__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wants__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wants__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWantsAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getWantsAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Does__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Does__Group__0__Impl
	rule__Does__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Does__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoesAccess().getTypeAssignment_0()); }
(rule__Does__TypeAssignment_0)
{ after(grammarAccess.getDoesAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Does__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Does__Group__1__Impl
	rule__Does__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Does__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoesAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getDoesAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Does__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Does__Group__2__Impl
	rule__Does__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Does__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoesAccess().getSourceAssignment_2()); }
(rule__Does__SourceAssignment_2)
{ after(grammarAccess.getDoesAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Does__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Does__Group__3__Impl
	rule__Does__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Does__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoesAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getDoesAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Does__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Does__Group__4__Impl
	rule__Does__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Does__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoesAccess().getTargetAssignment_4()); }
(rule__Does__TargetAssignment_4)
{ after(grammarAccess.getDoesAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Does__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Does__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Does__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoesAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDoesAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Decomposes__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decomposes__Group__0__Impl
	rule__Decomposes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposes__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecomposesAccess().getTypeAssignment_0()); }
(rule__Decomposes__TypeAssignment_0)
{ after(grammarAccess.getDecomposesAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decomposes__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decomposes__Group__1__Impl
	rule__Decomposes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposes__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecomposesAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getDecomposesAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decomposes__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decomposes__Group__2__Impl
	rule__Decomposes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposes__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecomposesAccess().getSourceAssignment_2()); }
(rule__Decomposes__SourceAssignment_2)
{ after(grammarAccess.getDecomposesAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decomposes__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decomposes__Group__3__Impl
	rule__Decomposes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposes__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecomposesAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getDecomposesAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decomposes__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decomposes__Group__4__Impl
	rule__Decomposes__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposes__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecomposesAccess().getTargetAssignment_4()); }
(rule__Decomposes__TargetAssignment_4)
{ after(grammarAccess.getDecomposesAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decomposes__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decomposes__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposes__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecomposesAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDecomposesAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Trusts__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trusts__Group__0__Impl
	rule__Trusts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getTypeAssignment_0()); }
(rule__Trusts__TypeAssignment_0)
{ after(grammarAccess.getTrustsAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trusts__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trusts__Group__1__Impl
	rule__Trusts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTrustsAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trusts__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trusts__Group__2__Impl
	rule__Trusts__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getSourceAssignment_2()); }
(rule__Trusts__SourceAssignment_2)
{ after(grammarAccess.getTrustsAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trusts__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trusts__Group__3__Impl
	rule__Trusts__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getTrustsAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trusts__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trusts__Group__4__Impl
	rule__Trusts__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getTargetAssignment_4()); }
(rule__Trusts__TargetAssignment_4)
{ after(grammarAccess.getTrustsAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trusts__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trusts__Group__5__Impl
	rule__Trusts__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getGroup_5()); }
(rule__Trusts__Group_5__0)?
{ after(grammarAccess.getTrustsAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trusts__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trusts__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getTrustsAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Trusts__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trusts__Group_5__0__Impl
	rule__Trusts__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getTrustsAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trusts__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trusts__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getEntityAssignment_5_1()); }
(rule__Trusts__EntityAssignment_5_1)
{ after(grammarAccess.getTrustsAccess().getEntityAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Delegates__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegates__Group__0__Impl
	rule__Delegates__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getTypeAssignment_0()); }
(rule__Delegates__TypeAssignment_0)
{ after(grammarAccess.getDelegatesAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegates__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegates__Group__1__Impl
	rule__Delegates__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getDelegatesAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegates__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegates__Group__2__Impl
	rule__Delegates__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getSourceAssignment_2()); }
(rule__Delegates__SourceAssignment_2)
{ after(grammarAccess.getDelegatesAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegates__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegates__Group__3__Impl
	rule__Delegates__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getDelegatesAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegates__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegates__Group__4__Impl
	rule__Delegates__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getTargetAssignment_4()); }
(rule__Delegates__TargetAssignment_4)
{ after(grammarAccess.getDelegatesAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegates__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegates__Group__5__Impl
	rule__Delegates__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getGroup_5()); }
(rule__Delegates__Group_5__0)?
{ after(grammarAccess.getDelegatesAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegates__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegates__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getDelegatesAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Delegates__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegates__Group_5__0__Impl
	rule__Delegates__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getDelegatesAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegates__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegates__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getEntityAssignment_5_1()); }
(rule__Delegates__EntityAssignment_5_1)
{ after(grammarAccess.getDelegatesAccess().getEntityAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Contributes__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contributes__Group__0__Impl
	rule__Contributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contributes__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributesAccess().getTypeAssignment_0()); }
(rule__Contributes__TypeAssignment_0)
{ after(grammarAccess.getContributesAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contributes__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contributes__Group__1__Impl
	rule__Contributes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contributes__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributesAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getContributesAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contributes__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contributes__Group__2__Impl
	rule__Contributes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contributes__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributesAccess().getSourceAssignment_2()); }
(rule__Contributes__SourceAssignment_2)
{ after(grammarAccess.getContributesAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contributes__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contributes__Group__3__Impl
	rule__Contributes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Contributes__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributesAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getContributesAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contributes__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contributes__Group__4__Impl
	rule__Contributes__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Contributes__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributesAccess().getTargetAssignment_4()); }
(rule__Contributes__TargetAssignment_4)
{ after(grammarAccess.getContributesAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Contributes__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Contributes__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contributes__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributesAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getContributesAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Fulfils__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fulfils__Group__0__Impl
	rule__Fulfils__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fulfils__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfilsAccess().getTypeAssignment_0()); }
(rule__Fulfils__TypeAssignment_0)
{ after(grammarAccess.getFulfilsAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fulfils__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fulfils__Group__1__Impl
	rule__Fulfils__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fulfils__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfilsAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFulfilsAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fulfils__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fulfils__Group__2__Impl
	rule__Fulfils__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Fulfils__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfilsAccess().getSourceAssignment_2()); }
(rule__Fulfils__SourceAssignment_2)
{ after(grammarAccess.getFulfilsAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fulfils__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fulfils__Group__3__Impl
	rule__Fulfils__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Fulfils__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfilsAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getFulfilsAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fulfils__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fulfils__Group__4__Impl
	rule__Fulfils__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Fulfils__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfilsAccess().getTargetAssignment_4()); }
(rule__Fulfils__TargetAssignment_4)
{ after(grammarAccess.getFulfilsAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fulfils__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fulfils__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fulfils__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfilsAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getFulfilsAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Provides__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__0__Impl
	rule__Provides__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getTypeAssignment_0()); }
(rule__Provides__TypeAssignment_0)
{ after(grammarAccess.getProvidesAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__1__Impl
	rule__Provides__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getProvidesAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__2__Impl
	rule__Provides__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getAlternatives_2()); }
(rule__Provides__Alternatives_2)
{ after(grammarAccess.getProvidesAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__3__Impl
	rule__Provides__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getProvidesAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__4__Impl
	rule__Provides__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getTargetAssignment_4()); }
(rule__Provides__TargetAssignment_4)
{ after(grammarAccess.getProvidesAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Provides__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Provides__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getProvidesAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Consumes__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Consumes__Group__0__Impl
	rule__Consumes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Consumes__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsumesAccess().getTypeAssignment_0()); }
(rule__Consumes__TypeAssignment_0)
{ after(grammarAccess.getConsumesAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Consumes__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Consumes__Group__1__Impl
	rule__Consumes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Consumes__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsumesAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getConsumesAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Consumes__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Consumes__Group__2__Impl
	rule__Consumes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Consumes__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsumesAccess().getAlternatives_2()); }
(rule__Consumes__Alternatives_2)
{ after(grammarAccess.getConsumesAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Consumes__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Consumes__Group__3__Impl
	rule__Consumes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Consumes__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsumesAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getConsumesAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Consumes__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Consumes__Group__4__Impl
	rule__Consumes__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Consumes__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsumesAccess().getTargetAssignment_4()); }
(rule__Consumes__TargetAssignment_4)
{ after(grammarAccess.getConsumesAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Consumes__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Consumes__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Consumes__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsumesAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getConsumesAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Exploits__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exploits__Group__0__Impl
	rule__Exploits__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exploits__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitsAccess().getTypeAssignment_0()); }
(rule__Exploits__TypeAssignment_0)
{ after(grammarAccess.getExploitsAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exploits__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exploits__Group__1__Impl
	rule__Exploits__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exploits__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitsAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getExploitsAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exploits__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exploits__Group__2__Impl
	rule__Exploits__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exploits__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitsAccess().getSourceAssignment_2()); }
(rule__Exploits__SourceAssignment_2)
{ after(grammarAccess.getExploitsAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exploits__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exploits__Group__3__Impl
	rule__Exploits__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Exploits__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitsAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getExploitsAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exploits__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exploits__Group__4__Impl
	rule__Exploits__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Exploits__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitsAccess().getTargetAssignment_4()); }
(rule__Exploits__TargetAssignment_4)
{ after(grammarAccess.getExploitsAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exploits__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exploits__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exploits__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitsAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getExploitsAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Damages__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Damages__Group__0__Impl
	rule__Damages__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Damages__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDamagesAccess().getTypeAssignment_0()); }
(rule__Damages__TypeAssignment_0)
{ after(grammarAccess.getDamagesAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Damages__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Damages__Group__1__Impl
	rule__Damages__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Damages__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDamagesAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getDamagesAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Damages__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Damages__Group__2__Impl
	rule__Damages__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Damages__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDamagesAccess().getSourceAssignment_2()); }
(rule__Damages__SourceAssignment_2)
{ after(grammarAccess.getDamagesAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Damages__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Damages__Group__3__Impl
	rule__Damages__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Damages__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDamagesAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getDamagesAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Damages__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Damages__Group__4__Impl
	rule__Damages__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Damages__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDamagesAccess().getTargetAssignment_4()); }
(rule__Damages__TargetAssignment_4)
{ after(grammarAccess.getDamagesAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Damages__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Damages__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Damages__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDamagesAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDamagesAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Attacks__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacks__Group__0__Impl
	rule__Attacks__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacks__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttacksAccess().getTypeAssignment_0()); }
(rule__Attacks__TypeAssignment_0)
{ after(grammarAccess.getAttacksAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attacks__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacks__Group__1__Impl
	rule__Attacks__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacks__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttacksAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAttacksAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attacks__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacks__Group__2__Impl
	rule__Attacks__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacks__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttacksAccess().getSourceAssignment_2()); }
(rule__Attacks__SourceAssignment_2)
{ after(grammarAccess.getAttacksAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attacks__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacks__Group__3__Impl
	rule__Attacks__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacks__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttacksAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getAttacksAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attacks__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacks__Group__4__Impl
	rule__Attacks__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacks__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttacksAccess().getTargetAssignment_4()); }
(rule__Attacks__TargetAssignment_4)
{ after(grammarAccess.getAttacksAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attacks__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacks__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacks__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttacksAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAttacksAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Argues__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argues__Group__0__Impl
	rule__Argues__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argues__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArguesAccess().getTypeAssignment_0()); }
(rule__Argues__TypeAssignment_0)
{ after(grammarAccess.getArguesAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argues__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argues__Group__1__Impl
	rule__Argues__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argues__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArguesAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getArguesAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argues__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argues__Group__2__Impl
	rule__Argues__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Argues__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArguesAccess().getSourceAssignment_2()); }
(rule__Argues__SourceAssignment_2)
{ after(grammarAccess.getArguesAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argues__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argues__Group__3__Impl
	rule__Argues__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Argues__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArguesAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getArguesAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argues__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argues__Group__4__Impl
	rule__Argues__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Argues__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArguesAccess().getTargetAssignment_4()); }
(rule__Argues__TargetAssignment_4)
{ after(grammarAccess.getArguesAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argues__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argues__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argues__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArguesAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getArguesAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}















rule__Situation__TimeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getTimeIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getSituationAccess().getTimeIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__WorldAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getWorldWorldParserRuleCall_1_0()); }
	ruleWorld{ after(grammarAccess.getSituationAccess().getWorldWorldParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__World__EntitiesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getEntitiesEntityParserRuleCall_1_0_0()); }
	ruleEntity{ after(grammarAccess.getWorldAccess().getEntitiesEntityParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__World__DomainsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getDomainsDomainParserRuleCall_1_1_0()); }
	ruleDomain{ after(grammarAccess.getWorldAccess().getDomainsDomainParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__World__RelationshipsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getRelationshipsRelationshipParserRuleCall_1_2_0()); }
	ruleRelationship{ after(grammarAccess.getWorldAccess().getRelationshipsRelationshipParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getTypeDomainTypeEnumRuleCall_1_0()); }
	ruleDomainType{ after(grammarAccess.getDomainAccess().getTypeDomainTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__PropertiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
	ruleProposition{ after(grammarAccess.getDomainAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAssumption__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAssumptionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDomainAssumptionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalRequirement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionalRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SecurityRequirement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecurityRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSecurityRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AntiRequirement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntiRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAntiRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRequirement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualityRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getQualityRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStakeholderAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attacker__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttackerAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAttackerAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalProcess__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNaturalProcessAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNaturalProcessAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalProcess__ActivitiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNaturalProcessAccess().getActivitiesProcessCrossReference_2_1_0()); }
(
{ before(grammarAccess.getNaturalProcessAccess().getActivitiesProcessIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNaturalProcessAccess().getActivitiesProcessIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getNaturalProcessAccess().getActivitiesProcessCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HumanActivity__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHumanActivityAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getHumanActivityAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HumanActivity__ActionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHumanActivityAccess().getActionsActionParserRuleCall_3_0()); }
	ruleAction{ after(grammarAccess.getHumanActivityAccess().getActionsActionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAssetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wants__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWantsAccess().getTypeWantsKeyword_0_0()); }
(
{ before(grammarAccess.getWantsAccess().getTypeWantsKeyword_0_0()); }

	'wants' 

{ after(grammarAccess.getWantsAccess().getTypeWantsKeyword_0_0()); }
)

{ after(grammarAccess.getWantsAccess().getTypeWantsKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wants__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWantsAccess().getSourceActorCrossReference_2_0()); }
(
{ before(grammarAccess.getWantsAccess().getSourceActorIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getWantsAccess().getSourceActorIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getWantsAccess().getSourceActorCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wants__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWantsAccess().getTargetRequirementCrossReference_4_0()); }
(
{ before(grammarAccess.getWantsAccess().getTargetRequirementIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getWantsAccess().getTargetRequirementIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getWantsAccess().getTargetRequirementCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Does__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoesAccess().getTypeDoesKeyword_0_0()); }
(
{ before(grammarAccess.getDoesAccess().getTypeDoesKeyword_0_0()); }

	'does' 

{ after(grammarAccess.getDoesAccess().getTypeDoesKeyword_0_0()); }
)

{ after(grammarAccess.getDoesAccess().getTypeDoesKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Does__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoesAccess().getSourceActorCrossReference_2_0()); }
(
{ before(grammarAccess.getDoesAccess().getSourceActorIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDoesAccess().getSourceActorIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDoesAccess().getSourceActorCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Does__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoesAccess().getTargetActivityCrossReference_4_0()); }
(
{ before(grammarAccess.getDoesAccess().getTargetActivityIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getDoesAccess().getTargetActivityIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getDoesAccess().getTargetActivityCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposes__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecomposesAccess().getTypeDecomposesTypeEnumRuleCall_0_0()); }
	ruleDecomposesType{ after(grammarAccess.getDecomposesAccess().getTypeDecomposesTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposes__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecomposesAccess().getSourceRequirementCrossReference_2_0()); }
(
{ before(grammarAccess.getDecomposesAccess().getSourceRequirementIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDecomposesAccess().getSourceRequirementIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDecomposesAccess().getSourceRequirementCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Decomposes__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecomposesAccess().getTargetRequirementCrossReference_4_0()); }
(
{ before(grammarAccess.getDecomposesAccess().getTargetRequirementIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getDecomposesAccess().getTargetRequirementIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getDecomposesAccess().getTargetRequirementCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getTypeTrustsKeyword_0_0()); }
(
{ before(grammarAccess.getTrustsAccess().getTypeTrustsKeyword_0_0()); }

	'trusts' 

{ after(grammarAccess.getTrustsAccess().getTypeTrustsKeyword_0_0()); }
)

{ after(grammarAccess.getTrustsAccess().getTypeTrustsKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getSourceActorCrossReference_2_0()); }
(
{ before(grammarAccess.getTrustsAccess().getSourceActorIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTrustsAccess().getSourceActorIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTrustsAccess().getSourceActorCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getTargetActorCrossReference_4_0()); }
(
{ before(grammarAccess.getTrustsAccess().getTargetActorIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getTrustsAccess().getTargetActorIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getTrustsAccess().getTargetActorCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trusts__EntityAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrustsAccess().getEntityThingCrossReference_5_1_0()); }
(
{ before(grammarAccess.getTrustsAccess().getEntityThingIDTerminalRuleCall_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTrustsAccess().getEntityThingIDTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getTrustsAccess().getEntityThingCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getTypeDelegatesKeyword_0_0()); }
(
{ before(grammarAccess.getDelegatesAccess().getTypeDelegatesKeyword_0_0()); }

	'delegates' 

{ after(grammarAccess.getDelegatesAccess().getTypeDelegatesKeyword_0_0()); }
)

{ after(grammarAccess.getDelegatesAccess().getTypeDelegatesKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getSourceActorCrossReference_2_0()); }
(
{ before(grammarAccess.getDelegatesAccess().getSourceActorIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDelegatesAccess().getSourceActorIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDelegatesAccess().getSourceActorCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getTargetActorCrossReference_4_0()); }
(
{ before(grammarAccess.getDelegatesAccess().getTargetActorIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getDelegatesAccess().getTargetActorIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getDelegatesAccess().getTargetActorCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delegates__EntityAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegatesAccess().getEntityThingCrossReference_5_1_0()); }
(
{ before(grammarAccess.getDelegatesAccess().getEntityThingIDTerminalRuleCall_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDelegatesAccess().getEntityThingIDTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getDelegatesAccess().getEntityThingCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Contributes__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributesAccess().getTypeContributesTypeEnumRuleCall_0_0()); }
	ruleContributesType{ after(grammarAccess.getContributesAccess().getTypeContributesTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Contributes__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributesAccess().getSourceRequirementCrossReference_2_0()); }
(
{ before(grammarAccess.getContributesAccess().getSourceRequirementIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getContributesAccess().getSourceRequirementIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getContributesAccess().getSourceRequirementCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Contributes__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributesAccess().getTargetRequirementCrossReference_4_0()); }
(
{ before(grammarAccess.getContributesAccess().getTargetRequirementIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getContributesAccess().getTargetRequirementIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getContributesAccess().getTargetRequirementCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fulfils__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfilsAccess().getTypeFulfilsTypeEnumRuleCall_0_0()); }
	ruleFulfilsType{ after(grammarAccess.getFulfilsAccess().getTypeFulfilsTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fulfils__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfilsAccess().getSourceProcessCrossReference_2_0()); }
(
{ before(grammarAccess.getFulfilsAccess().getSourceProcessIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getFulfilsAccess().getSourceProcessIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFulfilsAccess().getSourceProcessCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fulfils__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFulfilsAccess().getTargetPropositionCrossReference_4_0()); }
(
{ before(grammarAccess.getFulfilsAccess().getTargetPropositionIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getFulfilsAccess().getTargetPropositionIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getFulfilsAccess().getTargetPropositionCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getTypeProvidesKeyword_0_0()); }
(
{ before(grammarAccess.getProvidesAccess().getTypeProvidesKeyword_0_0()); }

	'provides' 

{ after(grammarAccess.getProvidesAccess().getTypeProvidesKeyword_0_0()); }
)

{ after(grammarAccess.getProvidesAccess().getTypeProvidesKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__SourceAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getSourceProcessCrossReference_2_0_0()); }
(
{ before(grammarAccess.getProvidesAccess().getSourceProcessIDTerminalRuleCall_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getProvidesAccess().getSourceProcessIDTerminalRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getProvidesAccess().getSourceProcessCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__SourceAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getSourceActorCrossReference_2_1_0()); }
(
{ before(grammarAccess.getProvidesAccess().getSourceActorIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getProvidesAccess().getSourceActorIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getProvidesAccess().getSourceActorCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Provides__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidesAccess().getTargetResourceCrossReference_4_0()); }
(
{ before(grammarAccess.getProvidesAccess().getTargetResourceIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getProvidesAccess().getTargetResourceIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getProvidesAccess().getTargetResourceCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Consumes__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsumesAccess().getTypeConsumesKeyword_0_0()); }
(
{ before(grammarAccess.getConsumesAccess().getTypeConsumesKeyword_0_0()); }

	'consumes' 

{ after(grammarAccess.getConsumesAccess().getTypeConsumesKeyword_0_0()); }
)

{ after(grammarAccess.getConsumesAccess().getTypeConsumesKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Consumes__SourceAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsumesAccess().getSourceProcessCrossReference_2_0_0()); }
(
{ before(grammarAccess.getConsumesAccess().getSourceProcessIDTerminalRuleCall_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getConsumesAccess().getSourceProcessIDTerminalRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getConsumesAccess().getSourceProcessCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Consumes__SourceAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsumesAccess().getSourceActorCrossReference_2_1_0()); }
(
{ before(grammarAccess.getConsumesAccess().getSourceActorIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getConsumesAccess().getSourceActorIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getConsumesAccess().getSourceActorCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Consumes__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConsumesAccess().getTargetResourceCrossReference_4_0()); }
(
{ before(grammarAccess.getConsumesAccess().getTargetResourceIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getConsumesAccess().getTargetResourceIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getConsumesAccess().getTargetResourceCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exploits__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitsAccess().getTypeExploitsKeyword_0_0()); }
(
{ before(grammarAccess.getExploitsAccess().getTypeExploitsKeyword_0_0()); }

	'exploits' 

{ after(grammarAccess.getExploitsAccess().getTypeExploitsKeyword_0_0()); }
)

{ after(grammarAccess.getExploitsAccess().getTypeExploitsKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exploits__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitsAccess().getSourceAttackerCrossReference_2_0()); }
(
{ before(grammarAccess.getExploitsAccess().getSourceAttackerIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getExploitsAccess().getSourceAttackerIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getExploitsAccess().getSourceAttackerCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exploits__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExploitsAccess().getTargetProcessCrossReference_4_0()); }
(
{ before(grammarAccess.getExploitsAccess().getTargetProcessIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getExploitsAccess().getTargetProcessIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getExploitsAccess().getTargetProcessCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Damages__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDamagesAccess().getTypeDamagesKeyword_0_0()); }
(
{ before(grammarAccess.getDamagesAccess().getTypeDamagesKeyword_0_0()); }

	'damages' 

{ after(grammarAccess.getDamagesAccess().getTypeDamagesKeyword_0_0()); }
)

{ after(grammarAccess.getDamagesAccess().getTypeDamagesKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Damages__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDamagesAccess().getSourceAttackerCrossReference_2_0()); }
(
{ before(grammarAccess.getDamagesAccess().getSourceAttackerIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDamagesAccess().getSourceAttackerIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDamagesAccess().getSourceAttackerCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Damages__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDamagesAccess().getTargetAssetCrossReference_4_0()); }
(
{ before(grammarAccess.getDamagesAccess().getTargetAssetIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getDamagesAccess().getTargetAssetIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getDamagesAccess().getTargetAssetCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attacks__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttacksAccess().getTypeAttacksKeyword_0_0()); }
(
{ before(grammarAccess.getAttacksAccess().getTypeAttacksKeyword_0_0()); }

	'attacks' 

{ after(grammarAccess.getAttacksAccess().getTypeAttacksKeyword_0_0()); }
)

{ after(grammarAccess.getAttacksAccess().getTypeAttacksKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attacks__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttacksAccess().getSourceAttackerCrossReference_2_0()); }
(
{ before(grammarAccess.getAttacksAccess().getSourceAttackerIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getAttacksAccess().getSourceAttackerIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAttacksAccess().getSourceAttackerCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attacks__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttacksAccess().getTargetProcessCrossReference_4_0()); }
(
{ before(grammarAccess.getAttacksAccess().getTargetProcessIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getAttacksAccess().getTargetProcessIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getAttacksAccess().getTargetProcessCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argues__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArguesAccess().getTypeArguesKeyword_0_0()); }
(
{ before(grammarAccess.getArguesAccess().getTypeArguesKeyword_0_0()); }

	'argues' 

{ after(grammarAccess.getArguesAccess().getTypeArguesKeyword_0_0()); }
)

{ after(grammarAccess.getArguesAccess().getTypeArguesKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argues__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArguesAccess().getSourcePropositionCrossReference_2_0()); }
(
{ before(grammarAccess.getArguesAccess().getSourcePropositionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getArguesAccess().getSourcePropositionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getArguesAccess().getSourcePropositionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argues__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArguesAccess().getTargetPropositionCrossReference_4_0()); }
(
{ before(grammarAccess.getArguesAccess().getTargetPropositionIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getArguesAccess().getTargetPropositionIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getArguesAccess().getTargetPropositionCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('#' ~('#')+ '#'|'^'? ('a'..'z'|'A'..'Z'|'_'|'.') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'.')*);

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


