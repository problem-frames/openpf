/*
* generated by Xtext
*/
grammar InternalOntology;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package eu.securechange.ontology.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package eu.securechange.ontology.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import eu.securechange.ontology.services.OntologyGrammarAccess;

}

@parser::members {
 
 	private OntologyGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(OntologyGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSituation
entryRuleSituation 
:
{ before(grammarAccess.getSituationRule()); }
	 ruleSituation
{ after(grammarAccess.getSituationRule()); } 
	 EOF 
;

// Rule Situation
ruleSituation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSituationAccess().getGroup()); }
(rule__Situation__Group__0)
{ after(grammarAccess.getSituationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWorld
entryRuleWorld 
:
{ before(grammarAccess.getWorldRule()); }
	 ruleWorld
{ after(grammarAccess.getWorldRule()); } 
	 EOF 
;

// Rule World
ruleWorld
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWorldAccess().getGroup()); }
(rule__World__Group__0)
{ after(grammarAccess.getWorldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGoal
entryRuleGoal 
:
{ before(grammarAccess.getGoalRule()); }
	 ruleGoal
{ after(grammarAccess.getGoalRule()); } 
	 EOF 
;

// Rule Goal
ruleGoal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGoalAccess().getAlternatives()); }
(rule__Goal__Alternatives)
{ after(grammarAccess.getGoalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSecurityGoal
entryRuleSecurityGoal 
:
{ before(grammarAccess.getSecurityGoalRule()); }
	 ruleSecurityGoal
{ after(grammarAccess.getSecurityGoalRule()); } 
	 EOF 
;

// Rule SecurityGoal
ruleSecurityGoal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSecurityGoalAccess().getGroup()); }
(rule__SecurityGoal__Group__0)
{ after(grammarAccess.getSecurityGoalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequirement
entryRuleRequirement 
:
{ before(grammarAccess.getRequirementRule()); }
	 ruleRequirement
{ after(grammarAccess.getRequirementRule()); } 
	 EOF 
;

// Rule Requirement
ruleRequirement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequirementAccess().getGroup()); }
(rule__Requirement__Group__0)
{ after(grammarAccess.getRequirementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAntiRequirement
entryRuleAntiRequirement 
:
{ before(grammarAccess.getAntiRequirementRule()); }
	 ruleAntiRequirement
{ after(grammarAccess.getAntiRequirementRule()); } 
	 EOF 
;

// Rule AntiRequirement
ruleAntiRequirement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAntiRequirementAccess().getGroup()); }
(rule__AntiRequirement__Group__0)
{ after(grammarAccess.getAntiRequirementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomain
entryRuleDomain 
:
{ before(grammarAccess.getDomainRule()); }
	 ruleDomain
{ after(grammarAccess.getDomainRule()); } 
	 EOF 
;

// Rule Domain
ruleDomain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainAccess().getAlternatives()); }
(rule__Domain__Alternatives)
{ after(grammarAccess.getDomainAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActor
entryRuleActor 
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorAccess().getGroup()); }
(rule__Actor__Group__0)
{ after(grammarAccess.getActorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getGroup()); }
(rule__Action__Group__0)
{ after(grammarAccess.getActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAsset
entryRuleAsset 
:
{ before(grammarAccess.getAssetRule()); }
	 ruleAsset
{ after(grammarAccess.getAssetRule()); } 
	 EOF 
;

// Rule Asset
ruleAsset
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssetAccess().getGroup()); }
(rule__Asset__Group__0)
{ after(grammarAccess.getAssetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResource
entryRuleResource 
:
{ before(grammarAccess.getResourceRule()); }
	 ruleResource
{ after(grammarAccess.getResourceRule()); } 
	 EOF 
;

// Rule Resource
ruleResource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceAccess().getGroup()); }
(rule__Resource__Group__0)
{ after(grammarAccess.getResourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttacker
entryRuleAttacker 
:
{ before(grammarAccess.getAttackerRule()); }
	 ruleAttacker
{ after(grammarAccess.getAttackerRule()); } 
	 EOF 
;

// Rule Attacker
ruleAttacker
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttackerAccess().getGroup()); }
(rule__Attacker__Group__0)
{ after(grammarAccess.getAttackerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProposition
entryRuleProposition 
:
{ before(grammarAccess.getPropositionRule()); }
	 ruleProposition
{ after(grammarAccess.getPropositionRule()); } 
	 EOF 
;

// Rule Proposition
ruleProposition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropositionAccess().getNameAssignment()); }
(rule__Proposition__NameAssignment)
{ after(grammarAccess.getPropositionAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationship
entryRuleRelationship 
:
{ before(grammarAccess.getRelationshipRule()); }
	 ruleRelationship
{ after(grammarAccess.getRelationshipRule()); } 
	 EOF 
;

// Rule Relationship
ruleRelationship
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationshipAccess().getGroup()); }
(rule__Relationship__Group__0)
{ after(grammarAccess.getRelationshipAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule RelType
ruleRelType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelTypeAccess().getAlternatives()); }
(rule__RelType__Alternatives)
{ after(grammarAccess.getRelTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__World__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getGoalsAssignment_1_0()); }
(rule__World__GoalsAssignment_1_0)
{ after(grammarAccess.getWorldAccess().getGoalsAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getWorldAccess().getDomainsAssignment_1_1()); }
(rule__World__DomainsAssignment_1_1)
{ after(grammarAccess.getWorldAccess().getDomainsAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getWorldAccess().getRelationshipsAssignment_1_2()); }
(rule__World__RelationshipsAssignment_1_2)
{ after(grammarAccess.getWorldAccess().getRelationshipsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getSecurityGoalParserRuleCall_0()); }
	ruleSecurityGoal
{ after(grammarAccess.getGoalAccess().getSecurityGoalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGoalAccess().getRequirementParserRuleCall_1()); }
	ruleRequirement
{ after(grammarAccess.getGoalAccess().getRequirementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getGoalAccess().getAntiRequirementParserRuleCall_2()); }
	ruleAntiRequirement
{ after(grammarAccess.getGoalAccess().getAntiRequirementParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getActorParserRuleCall_0()); }
	ruleActor
{ after(grammarAccess.getDomainAccess().getActorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDomainAccess().getActionParserRuleCall_1()); }
	ruleAction
{ after(grammarAccess.getDomainAccess().getActionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDomainAccess().getAssetParserRuleCall_2()); }
	ruleAsset
{ after(grammarAccess.getDomainAccess().getAssetParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDomainAccess().getResourceParserRuleCall_3()); }
	ruleResource
{ after(grammarAccess.getDomainAccess().getResourceParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getDomainAccess().getAttackerParserRuleCall_4()); }
	ruleAttacker
{ after(grammarAccess.getDomainAccess().getAttackerParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelTypeAccess().getCARRIESOUTEnumLiteralDeclaration_0()); }
(	'carries out' 
)
{ after(grammarAccess.getRelTypeAccess().getCARRIESOUTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelTypeAccess().getDELEGATESEnumLiteralDeclaration_1()); }
(	'delegates' 
)
{ after(grammarAccess.getRelTypeAccess().getDELEGATESEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRelTypeAccess().getFULFILSEnumLiteralDeclaration_2()); }
(	'fulfils' 
)
{ after(grammarAccess.getRelTypeAccess().getFULFILSEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRelTypeAccess().getPROVIDESEnumLiteralDeclaration_3()); }
(	'provides' 
)
{ after(grammarAccess.getRelTypeAccess().getPROVIDESEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getRelTypeAccess().getTRUSTSEnumLiteralDeclaration_4()); }
(	'trusts' 
)
{ after(grammarAccess.getRelTypeAccess().getTRUSTSEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getRelTypeAccess().getWANTSEnumLiteralDeclaration_5()); }
(	'wants' 
)
{ after(grammarAccess.getRelTypeAccess().getWANTSEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getRelTypeAccess().getDAMAGESEnumLiteralDeclaration_6()); }
(	'damages' 
)
{ after(grammarAccess.getRelTypeAccess().getDAMAGESEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getRelTypeAccess().getATTACKSEnumLiteralDeclaration_7()); }
(	'attacks' 
)
{ after(grammarAccess.getRelTypeAccess().getATTACKSEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getRelTypeAccess().getARGUESEnumLiteralDeclaration_8()); }
(	'argues' 
)
{ after(grammarAccess.getRelTypeAccess().getARGUESEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getRelTypeAccess().getINTERFACESEnumLiteralDeclaration_9()); }
(	'interfaces' 
)
{ after(grammarAccess.getRelTypeAccess().getINTERFACESEnumLiteralDeclaration_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Situation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group__0__Impl
	rule__Situation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getGroup_0()); }
(rule__Situation__Group_0__0)?
{ after(grammarAccess.getSituationAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Situation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getWorldAssignment_1()); }
(rule__Situation__WorldAssignment_1)
{ after(grammarAccess.getSituationAccess().getWorldAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Situation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group_0__0__Impl
	rule__Situation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getModelKeyword_0_0()); }

	'model' 

{ after(grammarAccess.getSituationAccess().getModelKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Situation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group_0__1__Impl
	rule__Situation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getTimeAssignment_0_1()); }
(rule__Situation__TimeAssignment_0_1)
{ after(grammarAccess.getSituationAccess().getTimeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Situation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getSituationAccess().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__World__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__World__Group__0__Impl
	rule__World__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getWorldAction_0()); }
(

)
{ after(grammarAccess.getWorldAccess().getWorldAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__World__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__World__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getAlternatives_1()); }
(rule__World__Alternatives_1)*
{ after(grammarAccess.getWorldAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SecurityGoal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecurityGoal__Group__0__Impl
	rule__SecurityGoal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SecurityGoal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecurityGoalAccess().getNameAssignment_0()); }
(rule__SecurityGoal__NameAssignment_0)
{ after(grammarAccess.getSecurityGoalAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SecurityGoal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecurityGoal__Group__1__Impl
	rule__SecurityGoal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SecurityGoal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecurityGoalAccess().getTypeAssignment_1()); }
(rule__SecurityGoal__TypeAssignment_1)
{ after(grammarAccess.getSecurityGoalAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SecurityGoal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecurityGoal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SecurityGoal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecurityGoalAccess().getGroup_2()); }
(rule__SecurityGoal__Group_2__0)*
{ after(grammarAccess.getSecurityGoalAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SecurityGoal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecurityGoal__Group_2__0__Impl
	rule__SecurityGoal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SecurityGoal__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecurityGoalAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getSecurityGoalAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SecurityGoal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecurityGoal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SecurityGoal__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecurityGoalAccess().getPropertiesAssignment_2_1()); }
(rule__SecurityGoal__PropertiesAssignment_2_1)
{ after(grammarAccess.getSecurityGoalAccess().getPropertiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Requirement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__0__Impl
	rule__Requirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getNameAssignment_0()); }
(rule__Requirement__NameAssignment_0)
{ after(grammarAccess.getRequirementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__1__Impl
	rule__Requirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getTypeAssignment_1()); }
(rule__Requirement__TypeAssignment_1)
{ after(grammarAccess.getRequirementAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getGroup_2()); }
(rule__Requirement__Group_2__0)*
{ after(grammarAccess.getRequirementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Requirement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_2__0__Impl
	rule__Requirement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getRequirementAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getPropertiesAssignment_2_1()); }
(rule__Requirement__PropertiesAssignment_2_1)
{ after(grammarAccess.getRequirementAccess().getPropertiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AntiRequirement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntiRequirement__Group__0__Impl
	rule__AntiRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AntiRequirement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntiRequirementAccess().getNameAssignment_0()); }
(rule__AntiRequirement__NameAssignment_0)
{ after(grammarAccess.getAntiRequirementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AntiRequirement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntiRequirement__Group__1__Impl
	rule__AntiRequirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AntiRequirement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntiRequirementAccess().getTypeAssignment_1()); }
(rule__AntiRequirement__TypeAssignment_1)
{ after(grammarAccess.getAntiRequirementAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AntiRequirement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntiRequirement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AntiRequirement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntiRequirementAccess().getGroup_2()); }
(rule__AntiRequirement__Group_2__0)*
{ after(grammarAccess.getAntiRequirementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AntiRequirement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntiRequirement__Group_2__0__Impl
	rule__AntiRequirement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AntiRequirement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntiRequirementAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getAntiRequirementAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AntiRequirement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AntiRequirement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AntiRequirement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntiRequirementAccess().getPropertiesAssignment_2_1()); }
(rule__AntiRequirement__PropertiesAssignment_2_1)
{ after(grammarAccess.getAntiRequirementAccess().getPropertiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Actor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameAssignment_0()); }
(rule__Actor__NameAssignment_0)
{ after(grammarAccess.getActorAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__1__Impl
	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getTypeAssignment_1()); }
(rule__Actor__TypeAssignment_1)
{ after(grammarAccess.getActorAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getGroup_2()); }
(rule__Actor__Group_2__0)*
{ after(grammarAccess.getActorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Actor__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group_2__0__Impl
	rule__Actor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getActorAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getPropertiesAssignment_2_1()); }
(rule__Actor__PropertiesAssignment_2_1)
{ after(grammarAccess.getActorAccess().getPropertiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Action__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameAssignment_0()); }
(rule__Action__NameAssignment_0)
{ after(grammarAccess.getActionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getTypeAssignment_1()); }
(rule__Action__TypeAssignment_1)
{ after(grammarAccess.getActionAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_2()); }
(rule__Action__Group_2__0)*
{ after(grammarAccess.getActionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Action__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_2__0__Impl
	rule__Action__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getActionAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getPropertiesAssignment_2_1()); }
(rule__Action__PropertiesAssignment_2_1)
{ after(grammarAccess.getActionAccess().getPropertiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Asset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Asset__Group__0__Impl
	rule__Asset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssetAccess().getNameAssignment_0()); }
(rule__Asset__NameAssignment_0)
{ after(grammarAccess.getAssetAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Asset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Asset__Group__1__Impl
	rule__Asset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssetAccess().getTypeAssignment_1()); }
(rule__Asset__TypeAssignment_1)
{ after(grammarAccess.getAssetAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Asset__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Asset__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssetAccess().getGroup_2()); }
(rule__Asset__Group_2__0)*
{ after(grammarAccess.getAssetAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Asset__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Asset__Group_2__0__Impl
	rule__Asset__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssetAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getAssetAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Asset__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Asset__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssetAccess().getPropertiesAssignment_2_1()); }
(rule__Asset__PropertiesAssignment_2_1)
{ after(grammarAccess.getAssetAccess().getPropertiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Resource__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Resource__Group__0__Impl
	rule__Resource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getNameAssignment_0()); }
(rule__Resource__NameAssignment_0)
{ after(grammarAccess.getResourceAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Resource__Group__1__Impl
	rule__Resource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getTypeAssignment_1()); }
(rule__Resource__TypeAssignment_1)
{ after(grammarAccess.getResourceAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Resource__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getGroup_2()); }
(rule__Resource__Group_2__0)*
{ after(grammarAccess.getResourceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Resource__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Resource__Group_2__0__Impl
	rule__Resource__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getResourceAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Resource__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getPropertiesAssignment_2_1()); }
(rule__Resource__PropertiesAssignment_2_1)
{ after(grammarAccess.getResourceAccess().getPropertiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attacker__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacker__Group__0__Impl
	rule__Attacker__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacker__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttackerAccess().getNameAssignment_0()); }
(rule__Attacker__NameAssignment_0)
{ after(grammarAccess.getAttackerAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attacker__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacker__Group__1__Impl
	rule__Attacker__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacker__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttackerAccess().getTypeAssignment_1()); }
(rule__Attacker__TypeAssignment_1)
{ after(grammarAccess.getAttackerAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attacker__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacker__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacker__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttackerAccess().getGroup_2()); }
(rule__Attacker__Group_2__0)*
{ after(grammarAccess.getAttackerAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attacker__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacker__Group_2__0__Impl
	rule__Attacker__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacker__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttackerAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getAttackerAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attacker__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attacker__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attacker__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttackerAccess().getPropertiesAssignment_2_1()); }
(rule__Attacker__PropertiesAssignment_2_1)
{ after(grammarAccess.getAttackerAccess().getPropertiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relationship__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__0__Impl
	rule__Relationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTypeAssignment_0()); }
(rule__Relationship__TypeAssignment_0)
{ after(grammarAccess.getRelationshipAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__1__Impl
	rule__Relationship__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getRelationshipAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__2__Impl
	rule__Relationship__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getSourceAssignment_2()); }
(rule__Relationship__SourceAssignment_2)
{ after(grammarAccess.getRelationshipAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__3__Impl
	rule__Relationship__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getRelationshipAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__4__Impl
	rule__Relationship__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTargetAssignment_4()); }
(rule__Relationship__TargetAssignment_4)
{ after(grammarAccess.getRelationshipAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getRelationshipAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}















rule__Situation__TimeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getTimeIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getSituationAccess().getTimeIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__WorldAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getWorldWorldParserRuleCall_1_0()); }
	ruleWorld{ after(grammarAccess.getSituationAccess().getWorldWorldParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__World__GoalsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getGoalsGoalParserRuleCall_1_0_0()); }
	ruleGoal{ after(grammarAccess.getWorldAccess().getGoalsGoalParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__World__DomainsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getDomainsDomainParserRuleCall_1_1_0()); }
	ruleDomain{ after(grammarAccess.getWorldAccess().getDomainsDomainParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__World__RelationshipsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorldAccess().getRelationshipsRelationshipParserRuleCall_1_2_0()); }
	ruleRelationship{ after(grammarAccess.getWorldAccess().getRelationshipsRelationshipParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SecurityGoal__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecurityGoalAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getSecurityGoalAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SecurityGoal__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecurityGoalAccess().getTypeSGKeyword_1_0()); }
(
{ before(grammarAccess.getSecurityGoalAccess().getTypeSGKeyword_1_0()); }

	'SG' 

{ after(grammarAccess.getSecurityGoalAccess().getTypeSGKeyword_1_0()); }
)

{ after(grammarAccess.getSecurityGoalAccess().getTypeSGKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SecurityGoal__PropertiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecurityGoalAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
	ruleProposition{ after(grammarAccess.getSecurityGoalAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getTypeRKeyword_1_0()); }
(
{ before(grammarAccess.getRequirementAccess().getTypeRKeyword_1_0()); }

	'R' 

{ after(grammarAccess.getRequirementAccess().getTypeRKeyword_1_0()); }
)

{ after(grammarAccess.getRequirementAccess().getTypeRKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__PropertiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
	ruleProposition{ after(grammarAccess.getRequirementAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AntiRequirement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntiRequirementAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAntiRequirementAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AntiRequirement__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntiRequirementAccess().getTypeARKeyword_1_0()); }
(
{ before(grammarAccess.getAntiRequirementAccess().getTypeARKeyword_1_0()); }

	'AR' 

{ after(grammarAccess.getAntiRequirementAccess().getTypeARKeyword_1_0()); }
)

{ after(grammarAccess.getAntiRequirementAccess().getTypeARKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AntiRequirement__PropertiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAntiRequirementAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
	ruleProposition{ after(grammarAccess.getAntiRequirementAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getTypeArKeyword_1_0()); }
(
{ before(grammarAccess.getActorAccess().getTypeArKeyword_1_0()); }

	'Ar' 

{ after(grammarAccess.getActorAccess().getTypeArKeyword_1_0()); }
)

{ after(grammarAccess.getActorAccess().getTypeArKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__PropertiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
	ruleProposition{ after(grammarAccess.getActorAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getTypeAnKeyword_1_0()); }
(
{ before(grammarAccess.getActionAccess().getTypeAnKeyword_1_0()); }

	'An' 

{ after(grammarAccess.getActionAccess().getTypeAnKeyword_1_0()); }
)

{ after(grammarAccess.getActionAccess().getTypeAnKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__PropertiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
	ruleProposition{ after(grammarAccess.getActionAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssetAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAssetAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssetAccess().getTypeAsKeyword_1_0()); }
(
{ before(grammarAccess.getAssetAccess().getTypeAsKeyword_1_0()); }

	'As' 

{ after(grammarAccess.getAssetAccess().getTypeAsKeyword_1_0()); }
)

{ after(grammarAccess.getAssetAccess().getTypeAsKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__PropertiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssetAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
	ruleProposition{ after(grammarAccess.getAssetAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getTypeReKeyword_1_0()); }
(
{ before(grammarAccess.getResourceAccess().getTypeReKeyword_1_0()); }

	'Re' 

{ after(grammarAccess.getResourceAccess().getTypeReKeyword_1_0()); }
)

{ after(grammarAccess.getResourceAccess().getTypeReKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__PropertiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
	ruleProposition{ after(grammarAccess.getResourceAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attacker__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttackerAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAttackerAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attacker__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttackerAccess().getTypeAkKeyword_1_0()); }
(
{ before(grammarAccess.getAttackerAccess().getTypeAkKeyword_1_0()); }

	'Ak' 

{ after(grammarAccess.getAttackerAccess().getTypeAkKeyword_1_0()); }
)

{ after(grammarAccess.getAttackerAccess().getTypeAkKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attacker__PropertiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttackerAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
	ruleProposition{ after(grammarAccess.getAttackerAccess().getPropertiesPropositionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionAccess().getNameSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getPropositionAccess().getNameSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTypeRelTypeEnumRuleCall_0_0()); }
	ruleRelType{ after(grammarAccess.getRelationshipAccess().getTypeRelTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getSourceWorldCrossReference_2_0()); }
(
{ before(grammarAccess.getRelationshipAccess().getSourceWorldIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationshipAccess().getSourceWorldIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRelationshipAccess().getSourceWorldCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTargetWorldCrossReference_4_0()); }
(
{ before(grammarAccess.getRelationshipAccess().getTargetWorldIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationshipAccess().getTargetWorldIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getRelationshipAccess().getTargetWorldCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('#' ~('#')+ '#'|'^'? ('a'..'z'|'A'..'Z'|'_'|'.') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'.')*);

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


