/*
 * generated by Xtext
 */
package eu.securechange.formatting;

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class SituationFormatter extends AbstractDeclarativeFormatter {
	
	@Override
	protected void configureFormatting(FormattingConfig c) {
		eu.securechange.services.SituationGrammarAccess f = (eu.securechange.services.SituationGrammarAccess) getGrammarAccess();

		c.setLinewrap(0, 1, 2).before(f.getSL_COMMENTRule());
		c.setLinewrap(0, 1, 2).before(f.getML_COMMENTRule());
		c.setLinewrap(0, 1, 1).after(f.getML_COMMENTRule());
		c.setAutoLinewrap(120);
	    c.setLinewrap(2).before(f.getDomainRule());
	    c.setLinewrap().before(f.getEntityRule());
	    c.setLinewrap().before(f.getRelationshipRule());
//	    c.setIndentation(f.getLinkAccess().getLeftCurlyBracketKeyword_3_0(),
// 	         f.getLinkAccess().getRightCurlyBracketKeyword_3_3());
//	    c.setNoSpace().around(f.getLinkAccess().getTypeAssignment_1());	    
//	    c.setNoSpace().after(f.getLinkAccess().getLeftCurlyBracketKeyword_3_0());	    
//	    c.setNoSpace().before(f.getLinkAccess().getRightCurlyBracketKeyword_3_3());	    
//	    c.setNoSpace().before(f.getLinkAccess().getCommaKeyword_3_2_0());	    
//		c.setNoLinewrap().around(f.getSL_COMMENTRule());
//		c.setLinewrap().before(f.getML_COMMENTRule());
	}
}
