/*******************************************************************************
 * EMF Specific pattern signature of the secmer.sistar.wrap.troposRelation pattern
 * Generated by EMF-IncQuery
 *******************************************************************************/

package signatures.secmer.sistar.wrap;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.viatra2.compiled.emf.runtime.api.IPatternSignature;

/**
 * Domain specific Data transfer Object of the secmer.sistar.wrap.troposRelation pattern.
 * Class fields correspond to parameters of the pattern. Fields with value null are considered unassigned.
 * Each instance is a partial substitution of pattern parameters, 
 * usable e.g. to represent a match of the pattern.
 */
public class TroposRelationSignature implements IPatternSignature {

	//constructor
	public TroposRelationSignature(Object Rel, Object Src, Object Trg) {
		this.Rel = Rel;
		this.Src = Src;
		this.Trg = Trg;	
	}

	//private attributes
	private Object Rel;	private Object Src;	private Object Trg;
	
	//getter methods
	public Object getRel(){
		 return Rel;
	}

	public Object getSrc(){
		 return Src;
	}

	public Object getTrg(){
		 return Trg;
	}
	
	//setter methods
	public void setRel(Object Rel){
		 this.Rel=Rel;
	}
	public void setSrc(Object Src){
		 this.Src=Src;
	}
	public void setTrg(Object Trg){
		 this.Trg=Trg;
	}

	//overridden hashCode() and equals() with Tuple-semantics
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TroposRelationSignature other = (TroposRelationSignature) obj;
		if (Rel == null) {if (other.Rel != null) return false;}
		else if (!Rel.equals(other.Rel)) return false;
		if (Src == null) {if (other.Src != null) return false;}
		else if (!Src.equals(other.Src)) return false;
		if (Trg == null) {if (other.Trg != null) return false;}
		else if (!Trg.equals(other.Trg)) return false;
		return true;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((Rel == null) ? 0 : Rel.hashCode());
		result = prime * result + ((Src == null) ? 0 : Src.hashCode());
		result = prime * result + ((Trg == null) ? 0 : Trg.hashCode());
		return result;
	}

	@Override
	public String toString(){
		EStructuralFeature feature = null;
		String _temp = " A(n) troposRelation signature object ("+hashCode()+")\n";
		// Checks that Rel has a name attribute and uses if it has 
		_temp += "\tRel = ";
		feature = null;
		if(Rel instanceof EObject)
			feature = ((EObject)Rel).eClass().getEStructuralFeature("name");

		if(feature != null && ((EObject)Rel).eGet(feature) != null) _temp += ((EObject)Rel).eGet(feature).toString();
		else _temp += Rel.toString();
		_temp += "\n";

		// Checks that Src has a name attribute and uses if it has 
		_temp += "\tSrc = ";
		feature = null;
		if(Src instanceof EObject)
			feature = ((EObject)Src).eClass().getEStructuralFeature("name");

		if(feature != null && ((EObject)Src).eGet(feature) != null) _temp += ((EObject)Src).eGet(feature).toString();
		else _temp += Src.toString();
		_temp += "\n";

		// Checks that Trg has a name attribute and uses if it has 
		_temp += "\tTrg = ";
		feature = null;
		if(Trg instanceof EObject)
			feature = ((EObject)Trg).eClass().getEStructuralFeature("name");

		if(feature != null && ((EObject)Trg).eGet(feature) != null) _temp += ((EObject)Trg).eGet(feature).toString();
		else _temp += Trg.toString();
		_temp += "\n";

		return _temp;
	}

	@Override
	public Object[] toArray() {
		return new Object[] {Rel, Src, Trg};
	}
}
