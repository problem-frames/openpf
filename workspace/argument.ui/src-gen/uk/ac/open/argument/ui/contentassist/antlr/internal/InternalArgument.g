/*
* generated by Xtext
*/
grammar InternalArgument;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package uk.ac.open.argument.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.open.argument.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import uk.ac.open.argument.services.ArgumentGrammarAccess;

}

@parser::members {
 
 	private ArgumentGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ArgumentGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleArgument
entryRuleArgument 
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentAccess().getGroup()); }
(rule__Argument__Group__0)
{ after(grammarAccess.getArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getGroup()); }
(rule__Statement__Group__0)
{ after(grammarAccess.getStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Argument__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getWarrantsAssignment_1_1_0()); }
(rule__Argument__WarrantsAssignment_1_1_0)
{ after(grammarAccess.getArgumentAccess().getWarrantsAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getArgumentAccess().getGroup_1_1_1()); }
(rule__Argument__Group_1_1_1__0)
{ after(grammarAccess.getArgumentAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Argument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getGroup_0()); }
(rule__Argument__Group_0__0)?
{ after(grammarAccess.getArgumentAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__1__Impl
	rule__Argument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getGroup_1()); }
(rule__Argument__Group_1__0)?
{ after(grammarAccess.getArgumentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__2__Impl
	rule__Argument__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getThusClaimKeyword_2()); }

	'thus claim' 

{ after(grammarAccess.getArgumentAccess().getThusClaimKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__3__Impl
	rule__Argument__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getNameAssignment_3()); }
(rule__Argument__NameAssignment_3)
{ after(grammarAccess.getArgumentAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__4__Impl
	rule__Argument__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getArgumentAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__5__Impl
	rule__Argument__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getStrAssignment_5()); }
(rule__Argument__StrAssignment_5)
{ after(grammarAccess.getArgumentAccess().getStrAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getGroup_6()); }
(rule__Argument__Group_6__0)?
{ after(grammarAccess.getArgumentAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Argument__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_0__0__Impl
	rule__Argument__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getGivenGroundsKeyword_0_0()); }

	'given grounds' 

{ after(grammarAccess.getArgumentAccess().getGivenGroundsKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getArgumentAccess().getGroundsAssignment_0_1()); }
(rule__Argument__GroundsAssignment_0_1)
{ after(grammarAccess.getArgumentAccess().getGroundsAssignment_0_1()); }
)
(
{ before(grammarAccess.getArgumentAccess().getGroundsAssignment_0_1()); }
(rule__Argument__GroundsAssignment_0_1)*
{ after(grammarAccess.getArgumentAccess().getGroundsAssignment_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Argument__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1__0__Impl
	rule__Argument__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getWarrantedByKeyword_1_0()); }

	'warranted by' 

{ after(grammarAccess.getArgumentAccess().getWarrantedByKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getArgumentAccess().getAlternatives_1_1()); }
(rule__Argument__Alternatives_1_1)
{ after(grammarAccess.getArgumentAccess().getAlternatives_1_1()); }
)
(
{ before(grammarAccess.getArgumentAccess().getAlternatives_1_1()); }
(rule__Argument__Alternatives_1_1)*
{ after(grammarAccess.getArgumentAccess().getAlternatives_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Argument__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_1_1__0__Impl
	rule__Argument__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getLeftParenthesisKeyword_1_1_1_0()); }

	'(' 

{ after(grammarAccess.getArgumentAccess().getLeftParenthesisKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_1_1__1__Impl
	rule__Argument__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getWarrantsAssignment_1_1_1_1()); }
(rule__Argument__WarrantsAssignment_1_1_1_1)
{ after(grammarAccess.getArgumentAccess().getWarrantsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getRightParenthesisKeyword_1_1_1_2()); }

	')' 

{ after(grammarAccess.getArgumentAccess().getRightParenthesisKeyword_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Argument__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_6__0__Impl
	rule__Argument__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getRebuttedByKeyword_6_0()); }

	'rebutted by' 

{ after(grammarAccess.getArgumentAccess().getRebuttedByKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getArgumentAccess().getRebuttsAssignment_6_1()); }
(rule__Argument__RebuttsAssignment_6_1)
{ after(grammarAccess.getArgumentAccess().getRebuttsAssignment_6_1()); }
)
(
{ before(grammarAccess.getArgumentAccess().getRebuttsAssignment_6_1()); }
(rule__Argument__RebuttsAssignment_6_1)*
{ after(grammarAccess.getArgumentAccess().getRebuttsAssignment_6_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameAssignment_0()); }
(rule__Statement__NameAssignment_0)
{ after(grammarAccess.getStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__1__Impl
	rule__Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getStatementAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__2__Impl
	rule__Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStrAssignment_2()); }
(rule__Statement__StrAssignment_2)
{ after(grammarAccess.getStatementAccess().getStrAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_3()); }
(rule__Statement__Group_3__0)?
{ after(grammarAccess.getStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_3__0__Impl
	rule__Statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRebuttedByKeyword_3_0()); }

	'rebutted by' 

{ after(grammarAccess.getStatementAccess().getRebuttedByKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStatementAccess().getRebuttsAssignment_3_1()); }
(rule__Statement__RebuttsAssignment_3_1)
{ after(grammarAccess.getStatementAccess().getRebuttsAssignment_3_1()); }
)
(
{ before(grammarAccess.getStatementAccess().getRebuttsAssignment_3_1()); }
(rule__Statement__RebuttsAssignment_3_1)*
{ after(grammarAccess.getStatementAccess().getRebuttsAssignment_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Argument__GroundsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getGroundsStatementParserRuleCall_0_1_0()); }
	ruleStatement{ after(grammarAccess.getArgumentAccess().getGroundsStatementParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__WarrantsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getWarrantsStatementParserRuleCall_1_1_0_0()); }
	ruleStatement{ after(grammarAccess.getArgumentAccess().getWarrantsStatementParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__WarrantsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getWarrantsArgumentParserRuleCall_1_1_1_1_0()); }
	ruleArgument{ after(grammarAccess.getArgumentAccess().getWarrantsArgumentParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__StrAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getStrSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getArgumentAccess().getStrSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__RebuttsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getRebuttsStatementParserRuleCall_6_1_0()); }
	ruleStatement{ after(grammarAccess.getArgumentAccess().getRebuttsStatementParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StrAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStrSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getStatementAccess().getStrSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__RebuttsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRebuttsStatementParserRuleCall_3_1_0()); }
	ruleStatement{ after(grammarAccess.getStatementAccess().getRebuttsStatementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


