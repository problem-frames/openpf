[comment encoding = UTF-8 /]
[module generate('http://www.ac.uk/open/argument/Argument')/]
[comment]
The transformation will generate one EC knowledge base per round of argumentation.
[/comment]
[template public generate(d: ArgumentDiagram) post (trim())]
[for (i: Integer | Sequence{1, 2})]
	[file (d.name.toString().concat(''+i).concat('.e'), false)]
sort boolean
sort integer
sort fluent
sort time: integer
range time 1 2
	  [let e : Integer = i]
		[for (a: Argument | d.nodes) ]
		  [if (a.round < e)]
boolean [a.name/]
			  [for (f: Argument | a.eAllContents(Argument))]
boolean [f.name/]
			  [/for]
		  	  [if (a.round = 0)]
! [if (a.expr = null)][a.name/][else]([a.expr/])[/if].
		      [/if]
		      [for (f:Argument | a.eAllContents(Argument))]
		        [for (g:Argument | d.eAllContents(Argument))]
		          [if (f = g.origin and g.round < e)];[/if]
		        [/for]
		        [if (f.expr = null)][f.name/][else][f.expr/][/if].
		      [/for]
		      [for (f:Argument | a.eAllContents(Argument)) separator(' & ')]
		        [if (f.expr = null)][f.name/][else]([f.expr/])[/if]
		      [/for]->[if (a.expr = null)][a.name/][else]([a.expr/])[/if].
		  [/if]
		[/for]	
	  [/let]
	[/file]	
[/for]
[/template]
