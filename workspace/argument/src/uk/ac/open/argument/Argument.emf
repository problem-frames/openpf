@namespace(uri="http://www.ac.uk/open/argument/Argument", prefix="argument")
@gmf(foo="bar")
package argument;

@gmf.diagram(foo="bar")
class ArgumentDiagram {
  attr String name;
  val Argument[*] nodes;
  val Link[*] links;
}
class Link {
  ref Argument from;
  ref Argument to;
}

@gmf.link(source="from", target="to", style="dot", width="2", color="255,0,0", target.decoration="arrow")
class Rebuts extends Link {
}

@gmf.link(source="from", target="to", style="solid", width="2", color="0,255,0", target.decoration="arrow")
class Mitigates extends Link {
  @gmf.link(target="rebuttal", style="dashed", width="1", color="255,105,180", target.decoration="arrow")
  ref Argument rebuttal;
}

@gmf.node(label="name, description, round", 
   label.pattern="{0}: {1} #{2}", 
   label.icon="false")
class Argument {
  attr String name;
  attr String description;
  attr int round;
  @gmf.link(target="origin", style="dash", width="2", color="160,32,240", target.decoration="arrow")
  ref Argument origin;
  attr String expr;
  attr String foreground;
  attr String background;
  attr String shape;
  attr String image;
  @gmf.compartment(foo="bar")
  val Argument[*] grounds;
  @gmf.compartment(foo="bar")
  val Argument[*] warrants;
}
