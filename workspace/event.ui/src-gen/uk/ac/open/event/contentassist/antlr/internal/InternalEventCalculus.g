/*
* generated by Xtext
*/
grammar InternalEventCalculus;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package uk.ac.open.event.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.open.event.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import uk.ac.open.event.services.EventCalculusGrammarAccess;

}

@parser::members {
 
 	private EventCalculusGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EventCalculusGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleKnowledge
entryRuleKnowledge :
{ before(grammarAccess.getKnowledgeRule()); }
	 ruleKnowledge
{ after(grammarAccess.getKnowledgeRule()); } 
	 EOF 
;

// Rule Knowledge
ruleKnowledge 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getKnowledgeAccess().getGroup()); }
(rule__Knowledge__Group__0)
{ after(grammarAccess.getKnowledgeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRule
entryRuleRule :
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRuleAccess().getGroup()); }
(rule__Rule__Group__0)
{ after(grammarAccess.getRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDecl
entryRuleVarDecl :
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getVarDeclAccess().getGroup()); }
(rule__VarDecl__Group__0)
{ after(grammarAccess.getVarDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntTerm
entryRuleIntTerm :
{ before(grammarAccess.getIntTermRule()); }
	 ruleIntTerm
{ after(grammarAccess.getIntTermRule()); } 
	 EOF 
;

// Rule IntTerm
ruleIntTerm 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getIntTermAccess().getAlternatives()); }
(rule__IntTerm__Alternatives)
{ after(grammarAccess.getIntTermAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntExpr
entryRuleIntExpr :
{ before(grammarAccess.getIntExprRule()); }
	 ruleIntExpr
{ after(grammarAccess.getIntExprRule()); } 
	 EOF 
;

// Rule IntExpr
ruleIntExpr 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getIntExprAccess().getAlternatives()); }
(rule__IntExpr__Alternatives)
{ after(grammarAccess.getIntExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryIntExpr
entryRuleBinaryIntExpr :
{ before(grammarAccess.getBinaryIntExprRule()); }
	 ruleBinaryIntExpr
{ after(grammarAccess.getBinaryIntExprRule()); } 
	 EOF 
;

// Rule BinaryIntExpr
ruleBinaryIntExpr 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBinaryIntExprAccess().getGroup()); }
(rule__BinaryIntExpr__Group__0)
{ after(grammarAccess.getBinaryIntExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemporalPredicate
entryRuleTemporalPredicate :
{ before(grammarAccess.getTemporalPredicateRule()); }
	 ruleTemporalPredicate
{ after(grammarAccess.getTemporalPredicateRule()); } 
	 EOF 
;

// Rule TemporalPredicate
ruleTemporalPredicate 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTemporalPredicateAccess().getAlternatives()); }
(rule__TemporalPredicate__Alternatives)
{ after(grammarAccess.getTemporalPredicateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolExpr
entryRuleBoolExpr :
{ before(grammarAccess.getBoolExprRule()); }
	 ruleBoolExpr
{ after(grammarAccess.getBoolExprRule()); } 
	 EOF 
;

// Rule BoolExpr
ruleBoolExpr 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBoolExprAccess().getAlternatives()); }
(rule__BoolExpr__Alternatives)
{ after(grammarAccess.getBoolExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryBoolExpr
entryRuleUnaryBoolExpr :
{ before(grammarAccess.getUnaryBoolExprRule()); }
	 ruleUnaryBoolExpr
{ after(grammarAccess.getUnaryBoolExprRule()); } 
	 EOF 
;

// Rule UnaryBoolExpr
ruleUnaryBoolExpr 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getUnaryBoolExprAccess().getAlternatives()); }
(rule__UnaryBoolExpr__Alternatives)
{ after(grammarAccess.getUnaryBoolExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryBoolExpr
entryRuleBinaryBoolExpr :
{ before(grammarAccess.getBinaryBoolExprRule()); }
	 ruleBinaryBoolExpr
{ after(grammarAccess.getBinaryBoolExprRule()); } 
	 EOF 
;

// Rule BinaryBoolExpr
ruleBinaryBoolExpr 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBinaryBoolExprAccess().getGroup()); }
(rule__BinaryBoolExpr__Group__0)
{ after(grammarAccess.getBinaryBoolExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity :
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getEntityAccess().getAlternatives()); }
(rule__Entity__Alternatives)
{ after(grammarAccess.getEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSort
entryRuleSort :
{ before(grammarAccess.getSortRule()); }
	 ruleSort
{ after(grammarAccess.getSortRule()); } 
	 EOF 
;

// Rule Sort
ruleSort 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSortAccess().getGroup()); }
(rule__Sort__Group__0)
{ after(grammarAccess.getSortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport :
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVar
entryRuleVar :
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getVarAccess().getGroup()); }
(rule__Var__Group__0)
{ after(grammarAccess.getVarAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFluent
entryRuleFluent :
{ before(grammarAccess.getFluentRule()); }
	 ruleFluent
{ after(grammarAccess.getFluentRule()); } 
	 EOF 
;

// Rule Fluent
ruleFluent 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getFluentAccess().getGroup()); }
(rule__Fluent__Group__0)
{ after(grammarAccess.getFluentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent :
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getEventAccess().getGroup()); }
(rule__Event__Group__0)
{ after(grammarAccess.getEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerm
entryRuleTerm :
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTermAccess().getGroup()); }
(rule__Term__Group__0)
{ after(grammarAccess.getTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHoldsAt
entryRuleHoldsAt :
{ before(grammarAccess.getHoldsAtRule()); }
	 ruleHoldsAt
{ after(grammarAccess.getHoldsAtRule()); } 
	 EOF 
;

// Rule HoldsAt
ruleHoldsAt 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getHoldsAtAccess().getGroup()); }
(rule__HoldsAt__Group__0)
{ after(grammarAccess.getHoldsAtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHappens
entryRuleHappens :
{ before(grammarAccess.getHappensRule()); }
	 ruleHappens
{ after(grammarAccess.getHappensRule()); } 
	 EOF 
;

// Rule Happens
ruleHappens 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getHappensAccess().getGroup()); }
(rule__Happens__Group__0)
{ after(grammarAccess.getHappensAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitiates
entryRuleInitiates :
{ before(grammarAccess.getInitiatesRule()); }
	 ruleInitiates
{ after(grammarAccess.getInitiatesRule()); } 
	 EOF 
;

// Rule Initiates
ruleInitiates 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getInitiatesAccess().getGroup()); }
(rule__Initiates__Group__0)
{ after(grammarAccess.getInitiatesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminates
entryRuleTerminates :
{ before(grammarAccess.getTerminatesRule()); }
	 ruleTerminates
{ after(grammarAccess.getTerminatesRule()); } 
	 EOF 
;

// Rule Terminates
ruleTerminates 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTerminatesAccess().getGroup()); }
(rule__Terminates__Group__0)
{ after(grammarAccess.getTerminatesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePath
entryRulePath :
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPathAccess().getGroup()); }
(rule__Path__Group__0)
{ after(grammarAccess.getPathAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFile
entryRuleFile :
{ before(grammarAccess.getFileRule()); }
	 ruleFile
{ after(grammarAccess.getFileRule()); } 
	 EOF 
;

// Rule File
ruleFile 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getFileAccess().getGroup()); }
(rule__File__Group__0)
{ after(grammarAccess.getFileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleContainer
entryRuleContainer :
{ before(grammarAccess.getContainerRule()); }
	 ruleContainer
{ after(grammarAccess.getContainerRule()); } 
	 EOF 
;

// Rule Container
ruleContainer 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getContainerAccess().getAlternatives()); }
(rule__Container__Alternatives)
{ after(grammarAccess.getContainerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActor
entryRuleActor :
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getActorAccess().getGroup()); }
(rule__Actor__Group__0)
{ after(grammarAccess.getActorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAgent
entryRuleAgent :
{ before(grammarAccess.getAgentRule()); }
	 ruleAgent
{ after(grammarAccess.getAgentRule()); } 
	 EOF 
;

// Rule Agent
ruleAgent 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAgentAccess().getGroup()); }
(rule__Agent__Group__0)
{ after(grammarAccess.getAgentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRole
entryRuleRole :
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRoleAccess().getGroup()); }
(rule__Role__Group__0)
{ after(grammarAccess.getRoleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePosition
entryRulePosition :
{ before(grammarAccess.getPositionRule()); }
	 rulePosition
{ after(grammarAccess.getPositionRule()); } 
	 EOF 
;

// Rule Position
rulePosition 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPositionAccess().getGroup()); }
(rule__Position__Group__0)
{ after(grammarAccess.getPositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntention
entryRuleIntention :
{ before(grammarAccess.getIntentionRule()); }
	 ruleIntention
{ after(grammarAccess.getIntentionRule()); } 
	 EOF 
;

// Rule Intention
ruleIntention 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getIntentionAccess().getAlternatives()); }
(rule__Intention__Alternatives)
{ after(grammarAccess.getIntentionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGoal
entryRuleGoal :
{ before(grammarAccess.getGoalRule()); }
	 ruleGoal
{ after(grammarAccess.getGoalRule()); } 
	 EOF 
;

// Rule Goal
ruleGoal 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getGoalAccess().getGroup()); }
(rule__Goal__Group__0)
{ after(grammarAccess.getGoalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSoftgoal
entryRuleSoftgoal :
{ before(grammarAccess.getSoftgoalRule()); }
	 ruleSoftgoal
{ after(grammarAccess.getSoftgoalRule()); } 
	 EOF 
;

// Rule Softgoal
ruleSoftgoal 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSoftgoalAccess().getGroup()); }
(rule__Softgoal__Group__0)
{ after(grammarAccess.getSoftgoalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTask
entryRuleTask :
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTaskAccess().getGroup()); }
(rule__Task__Group__0)
{ after(grammarAccess.getTaskAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResource
entryRuleResource :
{ before(grammarAccess.getResourceRule()); }
	 ruleResource
{ after(grammarAccess.getResourceRule()); } 
	 EOF 
;

// Rule Resource
ruleResource 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getResourceAccess().getGroup()); }
(rule__Resource__Group__0)
{ after(grammarAccess.getResourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBelief
entryRuleBelief :
{ before(grammarAccess.getBeliefRule()); }
	 ruleBelief
{ after(grammarAccess.getBeliefRule()); } 
	 EOF 
;

// Rule Belief
ruleBelief 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBeliefAccess().getGroup()); }
(rule__Belief__Group__0)
{ after(grammarAccess.getBeliefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleAssociation
entryRuleAssociation :
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAssociationAccess().getGroup()); }
(rule__Association__Group__0)
{ after(grammarAccess.getAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDependency
entryRuleDependency :
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDependencyAccess().getGroup()); }
(rule__Dependency__Group__0)
{ after(grammarAccess.getDependencyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecomposition
entryRuleDecomposition :
{ before(grammarAccess.getDecompositionRule()); }
	 ruleDecomposition
{ after(grammarAccess.getDecompositionRule()); } 
	 EOF 
;

// Rule Decomposition
ruleDecomposition 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDecompositionAccess().getAlternatives()); }
(rule__Decomposition__Alternatives)
{ after(grammarAccess.getDecompositionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndDecomposition
entryRuleAndDecomposition :
{ before(grammarAccess.getAndDecompositionRule()); }
	 ruleAndDecomposition
{ after(grammarAccess.getAndDecompositionRule()); } 
	 EOF 
;

// Rule AndDecomposition
ruleAndDecomposition 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAndDecompositionAccess().getGroup()); }
(rule__AndDecomposition__Group__0)
{ after(grammarAccess.getAndDecompositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrDecomposition
entryRuleOrDecomposition :
{ before(grammarAccess.getOrDecompositionRule()); }
	 ruleOrDecomposition
{ after(grammarAccess.getOrDecompositionRule()); } 
	 EOF 
;

// Rule OrDecomposition
ruleOrDecomposition 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOrDecompositionAccess().getGroup()); }
(rule__OrDecomposition__Group__0)
{ after(grammarAccess.getOrDecompositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContribution
entryRuleContribution :
{ before(grammarAccess.getContributionRule()); }
	 ruleContribution
{ after(grammarAccess.getContributionRule()); } 
	 EOF 
;

// Rule Contribution
ruleContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getContributionAccess().getAlternatives()); }
(rule__Contribution__Alternatives)
{ after(grammarAccess.getContributionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndContribution
entryRuleAndContribution :
{ before(grammarAccess.getAndContributionRule()); }
	 ruleAndContribution
{ after(grammarAccess.getAndContributionRule()); } 
	 EOF 
;

// Rule AndContribution
ruleAndContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAndContributionAccess().getGroup()); }
(rule__AndContribution__Group__0)
{ after(grammarAccess.getAndContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrContribution
entryRuleOrContribution :
{ before(grammarAccess.getOrContributionRule()); }
	 ruleOrContribution
{ after(grammarAccess.getOrContributionRule()); } 
	 EOF 
;

// Rule OrContribution
ruleOrContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOrContributionAccess().getGroup()); }
(rule__OrContribution__Group__0)
{ after(grammarAccess.getOrContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHelpContribution
entryRuleHelpContribution :
{ before(grammarAccess.getHelpContributionRule()); }
	 ruleHelpContribution
{ after(grammarAccess.getHelpContributionRule()); } 
	 EOF 
;

// Rule HelpContribution
ruleHelpContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getHelpContributionAccess().getGroup()); }
(rule__HelpContribution__Group__0)
{ after(grammarAccess.getHelpContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMakeContribution
entryRuleMakeContribution :
{ before(grammarAccess.getMakeContributionRule()); }
	 ruleMakeContribution
{ after(grammarAccess.getMakeContributionRule()); } 
	 EOF 
;

// Rule MakeContribution
ruleMakeContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getMakeContributionAccess().getGroup()); }
(rule__MakeContribution__Group__0)
{ after(grammarAccess.getMakeContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHurtContribution
entryRuleHurtContribution :
{ before(grammarAccess.getHurtContributionRule()); }
	 ruleHurtContribution
{ after(grammarAccess.getHurtContributionRule()); } 
	 EOF 
;

// Rule HurtContribution
ruleHurtContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getHurtContributionAccess().getGroup()); }
(rule__HurtContribution__Group__0)
{ after(grammarAccess.getHurtContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBreakContribution
entryRuleBreakContribution :
{ before(grammarAccess.getBreakContributionRule()); }
	 ruleBreakContribution
{ after(grammarAccess.getBreakContributionRule()); } 
	 EOF 
;

// Rule BreakContribution
ruleBreakContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBreakContributionAccess().getGroup()); }
(rule__BreakContribution__Group__0)
{ after(grammarAccess.getBreakContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule BinaryIntOp
ruleBinaryIntOp
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryIntOpAccess().getAlternatives()); }
(rule__BinaryIntOp__Alternatives)
{ after(grammarAccess.getBinaryIntOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryBoolOp
ruleUnaryBoolOp
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryBoolOpAccess().getNEGATIONEnumLiteralDeclaration()); }
(	'!' 
)
{ after(grammarAccess.getUnaryBoolOpAccess().getNEGATIONEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BinaryBoolOp
ruleBinaryBoolOp
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryBoolOpAccess().getAlternatives()); }
(rule__BinaryBoolOp__Alternatives)
{ after(grammarAccess.getBinaryBoolOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__IntTerm__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntTermAccess().getConstAssignment_0()); }
(rule__IntTerm__ConstAssignment_0)
{ after(grammarAccess.getIntTermAccess().getConstAssignment_0()); }
)

    |(
{ before(grammarAccess.getIntTermAccess().getVarAssignment_1()); }
(rule__IntTerm__VarAssignment_1)
{ after(grammarAccess.getIntTermAccess().getVarAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntExprAccess().getIntTermParserRuleCall_0()); }
	ruleIntTerm
{ after(grammarAccess.getIntExprAccess().getIntTermParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntExprAccess().getBinaryIntExprParserRuleCall_1()); }
	ruleBinaryIntExpr
{ after(grammarAccess.getIntExprAccess().getBinaryIntExprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalPredicate__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemporalPredicateAccess().getHoldsAtParserRuleCall_0()); }
	ruleHoldsAt
{ after(grammarAccess.getTemporalPredicateAccess().getHoldsAtParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTemporalPredicateAccess().getHappensParserRuleCall_1()); }
	ruleHappens
{ after(grammarAccess.getTemporalPredicateAccess().getHappensParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTemporalPredicateAccess().getInitiatesParserRuleCall_2()); }
	ruleInitiates
{ after(grammarAccess.getTemporalPredicateAccess().getInitiatesParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTemporalPredicateAccess().getTerminatesParserRuleCall_3()); }
	ruleTerminates
{ after(grammarAccess.getTemporalPredicateAccess().getTerminatesParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolExprAccess().getTemporalPredicateParserRuleCall_0()); }
	ruleTemporalPredicate
{ after(grammarAccess.getBoolExprAccess().getTemporalPredicateParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBoolExprAccess().getUnaryBoolExprParserRuleCall_1()); }
	ruleUnaryBoolExpr
{ after(grammarAccess.getBoolExprAccess().getUnaryBoolExprParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBoolExprAccess().getBinaryBoolExprParserRuleCall_2()); }
	ruleBinaryBoolExpr
{ after(grammarAccess.getBoolExprAccess().getBinaryBoolExprParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryBoolExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryBoolExprAccess().getGroup_0()); }
(rule__UnaryBoolExpr__Group_0__0)
{ after(grammarAccess.getUnaryBoolExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryBoolExprAccess().getGroup_1()); }
(rule__UnaryBoolExpr__Group_1__0)
{ after(grammarAccess.getUnaryBoolExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFluentParserRuleCall_0()); }
	ruleFluent
{ after(grammarAccess.getEntityAccess().getFluentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getEventParserRuleCall_1()); }
	ruleEvent
{ after(grammarAccess.getEntityAccess().getEventParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getSortParserRuleCall_2()); }
	ruleSort
{ after(grammarAccess.getEntityAccess().getSortParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerAccess().getActorParserRuleCall_0()); }
	ruleActor
{ after(grammarAccess.getContainerAccess().getActorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getContainerAccess().getAgentParserRuleCall_1()); }
	ruleAgent
{ after(grammarAccess.getContainerAccess().getAgentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getContainerAccess().getRoleParserRuleCall_2()); }
	ruleRole
{ after(grammarAccess.getContainerAccess().getRoleParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getContainerAccess().getPositionParserRuleCall_3()); }
	rulePosition
{ after(grammarAccess.getContainerAccess().getPositionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getIs_aAssignment_2_0()); }
(rule__Actor__Is_aAssignment_2_0)
{ after(grammarAccess.getActorAccess().getIs_aAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getActorAccess().getIs_part_ofAssignment_2_1()); }
(rule__Actor__Is_part_ofAssignment_2_1)
{ after(grammarAccess.getActorAccess().getIs_part_ofAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Intention__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntentionAccess().getGoalParserRuleCall_0()); }
	ruleGoal
{ after(grammarAccess.getIntentionAccess().getGoalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntentionAccess().getSoftgoalParserRuleCall_1()); }
	ruleSoftgoal
{ after(grammarAccess.getIntentionAccess().getSoftgoalParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIntentionAccess().getTaskParserRuleCall_2()); }
	ruleTask
{ after(grammarAccess.getIntentionAccess().getTaskParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getIntentionAccess().getResourceParserRuleCall_3()); }
	ruleResource
{ after(grammarAccess.getIntentionAccess().getResourceParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getIntentionAccess().getBeliefParserRuleCall_4()); }
	ruleBelief
{ after(grammarAccess.getIntentionAccess().getBeliefParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Decomposition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecompositionAccess().getAndDecompositionParserRuleCall_0()); }
	ruleAndDecomposition
{ after(grammarAccess.getDecompositionAccess().getAndDecompositionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDecompositionAccess().getOrDecompositionParserRuleCall_1()); }
	ruleOrDecomposition
{ after(grammarAccess.getDecompositionAccess().getOrDecompositionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributionAccess().getAndContributionParserRuleCall_0()); }
	ruleAndContribution
{ after(grammarAccess.getContributionAccess().getAndContributionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getContributionAccess().getOrContributionParserRuleCall_1()); }
	ruleOrContribution
{ after(grammarAccess.getContributionAccess().getOrContributionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getContributionAccess().getHelpContributionParserRuleCall_2()); }
	ruleHelpContribution
{ after(grammarAccess.getContributionAccess().getHelpContributionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getContributionAccess().getHurtContributionParserRuleCall_3()); }
	ruleHurtContribution
{ after(grammarAccess.getContributionAccess().getHurtContributionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getContributionAccess().getMakeContributionParserRuleCall_4()); }
	ruleMakeContribution
{ after(grammarAccess.getContributionAccess().getMakeContributionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getContributionAccess().getBreakContributionParserRuleCall_5()); }
	ruleBreakContribution
{ after(grammarAccess.getContributionAccess().getBreakContributionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIntOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryIntOpAccess().getPLUSEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getBinaryIntOpAccess().getPLUSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBinaryIntOpAccess().getMINUSEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getBinaryIntOpAccess().getMINUSEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryBoolOpAccess().getIMPLICATIONEnumLiteralDeclaration_0()); }
(	'->' 
)
{ after(grammarAccess.getBinaryBoolOpAccess().getIMPLICATIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBinaryBoolOpAccess().getEQUIVALENCEEnumLiteralDeclaration_1()); }
(	'<->' 
)
{ after(grammarAccess.getBinaryBoolOpAccess().getEQUIVALENCEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getBinaryBoolOpAccess().getANDEnumLiteralDeclaration_2()); }
(	'&' 
)
{ after(grammarAccess.getBinaryBoolOpAccess().getANDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getBinaryBoolOpAccess().getOREnumLiteralDeclaration_3()); }
(	'|' 
)
{ after(grammarAccess.getBinaryBoolOpAccess().getOREnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Knowledge__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getImportsAssignment_0()); }
(rule__Knowledge__ImportsAssignment_0)*
{ after(grammarAccess.getKnowledgeAccess().getImportsAssignment_0()); }
)

	rule__Knowledge__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Knowledge__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getEntitiesAssignment_1()); }
(rule__Knowledge__EntitiesAssignment_1)*
{ after(grammarAccess.getKnowledgeAccess().getEntitiesAssignment_1()); }
)

	rule__Knowledge__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Knowledge__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getGroup_2()); }
(rule__Knowledge__Group_2__0)*
{ after(grammarAccess.getKnowledgeAccess().getGroup_2()); }
)

	rule__Knowledge__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Knowledge__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getVarsAssignment_3()); }
(rule__Knowledge__VarsAssignment_3)*
{ after(grammarAccess.getKnowledgeAccess().getVarsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Knowledge__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getRulesAssignment_2_0()); }
(rule__Knowledge__RulesAssignment_2_0)
{ after(grammarAccess.getKnowledgeAccess().getRulesAssignment_2_0()); }
)

	rule__Knowledge__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Knowledge__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getFullStopKeyword_2_1()); }

	'.' 

{ after(grammarAccess.getKnowledgeAccess().getFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getDeclAssignment_0()); }
(rule__Rule__DeclAssignment_0)?
{ after(grammarAccess.getRuleAccess().getDeclAssignment_0()); }
)

	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getExprAssignment_1()); }
(rule__Rule__ExprAssignment_1)
{ after(grammarAccess.getRuleAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_0()); }
)

	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getVarsAssignment_1()); }
(rule__VarDecl__VarsAssignment_1)
{ after(grammarAccess.getVarDeclAccess().getVarsAssignment_1()); }
)

	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getGroup_2()); }
(rule__VarDecl__Group_2__0)*
{ after(grammarAccess.getVarDeclAccess().getGroup_2()); }
)

	rule__VarDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VarDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getVarDeclAccess().getCommaKeyword_2_0()); }
)

	rule__VarDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getVarsAssignment_2_1()); }
(rule__VarDecl__VarsAssignment_2_1)
{ after(grammarAccess.getVarDeclAccess().getVarsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BinaryIntExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryIntExprAccess().getOprAssignment_0()); }
(rule__BinaryIntExpr__OprAssignment_0)
{ after(grammarAccess.getBinaryIntExprAccess().getOprAssignment_0()); }
)

	rule__BinaryIntExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryIntExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryIntExprAccess().getBinaryopAssignment_1()); }
(rule__BinaryIntExpr__BinaryopAssignment_1)
{ after(grammarAccess.getBinaryIntExprAccess().getBinaryopAssignment_1()); }
)

	rule__BinaryIntExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryIntExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryIntExprAccess().getOprAssignment_2()); }
(rule__BinaryIntExpr__OprAssignment_2)
{ after(grammarAccess.getBinaryIntExprAccess().getOprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryBoolExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryBoolExprAccess().getUnaryop_lhsAssignment_0_0()); }
(rule__UnaryBoolExpr__Unaryop_lhsAssignment_0_0)
{ after(grammarAccess.getUnaryBoolExprAccess().getUnaryop_lhsAssignment_0_0()); }
)

	rule__UnaryBoolExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryBoolExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryBoolExprAccess().getOprAssignment_0_1()); }
(rule__UnaryBoolExpr__OprAssignment_0_1)
{ after(grammarAccess.getUnaryBoolExprAccess().getOprAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryBoolExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryBoolExprAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getUnaryBoolExprAccess().getLeftParenthesisKeyword_1_0()); }
)

	rule__UnaryBoolExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryBoolExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryBoolExprAccess().getOpsAssignment_1_1()); }
(rule__UnaryBoolExpr__OpsAssignment_1_1)
{ after(grammarAccess.getUnaryBoolExprAccess().getOpsAssignment_1_1()); }
)

	rule__UnaryBoolExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryBoolExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryBoolExprAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getUnaryBoolExprAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinaryBoolExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryBoolExprAccess().getOprAssignment_0()); }
(rule__BinaryBoolExpr__OprAssignment_0)
{ after(grammarAccess.getBinaryBoolExprAccess().getOprAssignment_0()); }
)

	rule__BinaryBoolExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryBoolExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryBoolExprAccess().getBinaryopAssignment_1()); }
(rule__BinaryBoolExpr__BinaryopAssignment_1)
{ after(grammarAccess.getBinaryBoolExprAccess().getBinaryopAssignment_1()); }
)

	rule__BinaryBoolExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryBoolExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryBoolExprAccess().getOprAssignment_2()); }
(rule__BinaryBoolExpr__OprAssignment_2)
{ after(grammarAccess.getBinaryBoolExprAccess().getOprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortAccess().getSortKeyword_0()); }

	'sort' 

{ after(grammarAccess.getSortAccess().getSortKeyword_0()); }
)

	rule__Sort__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Sort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortAccess().getNameAssignment_1()); }
(rule__Sort__NameAssignment_1)
{ after(grammarAccess.getSortAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getLoadKeyword_0()); }

	'load' 

{ after(grammarAccess.getImportAccess().getLoadKeyword_0()); }
)

	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getPathAssignment_1()); }
(rule__Import__PathAssignment_1)
{ after(grammarAccess.getImportAccess().getPathAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Var__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getRangeKeyword_0()); }

	'range' 

{ after(grammarAccess.getVarAccess().getRangeKeyword_0()); }
)

	rule__Var__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getNameAssignment_1()); }
(rule__Var__NameAssignment_1)
{ after(grammarAccess.getVarAccess().getNameAssignment_1()); }
)

	rule__Var__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getMinAssignment_2()); }
(rule__Var__MinAssignment_2)
{ after(grammarAccess.getVarAccess().getMinAssignment_2()); }
)

	rule__Var__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getMaxAssignment_3()); }
(rule__Var__MaxAssignment_3)
{ after(grammarAccess.getVarAccess().getMaxAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Fluent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFluentAccess().getFluentKeyword_0()); }

	'fluent' 

{ after(grammarAccess.getFluentAccess().getFluentKeyword_0()); }
)

	rule__Fluent__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Fluent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFluentAccess().getTermAssignment_1()); }
(rule__Fluent__TermAssignment_1)
{ after(grammarAccess.getFluentAccess().getTermAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Event__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getEventKeyword_0()); }

	'event' 

{ after(grammarAccess.getEventAccess().getEventKeyword_0()); }
)

	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getTermAssignment_1()); }
(rule__Event__TermAssignment_1)
{ after(grammarAccess.getEventAccess().getTermAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getNameAssignment_0()); }
(rule__Term__NameAssignment_0)
{ after(grammarAccess.getTermAccess().getNameAssignment_0()); }
)

	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getGroup_1()); }
(rule__Term__Group_1__0)?
{ after(grammarAccess.getTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getTermAccess().getLeftParenthesisKeyword_1_0()); }
)

	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getArgsAssignment_1_1()); }
(rule__Term__ArgsAssignment_1_1)?
{ after(grammarAccess.getTermAccess().getArgsAssignment_1_1()); }
)

	rule__Term__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getGroup_1_2()); }
(rule__Term__Group_1_2__0)*
{ after(grammarAccess.getTermAccess().getGroup_1_2()); }
)

	rule__Term__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getTermAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Term__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getTermAccess().getCommaKeyword_1_2_0()); }
)

	rule__Term__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getArgsAssignment_1_2_1()); }
(rule__Term__ArgsAssignment_1_2_1)
{ after(grammarAccess.getTermAccess().getArgsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HoldsAt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoldsAtAccess().getHoldsAtKeyword_0()); }

	'HoldsAt' 

{ after(grammarAccess.getHoldsAtAccess().getHoldsAtKeyword_0()); }
)

	rule__HoldsAt__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__HoldsAt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoldsAtAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getHoldsAtAccess().getLeftParenthesisKeyword_1()); }
)

	rule__HoldsAt__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__HoldsAt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoldsAtAccess().getFluentAssignment_2()); }
(rule__HoldsAt__FluentAssignment_2)
{ after(grammarAccess.getHoldsAtAccess().getFluentAssignment_2()); }
)

	rule__HoldsAt__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__HoldsAt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoldsAtAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getHoldsAtAccess().getCommaKeyword_3()); }
)

	rule__HoldsAt__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__HoldsAt__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoldsAtAccess().getTimeAssignment_4()); }
(rule__HoldsAt__TimeAssignment_4)
{ after(grammarAccess.getHoldsAtAccess().getTimeAssignment_4()); }
)

	rule__HoldsAt__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__HoldsAt__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoldsAtAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getHoldsAtAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Happens__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHappensAccess().getHappensKeyword_0()); }

	'Happens' 

{ after(grammarAccess.getHappensAccess().getHappensKeyword_0()); }
)

	rule__Happens__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Happens__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHappensAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getHappensAccess().getLeftParenthesisKeyword_1()); }
)

	rule__Happens__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Happens__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHappensAccess().getEventAssignment_2()); }
(rule__Happens__EventAssignment_2)
{ after(grammarAccess.getHappensAccess().getEventAssignment_2()); }
)

	rule__Happens__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Happens__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHappensAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getHappensAccess().getCommaKeyword_3()); }
)

	rule__Happens__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Happens__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHappensAccess().getTimeAssignment_4()); }
(rule__Happens__TimeAssignment_4)
{ after(grammarAccess.getHappensAccess().getTimeAssignment_4()); }
)

	rule__Happens__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Happens__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHappensAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getHappensAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Initiates__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiatesAccess().getInitiatesKeyword_0()); }

	'Initiates' 

{ after(grammarAccess.getInitiatesAccess().getInitiatesKeyword_0()); }
)

	rule__Initiates__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Initiates__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiatesAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getInitiatesAccess().getLeftParenthesisKeyword_1()); }
)

	rule__Initiates__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Initiates__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiatesAccess().getEventAssignment_2()); }
(rule__Initiates__EventAssignment_2)
{ after(grammarAccess.getInitiatesAccess().getEventAssignment_2()); }
)

	rule__Initiates__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Initiates__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiatesAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getInitiatesAccess().getCommaKeyword_3()); }
)

	rule__Initiates__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Initiates__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiatesAccess().getFluentAssignment_4()); }
(rule__Initiates__FluentAssignment_4)
{ after(grammarAccess.getInitiatesAccess().getFluentAssignment_4()); }
)

	rule__Initiates__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Initiates__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiatesAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getInitiatesAccess().getCommaKeyword_5()); }
)

	rule__Initiates__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Initiates__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiatesAccess().getTimeAssignment_6()); }
(rule__Initiates__TimeAssignment_6)
{ after(grammarAccess.getInitiatesAccess().getTimeAssignment_6()); }
)

	rule__Initiates__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__Initiates__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiatesAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getInitiatesAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Terminates__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatesAccess().getTerminatesKeyword_0()); }

	'Terminates' 

{ after(grammarAccess.getTerminatesAccess().getTerminatesKeyword_0()); }
)

	rule__Terminates__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Terminates__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatesAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTerminatesAccess().getLeftParenthesisKeyword_1()); }
)

	rule__Terminates__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Terminates__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatesAccess().getEventAssignment_2()); }
(rule__Terminates__EventAssignment_2)
{ after(grammarAccess.getTerminatesAccess().getEventAssignment_2()); }
)

	rule__Terminates__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Terminates__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatesAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getTerminatesAccess().getCommaKeyword_3()); }
)

	rule__Terminates__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Terminates__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatesAccess().getFluentAssignment_4()); }
(rule__Terminates__FluentAssignment_4)
{ after(grammarAccess.getTerminatesAccess().getFluentAssignment_4()); }
)

	rule__Terminates__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Terminates__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatesAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getTerminatesAccess().getCommaKeyword_5()); }
)

	rule__Terminates__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Terminates__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatesAccess().getTimeAssignment_6()); }
(rule__Terminates__TimeAssignment_6)
{ after(grammarAccess.getTerminatesAccess().getTimeAssignment_6()); }
)

	rule__Terminates__Group__7
;
finally {
	restoreStackSize(stackSize);
}


rule__Terminates__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatesAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getTerminatesAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Path__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getFileAssignment_0()); }
(rule__Path__FileAssignment_0)
{ after(grammarAccess.getPathAccess().getFileAssignment_0()); }
)

	rule__Path__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getGroup_1()); }
(rule__Path__Group_1__0)*
{ after(grammarAccess.getPathAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Path__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); }

	'/' 

{ after(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); }
)

	rule__Path__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getFileAssignment_1_1()); }
(rule__Path__FileAssignment_1_1)
{ after(grammarAccess.getPathAccess().getFileAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__File__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAccess().getNameAssignment_0()); }
(rule__File__NameAssignment_0)
{ after(grammarAccess.getFileAccess().getNameAssignment_0()); }
)

	rule__File__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__File__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAccess().getGroup_1()); }
(rule__File__Group_1__0)*
{ after(grammarAccess.getFileAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__File__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFileAccess().getFullStopKeyword_1_0()); }
)

	rule__File__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__File__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAccess().getNameAssignment_1_1()); }
(rule__File__NameAssignment_1_1)
{ after(grammarAccess.getFileAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Actor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getActorKeyword_0()); }

	'actor' 

{ after(grammarAccess.getActorAccess().getActorKeyword_0()); }
)

	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameAssignment_1()); }
(rule__Actor__NameAssignment_1)
{ after(grammarAccess.getActorAccess().getNameAssignment_1()); }
)

	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getAlternatives_2()); }
(rule__Actor__Alternatives_2)*
{ after(grammarAccess.getActorAccess().getAlternatives_2()); }
)

	rule__Actor__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getGroup_3()); }
(rule__Actor__Group_3__0)?
{ after(grammarAccess.getActorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Actor__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3_0()); }
)

	rule__Actor__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getIntentionsAssignment_3_1()); }
(rule__Actor__IntentionsAssignment_3_1)*
{ after(grammarAccess.getActorAccess().getIntentionsAssignment_3_1()); }
)

	rule__Actor__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_3_2()); }

	'}' 

{ after(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Agent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getAgentKeyword_0()); }

	'agent' 

{ after(grammarAccess.getAgentAccess().getAgentKeyword_0()); }
)

	rule__Agent__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getNameAssignment_1()); }
(rule__Agent__NameAssignment_1)
{ after(grammarAccess.getAgentAccess().getNameAssignment_1()); }
)

	rule__Agent__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getGroup_2()); }
(rule__Agent__Group_2__0)?
{ after(grammarAccess.getAgentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Agent__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_2_0()); }
)

	rule__Agent__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getIntentionsAssignment_2_1()); }
(rule__Agent__IntentionsAssignment_2_1)*
{ after(grammarAccess.getAgentAccess().getIntentionsAssignment_2_1()); }
)

	rule__Agent__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Role__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRoleKeyword_0()); }

	'role' 

{ after(grammarAccess.getRoleAccess().getRoleKeyword_0()); }
)

	rule__Role__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getNameAssignment_1()); }
(rule__Role__NameAssignment_1)
{ after(grammarAccess.getRoleAccess().getNameAssignment_1()); }
)

	rule__Role__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getGroup_2()); }
(rule__Role__Group_2__0)?
{ after(grammarAccess.getRoleAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Role__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_2_0()); }
)

	rule__Role__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getIntentionsAssignment_2_1()); }
(rule__Role__IntentionsAssignment_2_1)*
{ after(grammarAccess.getRoleAccess().getIntentionsAssignment_2_1()); }
)

	rule__Role__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Position__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getPositionKeyword_0()); }

	'position' 

{ after(grammarAccess.getPositionAccess().getPositionKeyword_0()); }
)

	rule__Position__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getNameAssignment_1()); }
(rule__Position__NameAssignment_1)
{ after(grammarAccess.getPositionAccess().getNameAssignment_1()); }
)

	rule__Position__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getGroup_2()); }
(rule__Position__Group_2__0)?
{ after(grammarAccess.getPositionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Position__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getPositionAccess().getLeftCurlyBracketKeyword_2_0()); }
)

	rule__Position__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getIntentionsAssignment_2_1()); }
(rule__Position__IntentionsAssignment_2_1)*
{ after(grammarAccess.getPositionAccess().getIntentionsAssignment_2_1()); }
)

	rule__Position__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getPositionAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Goal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getGoalKeyword_0()); }

	'goal' 

{ after(grammarAccess.getGoalAccess().getGoalKeyword_0()); }
)

	rule__Goal__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getNameAssignment_1()); }
(rule__Goal__NameAssignment_1)
{ after(grammarAccess.getGoalAccess().getNameAssignment_1()); }
)

	rule__Goal__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getGroup_2()); }
(rule__Goal__Group_2__0)?
{ after(grammarAccess.getGoalAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Goal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getGoalAccess().getLeftCurlyBracketKeyword_2_0()); }
)

	rule__Goal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getDecompositionsAssignment_2_1()); }
(rule__Goal__DecompositionsAssignment_2_1)*
{ after(grammarAccess.getGoalAccess().getDecompositionsAssignment_2_1()); }
)

	rule__Goal__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getGoalAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Softgoal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSoftgoalAccess().getSoftKeyword_0()); }

	'soft' 

{ after(grammarAccess.getSoftgoalAccess().getSoftKeyword_0()); }
)

	rule__Softgoal__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Softgoal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSoftgoalAccess().getNameAssignment_1()); }
(rule__Softgoal__NameAssignment_1)
{ after(grammarAccess.getSoftgoalAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }

	'task' 

{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)

	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
(rule__Task__NameAssignment_1)
{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Resource__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getResourceKeyword_0()); }

	'resource' 

{ after(grammarAccess.getResourceAccess().getResourceKeyword_0()); }
)

	rule__Resource__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getNameAssignment_1()); }
(rule__Resource__NameAssignment_1)
{ after(grammarAccess.getResourceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Belief__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getBeliefKeyword_0()); }

	'belief' 

{ after(grammarAccess.getBeliefAccess().getBeliefKeyword_0()); }
)

	rule__Belief__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Belief__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getNameAssignment_1()); }
(rule__Belief__NameAssignment_1)
{ after(grammarAccess.getBeliefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Association__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getSourceAssignment_0()); }
(rule__Association__SourceAssignment_0)
{ after(grammarAccess.getAssociationAccess().getSourceAssignment_0()); }
)

	rule__Association__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getTildeTildeGreaterThanSignKeyword_1()); }

	'~~>' 

{ after(grammarAccess.getAssociationAccess().getTildeTildeGreaterThanSignKeyword_1()); }
)

	rule__Association__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getTargetAssignment_2()); }
(rule__Association__TargetAssignment_2)
{ after(grammarAccess.getAssociationAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Dependency__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependencyAccess().getDependencyFromAssignment_0()); }
(rule__Dependency__DependencyFromAssignment_0)
{ after(grammarAccess.getDependencyAccess().getDependencyFromAssignment_0()); }
)

	rule__Dependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependencyAccess().getTildeGreaterThanSignKeyword_1()); }

	'~>' 

{ after(grammarAccess.getDependencyAccess().getTildeGreaterThanSignKeyword_1()); }
)

	rule__Dependency__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependencyAccess().getDependencyToAssignment_2()); }
(rule__Dependency__DependencyToAssignment_2)
{ after(grammarAccess.getDependencyAccess().getDependencyToAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndDecomposition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndDecompositionAccess().getTargetAssignment_0()); }
(rule__AndDecomposition__TargetAssignment_0)
{ after(grammarAccess.getAndDecompositionAccess().getTargetAssignment_0()); }
)

	rule__AndDecomposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AndDecomposition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndDecompositionAccess().getAndKeyword_1()); }

	'<-(and)-' 

{ after(grammarAccess.getAndDecompositionAccess().getAndKeyword_1()); }
)

	rule__AndDecomposition__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AndDecomposition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndDecompositionAccess().getSourceAssignment_2()); }
(rule__AndDecomposition__SourceAssignment_2)
{ after(grammarAccess.getAndDecompositionAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrDecomposition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrDecompositionAccess().getTargetAssignment_0()); }
(rule__OrDecomposition__TargetAssignment_0)
{ after(grammarAccess.getOrDecompositionAccess().getTargetAssignment_0()); }
)

	rule__OrDecomposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OrDecomposition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrDecompositionAccess().getOrKeyword_1()); }

	'<-(or)-' 

{ after(grammarAccess.getOrDecompositionAccess().getOrKeyword_1()); }
)

	rule__OrDecomposition__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OrDecomposition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrDecompositionAccess().getSourceAssignment_2()); }
(rule__OrDecomposition__SourceAssignment_2)
{ after(grammarAccess.getOrDecompositionAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndContributionAccess().getSourceAssignment_0()); }
(rule__AndContribution__SourceAssignment_0)
{ after(grammarAccess.getAndContributionAccess().getSourceAssignment_0()); }
)

	rule__AndContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AndContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndContributionAccess().getAndKeyword_1()); }

	'-(and)->' 

{ after(grammarAccess.getAndContributionAccess().getAndKeyword_1()); }
)

	rule__AndContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AndContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndContributionAccess().getTargetAssignment_2()); }
(rule__AndContribution__TargetAssignment_2)
{ after(grammarAccess.getAndContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrContributionAccess().getSourceAssignment_0()); }
(rule__OrContribution__SourceAssignment_0)
{ after(grammarAccess.getOrContributionAccess().getSourceAssignment_0()); }
)

	rule__OrContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OrContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrContributionAccess().getOrKeyword_1()); }

	'-(or)->' 

{ after(grammarAccess.getOrContributionAccess().getOrKeyword_1()); }
)

	rule__OrContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OrContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrContributionAccess().getTargetAssignment_2()); }
(rule__OrContribution__TargetAssignment_2)
{ after(grammarAccess.getOrContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HelpContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHelpContributionAccess().getSourceAssignment_0()); }
(rule__HelpContribution__SourceAssignment_0)
{ after(grammarAccess.getHelpContributionAccess().getSourceAssignment_0()); }
)

	rule__HelpContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__HelpContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHelpContributionAccess().getHyphenMinusLeftParenthesisPlusSignRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }

	'-(+)->' 

{ after(grammarAccess.getHelpContributionAccess().getHyphenMinusLeftParenthesisPlusSignRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }
)

	rule__HelpContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__HelpContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHelpContributionAccess().getTargetAssignment_2()); }
(rule__HelpContribution__TargetAssignment_2)
{ after(grammarAccess.getHelpContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MakeContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeContributionAccess().getSourceAssignment_0()); }
(rule__MakeContribution__SourceAssignment_0)
{ after(grammarAccess.getMakeContributionAccess().getSourceAssignment_0()); }
)

	rule__MakeContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MakeContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeContributionAccess().getHyphenMinusLeftParenthesisPlusSignPlusSignRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }

	'-(++)->' 

{ after(grammarAccess.getMakeContributionAccess().getHyphenMinusLeftParenthesisPlusSignPlusSignRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }
)

	rule__MakeContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MakeContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeContributionAccess().getTargetAssignment_2()); }
(rule__MakeContribution__TargetAssignment_2)
{ after(grammarAccess.getMakeContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HurtContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHurtContributionAccess().getSourceAssignment_0()); }
(rule__HurtContribution__SourceAssignment_0)
{ after(grammarAccess.getHurtContributionAccess().getSourceAssignment_0()); }
)

	rule__HurtContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__HurtContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHurtContributionAccess().getHyphenMinusLeftParenthesisHyphenMinusRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }

	'-(-)->' 

{ after(grammarAccess.getHurtContributionAccess().getHyphenMinusLeftParenthesisHyphenMinusRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }
)

	rule__HurtContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__HurtContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHurtContributionAccess().getTargetAssignment_2()); }
(rule__HurtContribution__TargetAssignment_2)
{ after(grammarAccess.getHurtContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BreakContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContributionAccess().getSourceAssignment_0()); }
(rule__BreakContribution__SourceAssignment_0)
{ after(grammarAccess.getBreakContributionAccess().getSourceAssignment_0()); }
)

	rule__BreakContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContributionAccess().getHyphenMinusLeftParenthesisHyphenMinusHyphenMinusRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }

	'-(--)->' 

{ after(grammarAccess.getBreakContributionAccess().getHyphenMinusLeftParenthesisHyphenMinusHyphenMinusRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }
)

	rule__BreakContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContributionAccess().getTargetAssignment_2()); }
(rule__BreakContribution__TargetAssignment_2)
{ after(grammarAccess.getBreakContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Knowledge__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getKnowledgeAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__EntitiesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getEntitiesEntityParserRuleCall_1_0()); }
	ruleEntity{ after(grammarAccess.getKnowledgeAccess().getEntitiesEntityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__RulesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getRulesRuleParserRuleCall_2_0_0()); }
	ruleRule{ after(grammarAccess.getKnowledgeAccess().getRulesRuleParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__VarsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getVarsVarParserRuleCall_3_0()); }
	ruleVar{ after(grammarAccess.getKnowledgeAccess().getVarsVarParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__DeclAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getDeclVarDeclParserRuleCall_0_0()); }
	ruleVarDecl{ after(grammarAccess.getRuleAccess().getDeclVarDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getExprBoolExprParserRuleCall_1_0()); }
	ruleBoolExpr{ after(grammarAccess.getRuleAccess().getExprBoolExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VarsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getVarsVarCrossReference_1_0()); }
(
{ before(grammarAccess.getVarDeclAccess().getVarsVarIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getVarDeclAccess().getVarsVarIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getVarDeclAccess().getVarsVarCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VarsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getVarsVarCrossReference_2_1_0()); }
(
{ before(grammarAccess.getVarDeclAccess().getVarsVarIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getVarDeclAccess().getVarsVarIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getVarDeclAccess().getVarsVarCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntTerm__ConstAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntTermAccess().getConstINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getIntTermAccess().getConstINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntTerm__VarAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntTermAccess().getVarVarCrossReference_1_0()); }
(
{ before(grammarAccess.getIntTermAccess().getVarVarIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIntTermAccess().getVarVarIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getIntTermAccess().getVarVarCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIntExpr__OprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryIntExprAccess().getOprIntTermParserRuleCall_0_0()); }
	ruleIntTerm{ after(grammarAccess.getBinaryIntExprAccess().getOprIntTermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIntExpr__BinaryopAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryIntExprAccess().getBinaryopBinaryIntOpEnumRuleCall_1_0()); }
	ruleBinaryIntOp{ after(grammarAccess.getBinaryIntExprAccess().getBinaryopBinaryIntOpEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryIntExpr__OprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryIntExprAccess().getOprIntTermParserRuleCall_2_0()); }
	ruleIntTerm{ after(grammarAccess.getBinaryIntExprAccess().getOprIntTermParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryBoolExpr__Unaryop_lhsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryBoolExprAccess().getUnaryop_lhsUnaryBoolOpEnumRuleCall_0_0_0()); }
	ruleUnaryBoolOp{ after(grammarAccess.getUnaryBoolExprAccess().getUnaryop_lhsUnaryBoolOpEnumRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryBoolExpr__OprAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryBoolExprAccess().getOprBoolExprParserRuleCall_0_1_0()); }
	ruleBoolExpr{ after(grammarAccess.getUnaryBoolExprAccess().getOprBoolExprParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryBoolExpr__OpsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryBoolExprAccess().getOpsBoolExprParserRuleCall_1_1_0()); }
	ruleBoolExpr{ after(grammarAccess.getUnaryBoolExprAccess().getOpsBoolExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolExpr__OprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryBoolExprAccess().getOprTemporalPredicateParserRuleCall_0_0()); }
	ruleTemporalPredicate{ after(grammarAccess.getBinaryBoolExprAccess().getOprTemporalPredicateParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolExpr__BinaryopAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryBoolExprAccess().getBinaryopBinaryBoolOpEnumRuleCall_1_0()); }
	ruleBinaryBoolOp{ after(grammarAccess.getBinaryBoolExprAccess().getBinaryopBinaryBoolOpEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolExpr__OprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryBoolExprAccess().getOprBoolExprParserRuleCall_2_0()); }
	ruleBoolExpr{ after(grammarAccess.getBinaryBoolExprAccess().getOprBoolExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSortAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__PathAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getPathPathParserRuleCall_1_0()); }
	rulePath{ after(grammarAccess.getImportAccess().getPathPathParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVarAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__MinAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getMinINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getVarAccess().getMinINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__MaxAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getMaxINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getVarAccess().getMaxINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fluent__TermAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFluentAccess().getTermTermParserRuleCall_1_0()); }
	ruleTerm{ after(grammarAccess.getFluentAccess().getTermTermParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__TermAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getTermTermParserRuleCall_1_0()); }
	ruleTerm{ after(grammarAccess.getEventAccess().getTermTermParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTermAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__ArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getArgsIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTermAccess().getArgsIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__ArgsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getArgsIDTerminalRuleCall_1_2_1_0()); }
	RULE_ID{ after(grammarAccess.getTermAccess().getArgsIDTerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HoldsAt__FluentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoldsAtAccess().getFluentTermParserRuleCall_2_0()); }
	ruleTerm{ after(grammarAccess.getHoldsAtAccess().getFluentTermParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HoldsAt__TimeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoldsAtAccess().getTimeIntExprParserRuleCall_4_0()); }
	ruleIntExpr{ after(grammarAccess.getHoldsAtAccess().getTimeIntExprParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Happens__EventAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHappensAccess().getEventTermParserRuleCall_2_0()); }
	ruleTerm{ after(grammarAccess.getHappensAccess().getEventTermParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Happens__TimeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHappensAccess().getTimeIntExprParserRuleCall_4_0()); }
	ruleIntExpr{ after(grammarAccess.getHappensAccess().getTimeIntExprParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initiates__EventAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiatesAccess().getEventTermParserRuleCall_2_0()); }
	ruleTerm{ after(grammarAccess.getInitiatesAccess().getEventTermParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initiates__FluentAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiatesAccess().getFluentTermParserRuleCall_4_0()); }
	ruleTerm{ after(grammarAccess.getInitiatesAccess().getFluentTermParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initiates__TimeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiatesAccess().getTimeIntExprParserRuleCall_6_0()); }
	ruleIntExpr{ after(grammarAccess.getInitiatesAccess().getTimeIntExprParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Terminates__EventAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatesAccess().getEventTermParserRuleCall_2_0()); }
	ruleTerm{ after(grammarAccess.getTerminatesAccess().getEventTermParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Terminates__FluentAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatesAccess().getFluentTermParserRuleCall_4_0()); }
	ruleTerm{ after(grammarAccess.getTerminatesAccess().getFluentTermParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Terminates__TimeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminatesAccess().getTimeIntExprParserRuleCall_6_0()); }
	ruleIntExpr{ after(grammarAccess.getTerminatesAccess().getTimeIntExprParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Path__FileAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getFileFileParserRuleCall_0_0()); }
	ruleFile{ after(grammarAccess.getPathAccess().getFileFileParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Path__FileAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getFileFileParserRuleCall_1_1_0()); }
	ruleFile{ after(grammarAccess.getPathAccess().getFileFileParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__File__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFileAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__File__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getFileAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Actor__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Is_aAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getIs_aActorCrossReference_2_0_0()); }
(
{ before(grammarAccess.getActorAccess().getIs_aActorIDTerminalRuleCall_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getActorAccess().getIs_aActorIDTerminalRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getActorAccess().getIs_aActorCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Is_part_ofAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getIs_part_ofActorCrossReference_2_1_0()); }
(
{ before(grammarAccess.getActorAccess().getIs_part_ofActorIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getActorAccess().getIs_part_ofActorIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getActorAccess().getIs_part_ofActorCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__IntentionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getIntentionsIntentionParserRuleCall_3_1_0()); }
	ruleIntention{ after(grammarAccess.getActorAccess().getIntentionsIntentionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__IntentionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
	ruleIntention{ after(grammarAccess.getAgentAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRoleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__IntentionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
	ruleIntention{ after(grammarAccess.getRoleAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Position__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPositionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Position__IntentionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
	ruleIntention{ after(grammarAccess.getPositionAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__DecompositionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getDecompositionsDecompositionCrossReference_2_1_0()); }
(
{ before(grammarAccess.getGoalAccess().getDecompositionsDecompositionIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGoalAccess().getDecompositionsDecompositionIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getGoalAccess().getDecompositionsDecompositionCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Softgoal__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSoftgoalAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSoftgoalAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Belief__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getBeliefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getSourceContainerCrossReference_0_0()); }
(
{ before(grammarAccess.getAssociationAccess().getSourceContainerIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getSourceContainerIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssociationAccess().getSourceContainerCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getTargetContainerCrossReference_2_0()); }
(
{ before(grammarAccess.getAssociationAccess().getTargetContainerIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getTargetContainerIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAssociationAccess().getTargetContainerCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__DependencyFromAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependencyAccess().getDependencyFromDependableCrossReference_0_0()); }
(
{ before(grammarAccess.getDependencyAccess().getDependencyFromDependableIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getDependencyAccess().getDependencyFromDependableIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getDependencyAccess().getDependencyFromDependableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__DependencyToAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependencyAccess().getDependencyToDependableCrossReference_2_0()); }
(
{ before(grammarAccess.getDependencyAccess().getDependencyToDependableIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDependencyAccess().getDependencyToDependableIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDependencyAccess().getDependencyToDependableCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndDecomposition__TargetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndDecompositionAccess().getTargetIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getAndDecompositionAccess().getTargetIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAndDecompositionAccess().getTargetIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAndDecompositionAccess().getTargetIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndDecomposition__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndDecompositionAccess().getSourceIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getAndDecompositionAccess().getSourceIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getAndDecompositionAccess().getSourceIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAndDecompositionAccess().getSourceIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrDecomposition__TargetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrDecompositionAccess().getTargetIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getOrDecompositionAccess().getTargetIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getOrDecompositionAccess().getTargetIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getOrDecompositionAccess().getTargetIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrDecomposition__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrDecompositionAccess().getSourceIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getOrDecompositionAccess().getSourceIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getOrDecompositionAccess().getSourceIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getOrDecompositionAccess().getSourceIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getAndContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAndContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAndContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getAndContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getAndContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAndContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getOrContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getOrContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getOrContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getOrContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getOrContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getOrContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HelpContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHelpContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getHelpContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getHelpContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getHelpContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HelpContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHelpContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getHelpContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getHelpContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getHelpContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MakeContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getMakeContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMakeContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMakeContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MakeContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getMakeContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMakeContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getMakeContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HurtContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHurtContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getHurtContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getHurtContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getHurtContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HurtContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHurtContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getHurtContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getHurtContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getHurtContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BreakContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getBreakContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getBreakContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getBreakContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BreakContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getBreakContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getBreakContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getBreakContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_SL_COMMENT : ';' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : ('#' ~('#')+ '#'|'^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*);

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


