/*
* generated by Xtext
*/
grammar InternalEventCalculus;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package uk.ac.open.event.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.open.event.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import uk.ac.open.event.services.EventCalculusGrammarAccess;

}

@parser::members {
 
 	private EventCalculusGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EventCalculusGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
(rule__Declaration__Alternatives)
{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDefSort
entryRuleDefSort 
:
{ before(grammarAccess.getDefSortRule()); }
	 ruleDefSort
{ after(grammarAccess.getDefSortRule()); } 
	 EOF 
;

// Rule DefSort
ruleDefSort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefSortAccess().getGroup()); }
(rule__DefSort__Group__0)
{ after(grammarAccess.getDefSortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefRange
entryRuleDefRange 
:
{ before(grammarAccess.getDefRangeRule()); }
	 ruleDefRange
{ after(grammarAccess.getDefRangeRule()); } 
	 EOF 
;

// Rule DefRange
ruleDefRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefRangeAccess().getGroup()); }
(rule__DefRange__Group__0)
{ after(grammarAccess.getDefRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefOption
entryRuleDefOption 
:
{ before(grammarAccess.getDefOptionRule()); }
	 ruleDefOption
{ after(grammarAccess.getDefOptionRule()); } 
	 EOF 
;

// Rule DefOption
ruleDefOption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefOptionAccess().getGroup()); }
(rule__DefOption__Group__0)
{ after(grammarAccess.getDefOptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefCompletion
entryRuleDefCompletion 
:
{ before(grammarAccess.getDefCompletionRule()); }
	 ruleDefCompletion
{ after(grammarAccess.getDefCompletionRule()); } 
	 EOF 
;

// Rule DefCompletion
ruleDefCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefCompletionAccess().getGroup()); }
(rule__DefCompletion__Group__0)
{ after(grammarAccess.getDefCompletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefNonInertia
entryRuleDefNonInertia 
:
{ before(grammarAccess.getDefNonInertiaRule()); }
	 ruleDefNonInertia
{ after(grammarAccess.getDefNonInertiaRule()); } 
	 EOF 
;

// Rule DefNonInertia
ruleDefNonInertia
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefNonInertiaAccess().getGroup()); }
(rule__DefNonInertia__Group__0)
{ after(grammarAccess.getDefNonInertiaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefXor
entryRuleDefXor 
:
{ before(grammarAccess.getDefXorRule()); }
	 ruleDefXor
{ after(grammarAccess.getDefXorRule()); } 
	 EOF 
;

// Rule DefXor
ruleDefXor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefXorAccess().getGroup()); }
(rule__DefXor__Group__0)
{ after(grammarAccess.getDefXorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefMutex
entryRuleDefMutex 
:
{ before(grammarAccess.getDefMutexRule()); }
	 ruleDefMutex
{ after(grammarAccess.getDefMutexRule()); } 
	 EOF 
;

// Rule DefMutex
ruleDefMutex
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefMutexAccess().getGroup()); }
(rule__DefMutex__Group__0)
{ after(grammarAccess.getDefMutexAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabeledExpression
entryRuleLabeledExpression 
:
{ before(grammarAccess.getLabeledExpressionRule()); }
	 ruleLabeledExpression
{ after(grammarAccess.getLabeledExpressionRule()); } 
	 EOF 
;

// Rule LabeledExpression
ruleLabeledExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabeledExpressionAccess().getGroup()); }
(rule__LabeledExpression__Group__0)
{ after(grammarAccess.getLabeledExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSortDefinition
entryRuleSortDefinition 
:
{ before(grammarAccess.getSortDefinitionRule()); }
	 ruleSortDefinition
{ after(grammarAccess.getSortDefinitionRule()); } 
	 EOF 
;

// Rule SortDefinition
ruleSortDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSortDefinitionAccess().getGroup()); }
(rule__SortDefinition__Group__0)
{ after(grammarAccess.getSortDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getGroup()); }
(rule__Definition__Group__0)
{ after(grammarAccess.getDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifier
entryRuleQualifier 
:
{ before(grammarAccess.getQualifierRule()); }
	 ruleQualifier
{ after(grammarAccess.getQualifierRule()); } 
	 EOF 
;

// Rule Qualifier
ruleQualifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifierAccess().getAlternatives()); }
(rule__Qualifier__Alternatives)
{ after(grammarAccess.getQualifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameters
entryRuleParameters 
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParametersAccess().getGroup()); }
(rule__Parameters__Group__0)
{ after(grammarAccess.getParametersAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExists
entryRuleExists 
:
{ before(grammarAccess.getExistsRule()); }
	 ruleExists
{ after(grammarAccess.getExistsRule()); } 
	 EOF 
;

// Rule Exists
ruleExists
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExistsAccess().getGroup()); }
(rule__Exists__Group__0)
{ after(grammarAccess.getExistsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForall
entryRuleForall 
:
{ before(grammarAccess.getForallRule()); }
	 ruleForall
{ after(grammarAccess.getForallRule()); } 
	 EOF 
;

// Rule Forall
ruleForall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForallAccess().getGroup()); }
(rule__Forall__Group__0)
{ after(grammarAccess.getForallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentOp
entryRuleAssignmentOp 
:
{ before(grammarAccess.getAssignmentOpRule()); }
	 ruleAssignmentOp
{ after(grammarAccess.getAssignmentOpRule()); } 
	 EOF 
;

// Rule AssignmentOp
ruleAssignmentOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentOpAccess().getGroup()); }
(rule__AssignmentOp__Group__0)
{ after(grammarAccess.getAssignmentOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExp
entryRuleOrExp 
:
{ before(grammarAccess.getOrExpRule()); }
	 ruleOrExp
{ after(grammarAccess.getOrExpRule()); } 
	 EOF 
;

// Rule OrExp
ruleOrExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpAccess().getGroup()); }
(rule__OrExp__Group__0)
{ after(grammarAccess.getOrExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExp
entryRuleAndExp 
:
{ before(grammarAccess.getAndExpRule()); }
	 ruleAndExp
{ after(grammarAccess.getAndExpRule()); } 
	 EOF 
;

// Rule AndExp
ruleAndExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpAccess().getGroup()); }
(rule__AndExp__Group__0)
{ after(grammarAccess.getAndExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelational
entryRuleRelational 
:
{ before(grammarAccess.getRelationalRule()); }
	 ruleRelational
{ after(grammarAccess.getRelationalRule()); } 
	 EOF 
;

// Rule Relational
ruleRelational
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalAccess().getGroup()); }
(rule__Relational__Group__0)
{ after(grammarAccess.getRelationalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddition
entryRuleAddition 
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionAccess().getGroup()); }
(rule__Addition__Group__0)
{ after(grammarAccess.getAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplication
entryRuleMultiplication 
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
(rule__Multiplication__Group__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePower
entryRulePower 
:
{ before(grammarAccess.getPowerRule()); }
	 rulePower
{ after(grammarAccess.getPowerRule()); } 
	 EOF 
;

// Rule Power
rulePower
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPowerAccess().getGroup()); }
(rule__Power__Group__0)
{ after(grammarAccess.getPowerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr 
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExprAccess().getGroup()); }
(rule__UnaryExpr__Group__0)
{ after(grammarAccess.getUnaryExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrePrimaryExpr
entryRulePrePrimaryExpr 
:
{ before(grammarAccess.getPrePrimaryExprRule()); }
	 rulePrePrimaryExpr
{ after(grammarAccess.getPrePrimaryExprRule()); } 
	 EOF 
;

// Rule PrePrimaryExpr
rulePrePrimaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getAlternatives()); }
(rule__PrePrimaryExpr__Alternatives)
{ after(grammarAccess.getPrePrimaryExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractRef
entryRuleAbstractRef 
:
{ before(grammarAccess.getAbstractRefRule()); }
	 ruleAbstractRef
{ after(grammarAccess.getAbstractRefRule()); } 
	 EOF 
;

// Rule AbstractRef
ruleAbstractRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractRefAccess().getGroup()); }
(rule__AbstractRef__Group__0)
{ after(grammarAccess.getAbstractRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule ANNOTATION_TYPE
ruleANNOTATION_TYPE
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANNOTATION_TYPEAccess().getAlternatives()); }
(rule__ANNOTATION_TYPE__Alternatives)
{ after(grammarAccess.getANNOTATION_TYPEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LabelType
ruleLabelType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelTypeAccess().getAlternatives()); }
(rule__LabelType__Alternatives)
{ after(grammarAccess.getLabelTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryOp
ruleUnaryOp
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOpAccess().getNOTEnumLiteralDeclaration()); }
(	'!' 
)
{ after(grammarAccess.getUnaryOpAccess().getNOTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclarationsAssignment_1_0()); }
(rule__Model__DeclarationsAssignment_1_0)
{ after(grammarAccess.getModelAccess().getDeclarationsAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getStatementsAssignment_1_1()); }
(rule__Model__StatementsAssignment_1_1)
{ after(grammarAccess.getModelAccess().getStatementsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getValueAssignment_3_0()); }
(rule__Annotation__ValueAssignment_3_0)
{ after(grammarAccess.getAnnotationAccess().getValueAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getValueAssignment_3_1()); }
(rule__Annotation__ValueAssignment_3_1)
{ after(grammarAccess.getAnnotationAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDefSortParserRuleCall_0()); }
	ruleDefSort
{ after(grammarAccess.getDeclarationAccess().getDefSortParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getDefRangeParserRuleCall_1()); }
	ruleDefRange
{ after(grammarAccess.getDeclarationAccess().getDefRangeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getDefOptionParserRuleCall_2()); }
	ruleDefOption
{ after(grammarAccess.getDeclarationAccess().getDefOptionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getDefCompletionParserRuleCall_3()); }
	ruleDefCompletion
{ after(grammarAccess.getDeclarationAccess().getDefCompletionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getDefNonInertiaParserRuleCall_4()); }
	ruleDefNonInertia
{ after(grammarAccess.getDeclarationAccess().getDefNonInertiaParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getDefXorParserRuleCall_5()); }
	ruleDefXor
{ after(grammarAccess.getDeclarationAccess().getDefXorParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getDefMutexParserRuleCall_6()); }
	ruleDefMutex
{ after(grammarAccess.getDeclarationAccess().getDefMutexParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefOption__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getGroup_1_0()); }
(rule__DefOption__Group_1_0__0)
{ after(grammarAccess.getDefOptionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getDefOptionAccess().getGroup_1_1()); }
(rule__DefOption__Group_1_1__0)
{ after(grammarAccess.getDefOptionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSortDefinitionParserRuleCall_0()); }
	ruleSortDefinition
{ after(grammarAccess.getStatementAccess().getSortDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getLabeledExpressionParserRuleCall_1()); }
	ruleLabeledExpression
{ after(grammarAccess.getStatementAccess().getLabeledExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_0()); }
(rule__Expression__ExprAssignment_0)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifierAccess().getExistsParserRuleCall_0()); }
	ruleExists
{ after(grammarAccess.getQualifierAccess().getExistsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getQualifierAccess().getForallParserRuleCall_1()); }
	ruleForall
{ after(grammarAccess.getQualifierAccess().getForallParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getGroup_1_0_0()); }
(rule__AssignmentOp__Group_1_0_0__0)
{ after(grammarAccess.getAssignmentOpAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getAssignmentOpAccess().getGroup_1_0_1()); }
(rule__AssignmentOp__Group_1_0_1__0)
{ after(grammarAccess.getAssignmentOpAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_0()); }
(rule__Relational__Group_1_0_0__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_1()); }
(rule__Relational__Group_1_0_1__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_2()); }
(rule__Relational__Group_1_0_2__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_2()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_3()); }
(rule__Relational__Group_1_0_3__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_3()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_4()); }
(rule__Relational__Group_1_0_4__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_4()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_5()); }
(rule__Relational__Group_1_0_5__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_5()); }
)

    |(
{ before(grammarAccess.getRelationalAccess().getGroup_1_0_6()); }
(rule__Relational__Group_1_0_6__0)
{ after(grammarAccess.getRelationalAccess().getGroup_1_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
(rule__Addition__Group_1_0_0__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
(rule__Addition__Group_1_0_1__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
(rule__Multiplication__Group_1_0_0__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
(rule__Multiplication__Group_1_0_1__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrePrimaryExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getTerminalExpressionParserRuleCall_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getPrePrimaryExprAccess().getTerminalExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrePrimaryExprAccess().getAbstractRefParserRuleCall_1()); }
	ruleAbstractRef
{ after(grammarAccess.getPrePrimaryExprAccess().getAbstractRefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrePrimaryExprAccess().getGroup_2()); }
(rule__PrePrimaryExpr__Group_2__0)
{ after(grammarAccess.getPrePrimaryExprAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrePrimaryExprAccess().getGroup_3()); }
(rule__PrePrimaryExpr__Group_3__0)
{ after(grammarAccess.getPrePrimaryExprAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
(rule__TerminalExpression__Group_0__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
(rule__TerminalExpression__Group_1__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
(rule__TerminalExpression__Group_2__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ANNOTATION_TYPE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANNOTATION_TYPEAccess().getGEnumLiteralDeclaration_0()); }
(	'generated' 
)
{ after(grammarAccess.getANNOTATION_TYPEAccess().getGEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getANNOTATION_TYPEAccess().getAEnumLiteralDeclaration_1()); }
(	'author' 
)
{ after(grammarAccess.getANNOTATION_TYPEAccess().getAEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabelType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelTypeAccess().getTEnumLiteralDeclaration_0()); }
(	'Theta' 
)
{ after(grammarAccess.getLabelTypeAccess().getTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getLabelTypeAccess().getDEnumLiteralDeclaration_1()); }
(	'Delta' 
)
{ after(grammarAccess.getLabelTypeAccess().getDEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
(rule__Model__ImportsAssignment_0)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAlternatives_1()); }
(rule__Model__Alternatives_1)*
{ after(grammarAccess.getModelAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getLoadKeyword_0()); }

	'load' 

{ after(grammarAccess.getImportAccess().getLoadKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getSemicolonKeyword_0()); }

	';' 

{ after(grammarAccess.getAnnotationAccess().getSemicolonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getAnnotationAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__2__Impl
	rule__Annotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getTypeAssignment_2()); }
(rule__Annotation__TypeAssignment_2)
{ after(grammarAccess.getAnnotationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getAlternatives_3()); }
(rule__Annotation__Alternatives_3)?
{ after(grammarAccess.getAnnotationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DefSort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefSort__Group__0__Impl
	rule__DefSort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefSortAccess().getAnnotationsAssignment_0()); }
(rule__DefSort__AnnotationsAssignment_0)*
{ after(grammarAccess.getDefSortAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefSort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefSort__Group__1__Impl
	rule__DefSort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefSortAccess().getReifiedAssignment_1()); }
(rule__DefSort__ReifiedAssignment_1)?
{ after(grammarAccess.getDefSortAccess().getReifiedAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefSort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefSort__Group__2__Impl
	rule__DefSort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSort__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefSortAccess().getSortKeyword_2()); }

	'sort' 

{ after(grammarAccess.getDefSortAccess().getSortKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefSort__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefSort__Group__3__Impl
	rule__DefSort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSort__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefSortAccess().getNameAssignment_3()); }
(rule__DefSort__NameAssignment_3)
{ after(grammarAccess.getDefSortAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefSort__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefSort__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSort__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefSortAccess().getGroup_4()); }
(rule__DefSort__Group_4__0)?
{ after(grammarAccess.getDefSortAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DefSort__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefSort__Group_4__0__Impl
	rule__DefSort__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSort__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefSortAccess().getColonKeyword_4_0()); }

	':' 

{ after(grammarAccess.getDefSortAccess().getColonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefSort__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefSort__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefSort__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefSortAccess().getTypeAssignment_4_1()); }
(rule__DefSort__TypeAssignment_4_1)
{ after(grammarAccess.getDefSortAccess().getTypeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefRange__Group__0__Impl
	rule__DefRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefRangeAccess().getAnnotationsAssignment_0()); }
(rule__DefRange__AnnotationsAssignment_0)*
{ after(grammarAccess.getDefRangeAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefRange__Group__1__Impl
	rule__DefRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefRangeAccess().getRangeKeyword_1()); }

	'range' 

{ after(grammarAccess.getDefRangeAccess().getRangeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefRange__Group__2__Impl
	rule__DefRange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefRangeAccess().getNameAssignment_2()); }
(rule__DefRange__NameAssignment_2)
{ after(grammarAccess.getDefRangeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefRange__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefRange__Group__3__Impl
	rule__DefRange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefRange__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefRangeAccess().getMinAssignment_3()); }
(rule__DefRange__MinAssignment_3)
{ after(grammarAccess.getDefRangeAccess().getMinAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefRange__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefRange__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefRange__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefRangeAccess().getMaxAssignment_4()); }
(rule__DefRange__MaxAssignment_4)
{ after(grammarAccess.getDefRangeAccess().getMaxAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DefOption__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefOption__Group__0__Impl
	rule__DefOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getAnnotationsAssignment_0()); }
(rule__DefOption__AnnotationsAssignment_0)*
{ after(grammarAccess.getDefOptionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefOption__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefOption__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getAlternatives_1()); }
(rule__DefOption__Alternatives_1)
{ after(grammarAccess.getDefOptionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefOption__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefOption__Group_1_0__0__Impl
	rule__DefOption__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getOptionKeyword_1_0_0()); }

	'option' 

{ after(grammarAccess.getDefOptionAccess().getOptionKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefOption__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefOption__Group_1_0__1__Impl
	rule__DefOption__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getNameAssignment_1_0_1()); }
(rule__DefOption__NameAssignment_1_0_1)
{ after(grammarAccess.getDefOptionAccess().getNameAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefOption__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefOption__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getValueAssignment_1_0_2()); }
(rule__DefOption__ValueAssignment_1_0_2)
{ after(grammarAccess.getDefOptionAccess().getValueAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DefOption__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefOption__Group_1_1__0__Impl
	rule__DefOption__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getOptionKeyword_1_1_0()); }

	'option' 

{ after(grammarAccess.getDefOptionAccess().getOptionKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefOption__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefOption__Group_1_1__1__Impl
	rule__DefOption__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getNameAssignment_1_1_1()); }
(rule__DefOption__NameAssignment_1_1_1)
{ after(grammarAccess.getDefOptionAccess().getNameAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefOption__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefOption__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getValue2Assignment_1_1_2()); }
(rule__DefOption__Value2Assignment_1_1_2)
{ after(grammarAccess.getDefOptionAccess().getValue2Assignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DefCompletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefCompletion__Group__0__Impl
	rule__DefCompletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCompletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCompletionAccess().getAnnotationsAssignment_0()); }
(rule__DefCompletion__AnnotationsAssignment_0)*
{ after(grammarAccess.getDefCompletionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefCompletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefCompletion__Group__1__Impl
	rule__DefCompletion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCompletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCompletionAccess().getCompletionKeyword_1()); }

	'completion' 

{ after(grammarAccess.getDefCompletionAccess().getCompletionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefCompletion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefCompletion__Group__2__Impl
	rule__DefCompletion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCompletion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCompletionAccess().getTypeAssignment_2()); }
(rule__DefCompletion__TypeAssignment_2)?
{ after(grammarAccess.getDefCompletionAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefCompletion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefCompletion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefCompletion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCompletionAccess().getLabelAssignment_3()); }
(rule__DefCompletion__LabelAssignment_3)
{ after(grammarAccess.getDefCompletionAccess().getLabelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DefNonInertia__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefNonInertia__Group__0__Impl
	rule__DefNonInertia__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefNonInertia__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefNonInertiaAccess().getAnnotationsAssignment_0()); }
(rule__DefNonInertia__AnnotationsAssignment_0)*
{ after(grammarAccess.getDefNonInertiaAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefNonInertia__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefNonInertia__Group__1__Impl
	rule__DefNonInertia__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefNonInertia__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefNonInertiaAccess().getNoninertialKeyword_1()); }

	'noninertial' 

{ after(grammarAccess.getDefNonInertiaAccess().getNoninertialKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefNonInertia__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefNonInertia__Group__2__Impl
	rule__DefNonInertia__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefNonInertia__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefNonInertiaAccess().getNamesAssignment_2()); }
(rule__DefNonInertia__NamesAssignment_2)
{ after(grammarAccess.getDefNonInertiaAccess().getNamesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefNonInertia__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefNonInertia__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefNonInertia__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefNonInertiaAccess().getGroup_3()); }
(rule__DefNonInertia__Group_3__0)*
{ after(grammarAccess.getDefNonInertiaAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DefNonInertia__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefNonInertia__Group_3__0__Impl
	rule__DefNonInertia__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefNonInertia__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefNonInertiaAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getDefNonInertiaAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefNonInertia__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefNonInertia__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefNonInertia__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefNonInertiaAccess().getNamesAssignment_3_1()); }
(rule__DefNonInertia__NamesAssignment_3_1)
{ after(grammarAccess.getDefNonInertiaAccess().getNamesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefXor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefXor__Group__0__Impl
	rule__DefXor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefXor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefXorAccess().getAnnotationsAssignment_0()); }
(rule__DefXor__AnnotationsAssignment_0)*
{ after(grammarAccess.getDefXorAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefXor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefXor__Group__1__Impl
	rule__DefXor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefXor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefXorAccess().getXorKeyword_1()); }

	'xor' 

{ after(grammarAccess.getDefXorAccess().getXorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefXor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefXor__Group__2__Impl
	rule__DefXor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefXor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefXorAccess().getNamesAssignment_2()); }
(rule__DefXor__NamesAssignment_2)
{ after(grammarAccess.getDefXorAccess().getNamesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefXor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefXor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefXor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefXorAccess().getGroup_3()); }
(rule__DefXor__Group_3__0)*
{ after(grammarAccess.getDefXorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DefXor__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefXor__Group_3__0__Impl
	rule__DefXor__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefXor__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefXorAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getDefXorAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefXor__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefXor__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefXor__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefXorAccess().getNamesAssignment_3_1()); }
(rule__DefXor__NamesAssignment_3_1)
{ after(grammarAccess.getDefXorAccess().getNamesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefMutex__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefMutex__Group__0__Impl
	rule__DefMutex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMutex__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefMutexAccess().getAnnotationsAssignment_0()); }
(rule__DefMutex__AnnotationsAssignment_0)*
{ after(grammarAccess.getDefMutexAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefMutex__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefMutex__Group__1__Impl
	rule__DefMutex__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMutex__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefMutexAccess().getMutexKeyword_1()); }

	'mutex' 

{ after(grammarAccess.getDefMutexAccess().getMutexKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefMutex__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefMutex__Group__2__Impl
	rule__DefMutex__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMutex__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefMutexAccess().getNamesAssignment_2()); }
(rule__DefMutex__NamesAssignment_2)
{ after(grammarAccess.getDefMutexAccess().getNamesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefMutex__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefMutex__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMutex__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefMutexAccess().getGroup_3()); }
(rule__DefMutex__Group_3__0)*
{ after(grammarAccess.getDefMutexAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DefMutex__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefMutex__Group_3__0__Impl
	rule__DefMutex__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMutex__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefMutexAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getDefMutexAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefMutex__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefMutex__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMutex__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefMutexAccess().getNamesAssignment_3_1()); }
(rule__DefMutex__NamesAssignment_3_1)
{ after(grammarAccess.getDefMutexAccess().getNamesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LabeledExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledExpression__Group__0__Impl
	rule__LabeledExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledExpressionAccess().getAnnotationsAssignment_0()); }
(rule__LabeledExpression__AnnotationsAssignment_0)*
{ after(grammarAccess.getLabeledExpressionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledExpression__Group__1__Impl
	rule__LabeledExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledExpressionAccess().getGroup_1()); }
(rule__LabeledExpression__Group_1__0)?
{ after(grammarAccess.getLabeledExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledExpression__Group__2__Impl
	rule__LabeledExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledExpressionAccess().getExprAssignment_2()); }
(rule__LabeledExpression__ExprAssignment_2)
{ after(grammarAccess.getLabeledExpressionAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledExpressionAccess().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getLabeledExpressionAccess().getFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LabeledExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledExpression__Group_1__0__Impl
	rule__LabeledExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledExpressionAccess().getNameAssignment_1_0()); }
(rule__LabeledExpression__NameAssignment_1_0)
{ after(grammarAccess.getLabeledExpressionAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabeledExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledExpressionAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getLabeledExpressionAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SortDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SortDefinition__Group__0__Impl
	rule__SortDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortDefinitionAccess().getAnnotationsAssignment_0()); }
(rule__SortDefinition__AnnotationsAssignment_0)*
{ after(grammarAccess.getSortDefinitionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SortDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SortDefinition__Group__1__Impl
	rule__SortDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SortDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortDefinitionAccess().getSortAssignment_1()); }
(rule__SortDefinition__SortAssignment_1)
{ after(grammarAccess.getSortDefinitionAccess().getSortAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SortDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SortDefinition__Group__2__Impl
	rule__SortDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SortDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortDefinitionAccess().getDefinitionsAssignment_2()); }
(rule__SortDefinition__DefinitionsAssignment_2)
{ after(grammarAccess.getSortDefinitionAccess().getDefinitionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SortDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SortDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortDefinitionAccess().getGroup_3()); }
(rule__SortDefinition__Group_3__0)*
{ after(grammarAccess.getSortDefinitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SortDefinition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SortDefinition__Group_3__0__Impl
	rule__SortDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortDefinition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortDefinitionAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getSortDefinitionAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SortDefinition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SortDefinition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortDefinition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortDefinitionAccess().getDefinitionsAssignment_3_1()); }
(rule__SortDefinition__DefinitionsAssignment_3_1)
{ after(grammarAccess.getSortDefinitionAccess().getDefinitionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_0()); }
(rule__Definition__NameAssignment_0)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_1()); }
(rule__Definition__Group_1__0)?
{ after(grammarAccess.getDefinitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_2()); }
(rule__Definition__Group_2__0)?
{ after(grammarAccess.getDefinitionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Definition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__0__Impl
	rule__Definition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__1__Impl
	rule__Definition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getArgsAssignment_1_1()); }
(rule__Definition__ArgsAssignment_1_1)?
{ after(grammarAccess.getDefinitionAccess().getArgsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__2__Impl
	rule__Definition__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_1_2()); }
(rule__Definition__Group_1_2__0)*
{ after(grammarAccess.getDefinitionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Definition__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1_2__0__Impl
	rule__Definition__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getDefinitionAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getArgsAssignment_1_2_1()); }
(rule__Definition__ArgsAssignment_1_2_1)
{ after(grammarAccess.getDefinitionAccess().getArgsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_2__0__Impl
	rule__Definition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getDefinitionAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getReturnAssignment_2_1()); }
(rule__Definition__ReturnAssignment_2_1)
{ after(grammarAccess.getDefinitionAccess().getReturnAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getQualifiersAssignment_1_0()); }
(rule__Expression__QualifiersAssignment_1_0)
{ after(grammarAccess.getExpressionAccess().getQualifiersAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_1_1()); }
(rule__Expression__ExprAssignment_1_1)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameters__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getNamesAssignment_0()); }
(rule__Parameters__NamesAssignment_0)
{ after(grammarAccess.getParametersAccess().getNamesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getGroup_1()); }
(rule__Parameters__Group_1__0)*
{ after(grammarAccess.getParametersAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameters__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_1__0__Impl
	rule__Parameters__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getParametersAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getNamesAssignment_1_1()); }
(rule__Parameters__NamesAssignment_1_1)
{ after(grammarAccess.getParametersAccess().getNamesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exists__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__0__Impl
	rule__Exists__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getOpAssignment_0()); }
(rule__Exists__OpAssignment_0)?
{ after(grammarAccess.getExistsAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exists__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__1__Impl
	rule__Exists__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getExistsAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exists__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__2__Impl
	rule__Exists__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getParametersAssignment_2()); }
(rule__Exists__ParametersAssignment_2)
{ after(grammarAccess.getExistsAccess().getParametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exists__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exists__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getExistsAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Forall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Forall__Group__0__Impl
	rule__Forall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Forall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForallAccess().getOpAssignment_0()); }
(rule__Forall__OpAssignment_0)?
{ after(grammarAccess.getForallAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Forall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Forall__Group__1__Impl
	rule__Forall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Forall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForallAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getForallAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Forall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Forall__Group__2__Impl
	rule__Forall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Forall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForallAccess().getParametersAssignment_2()); }
(rule__Forall__ParametersAssignment_2)
{ after(grammarAccess.getForallAccess().getParametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Forall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Forall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Forall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForallAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getForallAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssignmentOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group__0__Impl
	rule__AssignmentOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getOrExpParserRuleCall_0()); }
	ruleOrExp
{ after(grammarAccess.getAssignmentOpAccess().getOrExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getGroup_1()); }
(rule__AssignmentOp__Group_1__0)?
{ after(grammarAccess.getAssignmentOpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentOp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1__0__Impl
	rule__AssignmentOp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getAlternatives_1_0()); }
(rule__AssignmentOp__Alternatives_1_0)
{ after(grammarAccess.getAssignmentOpAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1__1__Impl
	rule__AssignmentOp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getQAssignment_1_1()); }
(rule__AssignmentOp__QAssignment_1_1)?
{ after(grammarAccess.getAssignmentOpAccess().getQAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getRightAssignment_1_2()); }
(rule__AssignmentOp__RightAssignment_1_2)
{ after(grammarAccess.getAssignmentOpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssignmentOp__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_0__0__Impl
	rule__AssignmentOp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getAssignPlusLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAssignmentOpAccess().getAssignPlusLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getHyphenMinusGreaterThanSignKeyword_1_0_0_1()); }

	'->' 

{ after(grammarAccess.getAssignmentOpAccess().getHyphenMinusGreaterThanSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentOp__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_1__0__Impl
	rule__AssignmentOp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getAssignMinLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getAssignmentOpAccess().getAssignMinLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOp__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentOp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_1_0_1_1()); }

	'<->' 

{ after(grammarAccess.getAssignmentOpAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group__0__Impl
	rule__OrExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getAndExpParserRuleCall_0()); }
	ruleAndExp
{ after(grammarAccess.getOrExpAccess().getAndExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getGroup_1()); }
(rule__OrExp__Group_1__0)*
{ after(grammarAccess.getOrExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__0__Impl
	rule__OrExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getOrLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpAccess().getOrLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__1__Impl
	rule__OrExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getVerticalLineKeyword_1_1()); }

	'|' 

{ after(grammarAccess.getOrExpAccess().getVerticalLineKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__2__Impl
	rule__OrExp__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getQAssignment_1_2()); }
(rule__OrExp__QAssignment_1_2)?
{ after(grammarAccess.getOrExpAccess().getQAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getRightAssignment_1_3()); }
(rule__OrExp__RightAssignment_1_3)
{ after(grammarAccess.getOrExpAccess().getRightAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AndExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group__0__Impl
	rule__AndExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRelationalParserRuleCall_0()); }
	ruleRelational
{ after(grammarAccess.getAndExpAccess().getRelationalParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getGroup_1()); }
(rule__AndExp__Group_1__0)*
{ after(grammarAccess.getAndExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__0__Impl
	rule__AndExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getAndLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpAccess().getAndLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__1__Impl
	rule__AndExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getAmpersandKeyword_1_1()); }

	'&' 

{ after(grammarAccess.getAndExpAccess().getAmpersandKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__2__Impl
	rule__AndExp__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getQAssignment_1_2()); }
(rule__AndExp__QAssignment_1_2)?
{ after(grammarAccess.getAndExpAccess().getQAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRightAssignment_1_3()); }
(rule__AndExp__RightAssignment_1_3)
{ after(grammarAccess.getAndExpAccess().getRightAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Relational__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group__0__Impl
	rule__Relational__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
{ after(grammarAccess.getRelationalAccess().getAdditionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGroup_1()); }
(rule__Relational__Group_1__0)?
{ after(grammarAccess.getRelationalAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1__0__Impl
	rule__Relational__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getAlternatives_1_0()); }
(rule__Relational__Alternatives_1_0)
{ after(grammarAccess.getRelationalAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRightAssignment_1_1()); }
(rule__Relational__RightAssignment_1_1)
{ after(grammarAccess.getRelationalAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_0__0__Impl
	rule__Relational__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelNotEqLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelNotEqLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getExclamationMarkEqualsSignKeyword_1_0_0_1()); }

	'!=' 

{ after(grammarAccess.getRelationalAccess().getExclamationMarkEqualsSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_1__0__Impl
	rule__Relational__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelEqEqLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelEqEqLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getEqualsSignEqualsSignKeyword_1_0_1_1()); }

	'==' 

{ after(grammarAccess.getRelationalAccess().getEqualsSignEqualsSignKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_2__0__Impl
	rule__Relational__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelLtEqLeftAction_1_0_2_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelLtEqLeftAction_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGreaterThanSignEqualsSignKeyword_1_0_2_1()); }

	'>=' 

{ after(grammarAccess.getRelationalAccess().getGreaterThanSignEqualsSignKeyword_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_3__0__Impl
	rule__Relational__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelGtEqLeftAction_1_0_3_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelGtEqLeftAction_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getLessThanSignEqualsSignKeyword_1_0_3_1()); }

	'<=' 

{ after(grammarAccess.getRelationalAccess().getLessThanSignEqualsSignKeyword_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_4__0__Impl
	rule__Relational__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelEqLeftAction_1_0_4_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelEqLeftAction_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getEqualsSignKeyword_1_0_4_1()); }

	'=' 

{ after(grammarAccess.getRelationalAccess().getEqualsSignKeyword_1_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_5__0__Impl
	rule__Relational__Group_1_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelLtLeftAction_1_0_5_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelLtLeftAction_1_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getLessThanSignKeyword_1_0_5_1()); }

	'<' 

{ after(grammarAccess.getRelationalAccess().getLessThanSignKeyword_1_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational__Group_1_0_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_6__0__Impl
	rule__Relational__Group_1_0_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRelGtLeftAction_1_0_6_0()); }
(

)
{ after(grammarAccess.getRelationalAccess().getRelGtLeftAction_1_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational__Group_1_0_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational__Group_1_0_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__Group_1_0_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getGreaterThanSignKeyword_1_0_6_1()); }

	'>' 

{ after(grammarAccess.getRelationalAccess().getGreaterThanSignKeyword_1_0_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
(rule__Addition__Group_1__0)*
{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
(rule__Addition__Alternatives_1_0)
{ after(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
(rule__Addition__RightAssignment_1_1)
{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__0__Impl
	rule__Addition__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }

	'+' 

{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__0__Impl
	rule__Addition__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }

	'-' 

{ after(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0()); }
	rulePower
{ after(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
(rule__Multiplication__Group_1__0)*
{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
(rule__Multiplication__Alternatives_1_0)
{ after(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
(rule__Multiplication__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_0__0__Impl
	rule__Multiplication__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }

	'*' 

{ after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_1__0__Impl
	rule__Multiplication__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Power__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group__0__Impl
	rule__Power__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getUnaryExprParserRuleCall_0()); }
	ruleUnaryExpr
{ after(grammarAccess.getPowerAccess().getUnaryExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Power__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getGroup_1()); }
(rule__Power__Group_1__0)*
{ after(grammarAccess.getPowerAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Power__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group_1__0__Impl
	rule__Power__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getGroup_1_0()); }
(rule__Power__Group_1_0__0)
{ after(grammarAccess.getPowerAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Power__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getRightAssignment_1_1()); }
(rule__Power__RightAssignment_1_1)
{ after(grammarAccess.getPowerAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Power__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group_1_0__0__Impl
	rule__Power__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getPowLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getPowerAccess().getPowLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Power__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Power__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getCircumflexAccentKeyword_1_0_1()); }

	'^' 

{ after(grammarAccess.getPowerAccess().getCircumflexAccentKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group__0__Impl
	rule__UnaryExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getOpAssignment_0()); }
(rule__UnaryExpr__OpAssignment_0)?
{ after(grammarAccess.getUnaryExprAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getRightAssignment_1()); }
(rule__UnaryExpr__RightAssignment_1)
{ after(grammarAccess.getUnaryExprAccess().getRightAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrePrimaryExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrePrimaryExpr__Group_2__0__Impl
	rule__PrePrimaryExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrePrimaryExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getPrePrimaryExprAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrePrimaryExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrePrimaryExpr__Group_2__1__Impl
	rule__PrePrimaryExpr__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrePrimaryExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getExpressionParserRuleCall_2_1()); }
	ruleExpression
{ after(grammarAccess.getPrePrimaryExprAccess().getExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrePrimaryExpr__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrePrimaryExpr__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrePrimaryExpr__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getPrePrimaryExprAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrePrimaryExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrePrimaryExpr__Group_3__0__Impl
	rule__PrePrimaryExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrePrimaryExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getHyphenMinusKeyword_3_0()); }

	'-' 

{ after(grammarAccess.getPrePrimaryExprAccess().getHyphenMinusKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrePrimaryExpr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrePrimaryExpr__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrePrimaryExpr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getNAssignment_3_1()); }
(rule__PrePrimaryExpr__NAssignment_3_1)
{ after(grammarAccess.getPrePrimaryExprAccess().getNAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbstractRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractRef__Group__0__Impl
	rule__AbstractRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getDefineAssignment_0()); }
(rule__AbstractRef__DefineAssignment_0)
{ after(grammarAccess.getAbstractRefAccess().getDefineAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getGroup_1()); }
(rule__AbstractRef__Group_1__0)?
{ after(grammarAccess.getAbstractRefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbstractRef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractRef__Group_1__0__Impl
	rule__AbstractRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getFunctionRefFuncAction_1_0()); }
(

)
{ after(grammarAccess.getAbstractRefAccess().getFunctionRefFuncAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractRef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractRef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getGroup_1_1()); }
(rule__AbstractRef__Group_1_1__0)
{ after(grammarAccess.getAbstractRefAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbstractRef__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractRef__Group_1_1__0__Impl
	rule__AbstractRef__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getLeftParenthesisKeyword_1_1_0()); }

	'(' 

{ after(grammarAccess.getAbstractRefAccess().getLeftParenthesisKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractRef__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractRef__Group_1_1__1__Impl
	rule__AbstractRef__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getArgsAssignment_1_1_1()); }
(rule__AbstractRef__ArgsAssignment_1_1_1)?
{ after(grammarAccess.getAbstractRefAccess().getArgsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractRef__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractRef__Group_1_1__2__Impl
	rule__AbstractRef__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getGroup_1_1_2()); }
(rule__AbstractRef__Group_1_1_2__0)*
{ after(grammarAccess.getAbstractRefAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractRef__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractRef__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getRightParenthesisKeyword_1_1_3()); }

	')' 

{ after(grammarAccess.getAbstractRefAccess().getRightParenthesisKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AbstractRef__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractRef__Group_1_1_2__0__Impl
	rule__AbstractRef__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getCommaKeyword_1_1_2_0()); }

	',' 

{ after(grammarAccess.getAbstractRefAccess().getCommaKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractRef__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractRef__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getArgsAssignment_1_1_2_1()); }
(rule__AbstractRef__ArgsAssignment_1_1_2_1)
{ after(grammarAccess.getAbstractRefAccess().getArgsAssignment_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__0__Impl
	rule__TerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
(rule__TerminalExpression__ValueAssignment_0_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__0__Impl
	rule__TerminalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getStringLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getStringLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
(rule__TerminalExpression__ValueAssignment_1_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__0__Impl
	rule__TerminalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
(rule__TerminalExpression__ValueAssignment_2_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DeclarationsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_1_0_0()); }
	ruleDeclaration{ after(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StatementsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0()); }
	ruleStatement{ after(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getTypeANNOTATION_TYPEEnumRuleCall_2_0()); }
	ruleANNOTATION_TYPE{ after(grammarAccess.getAnnotationAccess().getTypeANNOTATION_TYPEEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ValueAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getValueSTRINGTerminalRuleCall_3_0_0()); }
	RULE_STRING{ after(grammarAccess.getAnnotationAccess().getValueSTRINGTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getValueNotKeyword_3_1_0()); }
(
{ before(grammarAccess.getAnnotationAccess().getValueNotKeyword_3_1_0()); }

	'not' 

{ after(grammarAccess.getAnnotationAccess().getValueNotKeyword_3_1_0()); }
)

{ after(grammarAccess.getAnnotationAccess().getValueNotKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefSort__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefSortAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDefSortAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefSort__ReifiedAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefSortAccess().getReifiedReifiedKeyword_1_0()); }
(
{ before(grammarAccess.getDefSortAccess().getReifiedReifiedKeyword_1_0()); }

	'reified' 

{ after(grammarAccess.getDefSortAccess().getReifiedReifiedKeyword_1_0()); }
)

{ after(grammarAccess.getDefSortAccess().getReifiedReifiedKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefSort__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefSortAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getDefSortAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefSort__TypeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefSortAccess().getTypeIDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getDefSortAccess().getTypeIDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefRange__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefRangeAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDefRangeAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefRange__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefRangeAccess().getNameDefSortCrossReference_2_0()); }
(
{ before(grammarAccess.getDefRangeAccess().getNameDefSortIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDefRangeAccess().getNameDefSortIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDefRangeAccess().getNameDefSortCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefRange__MinAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefRangeAccess().getMinINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getDefRangeAccess().getMinINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefRange__MaxAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefRangeAccess().getMaxINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getDefRangeAccess().getMaxINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDefOptionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__NameAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getNameIDTerminalRuleCall_1_0_1_0()); }
	RULE_ID{ after(grammarAccess.getDefOptionAccess().getNameIDTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__ValueAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getValueINTTerminalRuleCall_1_0_2_0()); }
	RULE_INT{ after(grammarAccess.getDefOptionAccess().getValueINTTerminalRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__NameAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getNameIDTerminalRuleCall_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getDefOptionAccess().getNameIDTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefOption__Value2Assignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefOptionAccess().getValue2IDTerminalRuleCall_1_1_2_0()); }
	RULE_ID{ after(grammarAccess.getDefOptionAccess().getValue2IDTerminalRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefCompletion__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCompletionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDefCompletionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefCompletion__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCompletionAccess().getTypeLabelTypeEnumRuleCall_2_0()); }
	ruleLabelType{ after(grammarAccess.getDefCompletionAccess().getTypeLabelTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefCompletion__LabelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefCompletionAccess().getLabelDefinitionCrossReference_3_0()); }
(
{ before(grammarAccess.getDefCompletionAccess().getLabelDefinitionIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getDefCompletionAccess().getLabelDefinitionIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getDefCompletionAccess().getLabelDefinitionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefNonInertia__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefNonInertiaAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDefNonInertiaAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefNonInertia__NamesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefNonInertiaAccess().getNamesDefinitionCrossReference_2_0()); }
(
{ before(grammarAccess.getDefNonInertiaAccess().getNamesDefinitionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDefNonInertiaAccess().getNamesDefinitionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDefNonInertiaAccess().getNamesDefinitionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefNonInertia__NamesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefNonInertiaAccess().getNamesDefinitionCrossReference_3_1_0()); }
(
{ before(grammarAccess.getDefNonInertiaAccess().getNamesDefinitionIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDefNonInertiaAccess().getNamesDefinitionIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getDefNonInertiaAccess().getNamesDefinitionCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefXor__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefXorAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDefXorAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefXor__NamesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefXorAccess().getNamesDefinitionCrossReference_2_0()); }
(
{ before(grammarAccess.getDefXorAccess().getNamesDefinitionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDefXorAccess().getNamesDefinitionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDefXorAccess().getNamesDefinitionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefXor__NamesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefXorAccess().getNamesDefinitionCrossReference_3_1_0()); }
(
{ before(grammarAccess.getDefXorAccess().getNamesDefinitionIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDefXorAccess().getNamesDefinitionIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getDefXorAccess().getNamesDefinitionCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefMutex__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefMutexAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDefMutexAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefMutex__NamesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefMutexAccess().getNamesDefinitionCrossReference_2_0()); }
(
{ before(grammarAccess.getDefMutexAccess().getNamesDefinitionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDefMutexAccess().getNamesDefinitionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDefMutexAccess().getNamesDefinitionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefMutex__NamesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefMutexAccess().getNamesDefinitionCrossReference_3_1_0()); }
(
{ before(grammarAccess.getDefMutexAccess().getNamesDefinitionIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDefMutexAccess().getNamesDefinitionIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getDefMutexAccess().getNamesDefinitionCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledExpression__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getLabeledExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledExpression__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledExpressionAccess().getNameLabelTypeEnumRuleCall_1_0_0()); }
	ruleLabelType{ after(grammarAccess.getLabeledExpressionAccess().getNameLabelTypeEnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledExpression__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabeledExpressionAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getLabeledExpressionAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SortDefinition__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortDefinitionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSortDefinitionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SortDefinition__SortAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortDefinitionAccess().getSortDefSortCrossReference_1_0()); }
(
{ before(grammarAccess.getSortDefinitionAccess().getSortDefSortIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSortDefinitionAccess().getSortDefSortIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getSortDefinitionAccess().getSortDefSortCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SortDefinition__DefinitionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortDefinitionAccess().getDefinitionsDefinitionParserRuleCall_2_0()); }
	ruleDefinition{ after(grammarAccess.getSortDefinitionAccess().getDefinitionsDefinitionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SortDefinition__DefinitionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortDefinitionAccess().getDefinitionsDefinitionParserRuleCall_3_1_0()); }
	ruleDefinition{ after(grammarAccess.getSortDefinitionAccess().getDefinitionsDefinitionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getArgsDefinesCrossReference_1_1_0()); }
(
{ before(grammarAccess.getDefinitionAccess().getArgsDefinesIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getArgsDefinesIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getDefinitionAccess().getArgsDefinesCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ArgsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getArgsDefinesCrossReference_1_2_1_0()); }
(
{ before(grammarAccess.getDefinitionAccess().getArgsDefinesIDTerminalRuleCall_1_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getArgsDefinesIDTerminalRuleCall_1_2_1_0_1()); }
)
{ after(grammarAccess.getDefinitionAccess().getArgsDefinesCrossReference_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ReturnAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getReturnDefinesCrossReference_2_1_0()); }
(
{ before(grammarAccess.getDefinitionAccess().getReturnDefinesIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getReturnDefinesIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getDefinitionAccess().getReturnDefinesCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignmentOpParserRuleCall_0_0()); }
	ruleAssignmentOp{ after(grammarAccess.getExpressionAccess().getExprAssignmentOpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__QualifiersAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getQualifiersQualifierParserRuleCall_1_0_0()); }
	ruleQualifier{ after(grammarAccess.getExpressionAccess().getQualifiersQualifierParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__NamesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getNamesDefinesCrossReference_0_0()); }
(
{ before(grammarAccess.getParametersAccess().getNamesDefinesIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getParametersAccess().getNamesDefinesIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getParametersAccess().getNamesDefinesCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__NamesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getNamesDefinesCrossReference_1_1_0()); }
(
{ before(grammarAccess.getParametersAccess().getNamesDefinesIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getParametersAccess().getNamesDefinesIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getParametersAccess().getNamesDefinesCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getOpUnaryOpEnumRuleCall_0_0()); }
	ruleUnaryOp{ after(grammarAccess.getExistsAccess().getOpUnaryOpEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exists__ParametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsAccess().getParametersParametersParserRuleCall_2_0()); }
	ruleParameters{ after(grammarAccess.getExistsAccess().getParametersParametersParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Forall__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForallAccess().getOpUnaryOpEnumRuleCall_0_0()); }
	ruleUnaryOp{ after(grammarAccess.getForallAccess().getOpUnaryOpEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Forall__ParametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForallAccess().getParametersParametersParserRuleCall_2_0()); }
	ruleParameters{ after(grammarAccess.getForallAccess().getParametersParametersParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__QAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getQQualifierParserRuleCall_1_1_0()); }
	ruleQualifier{ after(grammarAccess.getAssignmentOpAccess().getQQualifierParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOpAccess().getRightOrExpParserRuleCall_1_2_0()); }
	ruleOrExp{ after(grammarAccess.getAssignmentOpAccess().getRightOrExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__QAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getQQualifierParserRuleCall_1_2_0()); }
	ruleQualifier{ after(grammarAccess.getOrExpAccess().getQQualifierParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__RightAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getRightAndExpParserRuleCall_1_3_0()); }
	ruleAndExp{ after(grammarAccess.getOrExpAccess().getRightAndExpParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__QAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getQQualifierParserRuleCall_1_2_0()); }
	ruleQualifier{ after(grammarAccess.getAndExpAccess().getQQualifierParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__RightAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getRightRelationalParserRuleCall_1_3_0()); }
	ruleRelational{ after(grammarAccess.getAndExpAccess().getRightRelationalParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalAccess().getRightAdditionParserRuleCall_1_1_0()); }
	ruleAddition{ after(grammarAccess.getRelationalAccess().getRightAdditionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	ruleMultiplication{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_1_0()); }
	rulePower{ after(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Power__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerAccess().getRightUnaryExprParserRuleCall_1_1_0()); }
	ruleUnaryExpr{ after(grammarAccess.getPowerAccess().getRightUnaryExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getOpUnaryOpEnumRuleCall_0_0()); }
	ruleUnaryOp{ after(grammarAccess.getUnaryExprAccess().getOpUnaryOpEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__RightAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getRightPrePrimaryExprParserRuleCall_1_0()); }
	rulePrePrimaryExpr{ after(grammarAccess.getUnaryExprAccess().getRightPrePrimaryExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrePrimaryExpr__NAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrePrimaryExprAccess().getNINTTerminalRuleCall_3_1_0()); }
	RULE_INT{ after(grammarAccess.getPrePrimaryExprAccess().getNINTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__DefineAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getDefineDefinesCrossReference_0_0()); }
(
{ before(grammarAccess.getAbstractRefAccess().getDefineDefinesIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAbstractRefAccess().getDefineDefinesIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAbstractRefAccess().getDefineDefinesCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__ArgsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getArgsExpressionParserRuleCall_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getAbstractRefAccess().getArgsExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRef__ArgsAssignment_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractRefAccess().getArgsExpressionParserRuleCall_1_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getAbstractRefAccess().getArgsExpressionParserRuleCall_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueINTTerminalRuleCall_0_1_0()); }
	RULE_INT{ after(grammarAccess.getTerminalExpressionAccess().getValueINTTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueBOOLEANTerminalRuleCall_2_1_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getTerminalExpressionAccess().getValueBOOLEANTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INT : ('0'|'1'..'9' ('0'..'9')*);

RULE_BOOLEAN : ('true'|'false');

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : ';' ~(('\n'|'\r'|'#'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


