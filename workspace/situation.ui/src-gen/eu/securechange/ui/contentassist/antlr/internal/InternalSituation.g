/*
* generated by Xtext
*/
grammar InternalSituation;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package eu.securechange.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package eu.securechange.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import eu.securechange.services.SituationGrammarAccess;

}

@parser::members {
 
 	private SituationGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SituationGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSituation
entryRuleSituation 
:
{ before(grammarAccess.getSituationRule()); }
	 ruleSituation
{ after(grammarAccess.getSituationRule()); } 
	 EOF 
;

// Rule Situation
ruleSituation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSituationAccess().getGroup()); }
(rule__Situation__Group__0)
{ after(grammarAccess.getSituationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThing
entryRuleThing 
:
{ before(grammarAccess.getThingRule()); }
	 ruleThing
{ after(grammarAccess.getThingRule()); } 
	 EOF 
;

// Rule Thing
ruleThing
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThingAccess().getAlternatives()); }
(rule__Thing__Alternatives)
{ after(grammarAccess.getThingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationship
entryRuleRelationship 
:
{ before(grammarAccess.getRelationshipRule()); }
	 ruleRelationship
{ after(grammarAccess.getRelationshipRule()); } 
	 EOF 
;

// Rule Relationship
ruleRelationship
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationshipAccess().getGroup()); }
(rule__Relationship__Group__0)
{ after(grammarAccess.getRelationshipAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomain
entryRuleDomain 
:
{ before(grammarAccess.getDomainRule()); }
	 ruleDomain
{ after(grammarAccess.getDomainRule()); } 
	 EOF 
;

// Rule Domain
ruleDomain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainAccess().getGroup()); }
(rule__Domain__Group__0)
{ after(grammarAccess.getDomainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule EntityType
ruleEntityType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getAlternatives()); }
(rule__EntityType__Alternatives)
{ after(grammarAccess.getEntityTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DomainType
ruleDomainType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainTypeAccess().getAlternatives()); }
(rule__DomainType__Alternatives)
{ after(grammarAccess.getDomainTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule RelationshipType
ruleRelationshipType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getAlternatives()); }
(rule__RelationshipType__Alternatives)
{ after(grammarAccess.getRelationshipTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Thing__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThingAccess().getEntityParserRuleCall_0()); }
	ruleEntity
{ after(grammarAccess.getThingAccess().getEntityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getThingAccess().getRelationshipParserRuleCall_1()); }
	ruleRelationship
{ after(grammarAccess.getThingAccess().getRelationshipParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getThingAccess().getDomainParserRuleCall_2()); }
	ruleDomain
{ after(grammarAccess.getThingAccess().getDomainParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getDomainAssumptionEnumLiteralDeclaration_0()); }
(	'DA' 
)
{ after(grammarAccess.getEntityTypeAccess().getDomainAssumptionEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getFunctionEnumLiteralDeclaration_1()); }
(	'FR' 
)
{ after(grammarAccess.getEntityTypeAccess().getFunctionEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getSecurityEnumLiteralDeclaration_2()); }
(	'SR' 
)
{ after(grammarAccess.getEntityTypeAccess().getSecurityEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getAntiEnumLiteralDeclaration_3()); }
(	'AR' 
)
{ after(grammarAccess.getEntityTypeAccess().getAntiEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getQualityPropositionEnumLiteralDeclaration_4()); }
(	'Q' 
)
{ after(grammarAccess.getEntityTypeAccess().getQualityPropositionEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getArgumentEnumLiteralDeclaration_5()); }
(	'A' 
)
{ after(grammarAccess.getEntityTypeAccess().getArgumentEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getActorEnumLiteralDeclaration_6()); }
(	'actor' 
)
{ after(grammarAccess.getEntityTypeAccess().getActorEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getActionEnumLiteralDeclaration_7()); }
(	'action' 
)
{ after(grammarAccess.getEntityTypeAccess().getActionEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getAttackerEnumLiteralDeclaration_8()); }
(	'attacker' 
)
{ after(grammarAccess.getEntityTypeAccess().getAttackerEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getProcessEnumLiteralDeclaration_9()); }
(	'process' 
)
{ after(grammarAccess.getEntityTypeAccess().getProcessEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getActivityEnumLiteralDeclaration_10()); }
(	'activity' 
)
{ after(grammarAccess.getEntityTypeAccess().getActivityEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getResourceEnumLiteralDeclaration_11()); }
(	'resource' 
)
{ after(grammarAccess.getEntityTypeAccess().getResourceEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getAssetEnumLiteralDeclaration_12()); }
(	'asset' 
)
{ after(grammarAccess.getEntityTypeAccess().getAssetEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getEntityTypeAccess().getEventEnumLiteralDeclaration_13()); }
(	'event' 
)
{ after(grammarAccess.getEntityTypeAccess().getEventEnumLiteralDeclaration_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainTypeAccess().getSpecificationEnumLiteralDeclaration_0()); }
(	'S' 
)
{ after(grammarAccess.getDomainTypeAccess().getSpecificationEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDomainTypeAccess().getRequirementEnumLiteralDeclaration_1()); }
(	'R' 
)
{ after(grammarAccess.getDomainTypeAccess().getRequirementEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getDomainTypeAccess().getWorldEnumLiteralDeclaration_2()); }
(	'W' 
)
{ after(grammarAccess.getDomainTypeAccess().getWorldEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipTypeAccess().getWantsEnumLiteralDeclaration_0()); }
(	'wants' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getWantsEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getDoesEnumLiteralDeclaration_1()); }
(	'does' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getDoesEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getANDEnumLiteralDeclaration_2()); }
(	'and' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getANDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getOREnumLiteralDeclaration_3()); }
(	'or' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getOREnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getTRUSTEnumLiteralDeclaration_4()); }
(	'trusts' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getTRUSTEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getDELEGATEEnumLiteralDeclaration_5()); }
(	'delegates' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getDELEGATEEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getHURTEnumLiteralDeclaration_6()); }
(	'-' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getHURTEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getHELPEnumLiteralDeclaration_7()); }
(	'+' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getHELPEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getBREAKEnumLiteralDeclaration_8()); }
(	'--' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getBREAKEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getMAKEEnumLiteralDeclaration_9()); }
(	'++' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getMAKEEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getFulfilsEnumLiteralDeclaration_10()); }
(	'fulfils' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getFulfilsEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getProvidesEnumLiteralDeclaration_11()); }
(	'provides' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getProvidesEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getConsumesEnumLiteralDeclaration_12()); }
(	'consumes' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getConsumesEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getExploitsEnumLiteralDeclaration_13()); }
(	'exploits' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getExploitsEnumLiteralDeclaration_13()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getDamagesEnumLiteralDeclaration_14()); }
(	'damages' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getDamagesEnumLiteralDeclaration_14()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getAttacksEnumLiteralDeclaration_15()); }
(	'attacks' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getAttacksEnumLiteralDeclaration_15()); }
)

    |(
{ before(grammarAccess.getRelationshipTypeAccess().getArguesEnumLiteralDeclaration_16()); }
(	'argues' 
)
{ after(grammarAccess.getRelationshipTypeAccess().getArguesEnumLiteralDeclaration_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Situation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group__0__Impl
	rule__Situation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getGroup_0()); }
(rule__Situation__Group_0__0)?
{ after(grammarAccess.getSituationAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Situation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getThingsAssignment_1()); }
(rule__Situation__ThingsAssignment_1)*
{ after(grammarAccess.getSituationAccess().getThingsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Situation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group_0__0__Impl
	rule__Situation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getModelKeyword_0_0()); }

	'model' 

{ after(grammarAccess.getSituationAccess().getModelKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Situation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group_0__1__Impl
	rule__Situation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getTimeAssignment_0_1()); }
(rule__Situation__TimeAssignment_0_1)
{ after(grammarAccess.getSituationAccess().getTimeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Situation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Situation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getSituationAccess().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getTypeAssignment_0()); }
(rule__Entity__TypeAssignment_0)
{ after(grammarAccess.getEntityAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
(rule__Entity__NameAssignment_1)
{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relationship__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__0__Impl
	rule__Relationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTypeAssignment_0()); }
(rule__Relationship__TypeAssignment_0)
{ after(grammarAccess.getRelationshipAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__1__Impl
	rule__Relationship__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getRelationshipAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__2__Impl
	rule__Relationship__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getSourceAssignment_2()); }
(rule__Relationship__SourceAssignment_2)
{ after(grammarAccess.getRelationshipAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__3__Impl
	rule__Relationship__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getRelationshipAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__4__Impl
	rule__Relationship__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTargetAssignment_4()); }
(rule__Relationship__TargetAssignment_4)
{ after(grammarAccess.getRelationshipAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getRelationshipAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Domain__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group__0__Impl
	rule__Domain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getNameAssignment_0()); }
(rule__Domain__NameAssignment_0)
{ after(grammarAccess.getDomainAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group__1__Impl
	rule__Domain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getTypeAssignment_1()); }
(rule__Domain__TypeAssignment_1)
{ after(grammarAccess.getDomainAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getGroup_2()); }
(rule__Domain__Group_2__0)*
{ after(grammarAccess.getDomainAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Domain__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group_2__0__Impl
	rule__Domain__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getCommaKeyword_2_0()); }
(
	',' 
)?
{ after(grammarAccess.getDomainAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Domain__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getPropertiesAssignment_2_1()); }
(rule__Domain__PropertiesAssignment_2_1)
{ after(grammarAccess.getDomainAccess().getPropertiesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Situation__TimeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getTimeIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getSituationAccess().getTimeIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Situation__ThingsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSituationAccess().getThingsThingParserRuleCall_1_0()); }
	ruleThing{ after(grammarAccess.getSituationAccess().getThingsThingParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getTypeEntityTypeEnumRuleCall_0_0()); }
	ruleEntityType{ after(grammarAccess.getEntityAccess().getTypeEntityTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTypeRelationshipTypeEnumRuleCall_0_0()); }
	ruleRelationshipType{ after(grammarAccess.getRelationshipAccess().getTypeRelationshipTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getSourceThingCrossReference_2_0()); }
(
{ before(grammarAccess.getRelationshipAccess().getSourceThingIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationshipAccess().getSourceThingIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRelationshipAccess().getSourceThingCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTargetThingCrossReference_4_0()); }
(
{ before(grammarAccess.getRelationshipAccess().getTargetThingIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationshipAccess().getTargetThingIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getRelationshipAccess().getTargetThingCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getTypeDomainTypeEnumRuleCall_1_0()); }
	ruleDomainType{ after(grammarAccess.getDomainAccess().getTypeDomainTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__PropertiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getPropertiesEntityParserRuleCall_2_1_0()); }
	ruleEntity{ after(grammarAccess.getDomainAccess().getPropertiesEntityParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('#' ~('#')+ '#'|'^'? ('a'..'z'|'A'..'Z'|'_'|'.') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'.')*);

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


