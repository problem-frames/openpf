/*
* generated by Xtext
*/
grammar InternalIstar;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package uk.ac.open.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.open.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import uk.ac.open.services.IstarGrammarAccess;

}

@parser::members {
 
 	private IstarGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(IstarGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel :
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainer
entryRuleContainer :
{ before(grammarAccess.getContainerRule()); }
	 ruleContainer
{ after(grammarAccess.getContainerRule()); } 
	 EOF 
;

// Rule Container
ruleContainer 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getContainerAccess().getAlternatives()); }
(rule__Container__Alternatives)
{ after(grammarAccess.getContainerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActor
entryRuleActor :
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getActorAccess().getGroup()); }
(rule__Actor__Group__0)
{ after(grammarAccess.getActorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAgent
entryRuleAgent :
{ before(grammarAccess.getAgentRule()); }
	 ruleAgent
{ after(grammarAccess.getAgentRule()); } 
	 EOF 
;

// Rule Agent
ruleAgent 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAgentAccess().getGroup()); }
(rule__Agent__Group__0)
{ after(grammarAccess.getAgentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRole
entryRuleRole :
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRoleAccess().getGroup()); }
(rule__Role__Group__0)
{ after(grammarAccess.getRoleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePosition
entryRulePosition :
{ before(grammarAccess.getPositionRule()); }
	 rulePosition
{ after(grammarAccess.getPositionRule()); } 
	 EOF 
;

// Rule Position
rulePosition 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPositionAccess().getGroup()); }
(rule__Position__Group__0)
{ after(grammarAccess.getPositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntention
entryRuleIntention :
{ before(grammarAccess.getIntentionRule()); }
	 ruleIntention
{ after(grammarAccess.getIntentionRule()); } 
	 EOF 
;

// Rule Intention
ruleIntention 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getIntentionAccess().getAlternatives()); }
(rule__Intention__Alternatives)
{ after(grammarAccess.getIntentionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGoal
entryRuleGoal :
{ before(grammarAccess.getGoalRule()); }
	 ruleGoal
{ after(grammarAccess.getGoalRule()); } 
	 EOF 
;

// Rule Goal
ruleGoal 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getGoalAccess().getGroup()); }
(rule__Goal__Group__0)
{ after(grammarAccess.getGoalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSoftgoal
entryRuleSoftgoal :
{ before(grammarAccess.getSoftgoalRule()); }
	 ruleSoftgoal
{ after(grammarAccess.getSoftgoalRule()); } 
	 EOF 
;

// Rule Softgoal
ruleSoftgoal 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSoftgoalAccess().getGroup()); }
(rule__Softgoal__Group__0)
{ after(grammarAccess.getSoftgoalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTask
entryRuleTask :
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTaskAccess().getGroup()); }
(rule__Task__Group__0)
{ after(grammarAccess.getTaskAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResource
entryRuleResource :
{ before(grammarAccess.getResourceRule()); }
	 ruleResource
{ after(grammarAccess.getResourceRule()); } 
	 EOF 
;

// Rule Resource
ruleResource 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getResourceAccess().getGroup()); }
(rule__Resource__Group__0)
{ after(grammarAccess.getResourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBelief
entryRuleBelief :
{ before(grammarAccess.getBeliefRule()); }
	 ruleBelief
{ after(grammarAccess.getBeliefRule()); } 
	 EOF 
;

// Rule Belief
ruleBelief 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBeliefAccess().getGroup()); }
(rule__Belief__Group__0)
{ after(grammarAccess.getBeliefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleAssociation
entryRuleAssociation :
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAssociationAccess().getGroup()); }
(rule__Association__Group__0)
{ after(grammarAccess.getAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDependency
entryRuleDependency :
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDependencyAccess().getGroup()); }
(rule__Dependency__Group__0)
{ after(grammarAccess.getDependencyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecomposition
entryRuleDecomposition :
{ before(grammarAccess.getDecompositionRule()); }
	 ruleDecomposition
{ after(grammarAccess.getDecompositionRule()); } 
	 EOF 
;

// Rule Decomposition
ruleDecomposition 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDecompositionAccess().getAlternatives()); }
(rule__Decomposition__Alternatives)
{ after(grammarAccess.getDecompositionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndDecomposition
entryRuleAndDecomposition :
{ before(grammarAccess.getAndDecompositionRule()); }
	 ruleAndDecomposition
{ after(grammarAccess.getAndDecompositionRule()); } 
	 EOF 
;

// Rule AndDecomposition
ruleAndDecomposition 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAndDecompositionAccess().getGroup()); }
(rule__AndDecomposition__Group__0)
{ after(grammarAccess.getAndDecompositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrDecomposition
entryRuleOrDecomposition :
{ before(grammarAccess.getOrDecompositionRule()); }
	 ruleOrDecomposition
{ after(grammarAccess.getOrDecompositionRule()); } 
	 EOF 
;

// Rule OrDecomposition
ruleOrDecomposition 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOrDecompositionAccess().getGroup()); }
(rule__OrDecomposition__Group__0)
{ after(grammarAccess.getOrDecompositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContribution
entryRuleContribution :
{ before(grammarAccess.getContributionRule()); }
	 ruleContribution
{ after(grammarAccess.getContributionRule()); } 
	 EOF 
;

// Rule Contribution
ruleContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getContributionAccess().getAlternatives()); }
(rule__Contribution__Alternatives)
{ after(grammarAccess.getContributionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndContribution
entryRuleAndContribution :
{ before(grammarAccess.getAndContributionRule()); }
	 ruleAndContribution
{ after(grammarAccess.getAndContributionRule()); } 
	 EOF 
;

// Rule AndContribution
ruleAndContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAndContributionAccess().getGroup()); }
(rule__AndContribution__Group__0)
{ after(grammarAccess.getAndContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrContribution
entryRuleOrContribution :
{ before(grammarAccess.getOrContributionRule()); }
	 ruleOrContribution
{ after(grammarAccess.getOrContributionRule()); } 
	 EOF 
;

// Rule OrContribution
ruleOrContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOrContributionAccess().getGroup()); }
(rule__OrContribution__Group__0)
{ after(grammarAccess.getOrContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHelpContribution
entryRuleHelpContribution :
{ before(grammarAccess.getHelpContributionRule()); }
	 ruleHelpContribution
{ after(grammarAccess.getHelpContributionRule()); } 
	 EOF 
;

// Rule HelpContribution
ruleHelpContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getHelpContributionAccess().getGroup()); }
(rule__HelpContribution__Group__0)
{ after(grammarAccess.getHelpContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMakeContribution
entryRuleMakeContribution :
{ before(grammarAccess.getMakeContributionRule()); }
	 ruleMakeContribution
{ after(grammarAccess.getMakeContributionRule()); } 
	 EOF 
;

// Rule MakeContribution
ruleMakeContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getMakeContributionAccess().getGroup()); }
(rule__MakeContribution__Group__0)
{ after(grammarAccess.getMakeContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHurtContribution
entryRuleHurtContribution :
{ before(grammarAccess.getHurtContributionRule()); }
	 ruleHurtContribution
{ after(grammarAccess.getHurtContributionRule()); } 
	 EOF 
;

// Rule HurtContribution
ruleHurtContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getHurtContributionAccess().getGroup()); }
(rule__HurtContribution__Group__0)
{ after(grammarAccess.getHurtContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBreakContribution
entryRuleBreakContribution :
{ before(grammarAccess.getBreakContributionRule()); }
	 ruleBreakContribution
{ after(grammarAccess.getBreakContributionRule()); } 
	 EOF 
;

// Rule BreakContribution
ruleBreakContribution 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBreakContributionAccess().getGroup()); }
(rule__BreakContribution__Group__0)
{ after(grammarAccess.getBreakContributionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getContainersAssignment_3_0()); }
(rule__Model__ContainersAssignment_3_0)
{ after(grammarAccess.getModelAccess().getContainersAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getIntentionsAssignment_3_1()); }
(rule__Model__IntentionsAssignment_3_1)
{ after(grammarAccess.getModelAccess().getIntentionsAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getModelAccess().getDecompositionsAssignment_3_2()); }
(rule__Model__DecompositionsAssignment_3_2)
{ after(grammarAccess.getModelAccess().getDecompositionsAssignment_3_2()); }
)

    |(
{ before(grammarAccess.getModelAccess().getDependenciesAssignment_3_3()); }
(rule__Model__DependenciesAssignment_3_3)
{ after(grammarAccess.getModelAccess().getDependenciesAssignment_3_3()); }
)

    |(
{ before(grammarAccess.getModelAccess().getContributionsAssignment_3_4()); }
(rule__Model__ContributionsAssignment_3_4)
{ after(grammarAccess.getModelAccess().getContributionsAssignment_3_4()); }
)

    |(
{ before(grammarAccess.getModelAccess().getAssociationsAssignment_3_5()); }
(rule__Model__AssociationsAssignment_3_5)
{ after(grammarAccess.getModelAccess().getAssociationsAssignment_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerAccess().getActorParserRuleCall_0()); }
	ruleActor
{ after(grammarAccess.getContainerAccess().getActorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getContainerAccess().getAgentParserRuleCall_1()); }
	ruleAgent
{ after(grammarAccess.getContainerAccess().getAgentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getContainerAccess().getRoleParserRuleCall_2()); }
	ruleRole
{ after(grammarAccess.getContainerAccess().getRoleParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getContainerAccess().getPositionParserRuleCall_3()); }
	rulePosition
{ after(grammarAccess.getContainerAccess().getPositionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getIs_aAssignment_2_0()); }
(rule__Actor__Is_aAssignment_2_0)
{ after(grammarAccess.getActorAccess().getIs_aAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getActorAccess().getIs_part_ofAssignment_2_1()); }
(rule__Actor__Is_part_ofAssignment_2_1)
{ after(grammarAccess.getActorAccess().getIs_part_ofAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Intention__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntentionAccess().getGoalParserRuleCall_0()); }
	ruleGoal
{ after(grammarAccess.getIntentionAccess().getGoalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntentionAccess().getSoftgoalParserRuleCall_1()); }
	ruleSoftgoal
{ after(grammarAccess.getIntentionAccess().getSoftgoalParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIntentionAccess().getTaskParserRuleCall_2()); }
	ruleTask
{ after(grammarAccess.getIntentionAccess().getTaskParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getIntentionAccess().getResourceParserRuleCall_3()); }
	ruleResource
{ after(grammarAccess.getIntentionAccess().getResourceParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getIntentionAccess().getBeliefParserRuleCall_4()); }
	ruleBelief
{ after(grammarAccess.getIntentionAccess().getBeliefParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Decomposition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecompositionAccess().getAndDecompositionParserRuleCall_0()); }
	ruleAndDecomposition
{ after(grammarAccess.getDecompositionAccess().getAndDecompositionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDecompositionAccess().getOrDecompositionParserRuleCall_1()); }
	ruleOrDecomposition
{ after(grammarAccess.getDecompositionAccess().getOrDecompositionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Contribution__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContributionAccess().getAndContributionParserRuleCall_0()); }
	ruleAndContribution
{ after(grammarAccess.getContributionAccess().getAndContributionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getContributionAccess().getOrContributionParserRuleCall_1()); }
	ruleOrContribution
{ after(grammarAccess.getContributionAccess().getOrContributionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getContributionAccess().getHelpContributionParserRuleCall_2()); }
	ruleHelpContribution
{ after(grammarAccess.getContributionAccess().getHelpContributionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getContributionAccess().getHurtContributionParserRuleCall_3()); }
	ruleHurtContribution
{ after(grammarAccess.getContributionAccess().getHurtContributionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getContributionAccess().getMakeContributionParserRuleCall_4()); }
	ruleMakeContribution
{ after(grammarAccess.getContributionAccess().getMakeContributionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getContributionAccess().getBreakContributionParserRuleCall_5()); }
	ruleBreakContribution
{ after(grammarAccess.getContributionAccess().getBreakContributionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getIstarKeyword_0()); }

	'istar' 

{ after(grammarAccess.getModelAccess().getIstarKeyword_0()); }
)

	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
(rule__Model__NameAssignment_1)?
{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)

	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getModelAccess().getColonKeyword_2()); }
)

	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAlternatives_3()); }
(rule__Model__Alternatives_3)*
{ after(grammarAccess.getModelAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Actor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getActorKeyword_0()); }

	'actor' 

{ after(grammarAccess.getActorAccess().getActorKeyword_0()); }
)

	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameAssignment_1()); }
(rule__Actor__NameAssignment_1)
{ after(grammarAccess.getActorAccess().getNameAssignment_1()); }
)

	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getAlternatives_2()); }
(rule__Actor__Alternatives_2)*
{ after(grammarAccess.getActorAccess().getAlternatives_2()); }
)

	rule__Actor__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getGroup_3()); }
(rule__Actor__Group_3__0)?
{ after(grammarAccess.getActorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Actor__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3_0()); }
)

	rule__Actor__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getIntentionsAssignment_3_1()); }
(rule__Actor__IntentionsAssignment_3_1)*
{ after(grammarAccess.getActorAccess().getIntentionsAssignment_3_1()); }
)

	rule__Actor__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_3_2()); }

	'}' 

{ after(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Agent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getAgentKeyword_0()); }

	'agent' 

{ after(grammarAccess.getAgentAccess().getAgentKeyword_0()); }
)

	rule__Agent__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getNameAssignment_1()); }
(rule__Agent__NameAssignment_1)
{ after(grammarAccess.getAgentAccess().getNameAssignment_1()); }
)

	rule__Agent__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getGroup_2()); }
(rule__Agent__Group_2__0)?
{ after(grammarAccess.getAgentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Agent__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_2_0()); }
)

	rule__Agent__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getIntentionsAssignment_2_1()); }
(rule__Agent__IntentionsAssignment_2_1)*
{ after(grammarAccess.getAgentAccess().getIntentionsAssignment_2_1()); }
)

	rule__Agent__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Role__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRoleKeyword_0()); }

	'role' 

{ after(grammarAccess.getRoleAccess().getRoleKeyword_0()); }
)

	rule__Role__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getNameAssignment_1()); }
(rule__Role__NameAssignment_1)
{ after(grammarAccess.getRoleAccess().getNameAssignment_1()); }
)

	rule__Role__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getGroup_2()); }
(rule__Role__Group_2__0)?
{ after(grammarAccess.getRoleAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Role__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_2_0()); }
)

	rule__Role__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getIntentionsAssignment_2_1()); }
(rule__Role__IntentionsAssignment_2_1)*
{ after(grammarAccess.getRoleAccess().getIntentionsAssignment_2_1()); }
)

	rule__Role__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Position__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getPositionKeyword_0()); }

	'position' 

{ after(grammarAccess.getPositionAccess().getPositionKeyword_0()); }
)

	rule__Position__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getNameAssignment_1()); }
(rule__Position__NameAssignment_1)
{ after(grammarAccess.getPositionAccess().getNameAssignment_1()); }
)

	rule__Position__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getGroup_2()); }
(rule__Position__Group_2__0)?
{ after(grammarAccess.getPositionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Position__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getPositionAccess().getLeftCurlyBracketKeyword_2_0()); }
)

	rule__Position__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getIntentionsAssignment_2_1()); }
(rule__Position__IntentionsAssignment_2_1)*
{ after(grammarAccess.getPositionAccess().getIntentionsAssignment_2_1()); }
)

	rule__Position__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getPositionAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Goal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getGoalKeyword_0()); }

	'goal' 

{ after(grammarAccess.getGoalAccess().getGoalKeyword_0()); }
)

	rule__Goal__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getNameAssignment_1()); }
(rule__Goal__NameAssignment_1)
{ after(grammarAccess.getGoalAccess().getNameAssignment_1()); }
)

	rule__Goal__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getGroup_2()); }
(rule__Goal__Group_2__0)?
{ after(grammarAccess.getGoalAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Goal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getGoalAccess().getLeftCurlyBracketKeyword_2_0()); }
)

	rule__Goal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getDecompositionsAssignment_2_1()); }
(rule__Goal__DecompositionsAssignment_2_1)*
{ after(grammarAccess.getGoalAccess().getDecompositionsAssignment_2_1()); }
)

	rule__Goal__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getGoalAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Softgoal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSoftgoalAccess().getSoftKeyword_0()); }

	'soft' 

{ after(grammarAccess.getSoftgoalAccess().getSoftKeyword_0()); }
)

	rule__Softgoal__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Softgoal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSoftgoalAccess().getNameAssignment_1()); }
(rule__Softgoal__NameAssignment_1)
{ after(grammarAccess.getSoftgoalAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }

	'task' 

{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)

	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
(rule__Task__NameAssignment_1)
{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Resource__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getResourceKeyword_0()); }

	'resource' 

{ after(grammarAccess.getResourceAccess().getResourceKeyword_0()); }
)

	rule__Resource__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getNameAssignment_1()); }
(rule__Resource__NameAssignment_1)
{ after(grammarAccess.getResourceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Belief__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getBeliefKeyword_0()); }

	'belief' 

{ after(grammarAccess.getBeliefAccess().getBeliefKeyword_0()); }
)

	rule__Belief__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Belief__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getNameAssignment_1()); }
(rule__Belief__NameAssignment_1)
{ after(grammarAccess.getBeliefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Association__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getSourceAssignment_0()); }
(rule__Association__SourceAssignment_0)
{ after(grammarAccess.getAssociationAccess().getSourceAssignment_0()); }
)

	rule__Association__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getTildeTildeGreaterThanSignKeyword_1()); }

	'~~>' 

{ after(grammarAccess.getAssociationAccess().getTildeTildeGreaterThanSignKeyword_1()); }
)

	rule__Association__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getTargetAssignment_2()); }
(rule__Association__TargetAssignment_2)
{ after(grammarAccess.getAssociationAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Dependency__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependencyAccess().getDependencyFromAssignment_0()); }
(rule__Dependency__DependencyFromAssignment_0)
{ after(grammarAccess.getDependencyAccess().getDependencyFromAssignment_0()); }
)

	rule__Dependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependencyAccess().getTildeGreaterThanSignKeyword_1()); }

	'~>' 

{ after(grammarAccess.getDependencyAccess().getTildeGreaterThanSignKeyword_1()); }
)

	rule__Dependency__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependencyAccess().getDependencyToAssignment_2()); }
(rule__Dependency__DependencyToAssignment_2)
{ after(grammarAccess.getDependencyAccess().getDependencyToAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndDecomposition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndDecompositionAccess().getTargetAssignment_0()); }
(rule__AndDecomposition__TargetAssignment_0)
{ after(grammarAccess.getAndDecompositionAccess().getTargetAssignment_0()); }
)

	rule__AndDecomposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AndDecomposition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndDecompositionAccess().getAndKeyword_1()); }

	'<-(and)-' 

{ after(grammarAccess.getAndDecompositionAccess().getAndKeyword_1()); }
)

	rule__AndDecomposition__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AndDecomposition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndDecompositionAccess().getSourceAssignment_2()); }
(rule__AndDecomposition__SourceAssignment_2)
{ after(grammarAccess.getAndDecompositionAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrDecomposition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrDecompositionAccess().getTargetAssignment_0()); }
(rule__OrDecomposition__TargetAssignment_0)
{ after(grammarAccess.getOrDecompositionAccess().getTargetAssignment_0()); }
)

	rule__OrDecomposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OrDecomposition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrDecompositionAccess().getOrKeyword_1()); }

	'<-(or)-' 

{ after(grammarAccess.getOrDecompositionAccess().getOrKeyword_1()); }
)

	rule__OrDecomposition__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OrDecomposition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrDecompositionAccess().getSourceAssignment_2()); }
(rule__OrDecomposition__SourceAssignment_2)
{ after(grammarAccess.getOrDecompositionAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndContributionAccess().getSourceAssignment_0()); }
(rule__AndContribution__SourceAssignment_0)
{ after(grammarAccess.getAndContributionAccess().getSourceAssignment_0()); }
)

	rule__AndContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AndContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndContributionAccess().getAndKeyword_1()); }

	'-(and)->' 

{ after(grammarAccess.getAndContributionAccess().getAndKeyword_1()); }
)

	rule__AndContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AndContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndContributionAccess().getTargetAssignment_2()); }
(rule__AndContribution__TargetAssignment_2)
{ after(grammarAccess.getAndContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrContributionAccess().getSourceAssignment_0()); }
(rule__OrContribution__SourceAssignment_0)
{ after(grammarAccess.getOrContributionAccess().getSourceAssignment_0()); }
)

	rule__OrContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OrContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrContributionAccess().getOrKeyword_1()); }

	'-(or)->' 

{ after(grammarAccess.getOrContributionAccess().getOrKeyword_1()); }
)

	rule__OrContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OrContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrContributionAccess().getTargetAssignment_2()); }
(rule__OrContribution__TargetAssignment_2)
{ after(grammarAccess.getOrContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HelpContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHelpContributionAccess().getSourceAssignment_0()); }
(rule__HelpContribution__SourceAssignment_0)
{ after(grammarAccess.getHelpContributionAccess().getSourceAssignment_0()); }
)

	rule__HelpContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__HelpContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHelpContributionAccess().getHyphenMinusLeftParenthesisPlusSignRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }

	'-(+)->' 

{ after(grammarAccess.getHelpContributionAccess().getHyphenMinusLeftParenthesisPlusSignRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }
)

	rule__HelpContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__HelpContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHelpContributionAccess().getTargetAssignment_2()); }
(rule__HelpContribution__TargetAssignment_2)
{ after(grammarAccess.getHelpContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MakeContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeContributionAccess().getSourceAssignment_0()); }
(rule__MakeContribution__SourceAssignment_0)
{ after(grammarAccess.getMakeContributionAccess().getSourceAssignment_0()); }
)

	rule__MakeContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MakeContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeContributionAccess().getHyphenMinusLeftParenthesisPlusSignPlusSignRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }

	'-(++)->' 

{ after(grammarAccess.getMakeContributionAccess().getHyphenMinusLeftParenthesisPlusSignPlusSignRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }
)

	rule__MakeContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MakeContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeContributionAccess().getTargetAssignment_2()); }
(rule__MakeContribution__TargetAssignment_2)
{ after(grammarAccess.getMakeContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HurtContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHurtContributionAccess().getSourceAssignment_0()); }
(rule__HurtContribution__SourceAssignment_0)
{ after(grammarAccess.getHurtContributionAccess().getSourceAssignment_0()); }
)

	rule__HurtContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__HurtContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHurtContributionAccess().getHyphenMinusLeftParenthesisHyphenMinusRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }

	'-(-)->' 

{ after(grammarAccess.getHurtContributionAccess().getHyphenMinusLeftParenthesisHyphenMinusRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }
)

	rule__HurtContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__HurtContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHurtContributionAccess().getTargetAssignment_2()); }
(rule__HurtContribution__TargetAssignment_2)
{ after(grammarAccess.getHurtContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BreakContribution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContributionAccess().getSourceAssignment_0()); }
(rule__BreakContribution__SourceAssignment_0)
{ after(grammarAccess.getBreakContributionAccess().getSourceAssignment_0()); }
)

	rule__BreakContribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakContribution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContributionAccess().getHyphenMinusLeftParenthesisHyphenMinusHyphenMinusRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }

	'-(--)->' 

{ after(grammarAccess.getBreakContributionAccess().getHyphenMinusLeftParenthesisHyphenMinusHyphenMinusRightParenthesisHyphenMinusGreaterThanSignKeyword_1()); }
)

	rule__BreakContribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakContribution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContributionAccess().getTargetAssignment_2()); }
(rule__BreakContribution__TargetAssignment_2)
{ after(grammarAccess.getBreakContributionAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Model__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ContainersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getContainersContainerParserRuleCall_3_0_0()); }
	ruleContainer{ after(grammarAccess.getModelAccess().getContainersContainerParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__IntentionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getIntentionsIntentionParserRuleCall_3_1_0()); }
	ruleIntention{ after(grammarAccess.getModelAccess().getIntentionsIntentionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DecompositionsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDecompositionsDecompositionParserRuleCall_3_2_0()); }
	ruleDecomposition{ after(grammarAccess.getModelAccess().getDecompositionsDecompositionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DependenciesAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDependenciesDependencyParserRuleCall_3_3_0()); }
	ruleDependency{ after(grammarAccess.getModelAccess().getDependenciesDependencyParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ContributionsAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getContributionsContributionParserRuleCall_3_4_0()); }
	ruleContribution{ after(grammarAccess.getModelAccess().getContributionsContributionParserRuleCall_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__AssociationsAssignment_3_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAssociationsAssociationParserRuleCall_3_5_0()); }
	ruleAssociation{ after(grammarAccess.getModelAccess().getAssociationsAssociationParserRuleCall_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Is_aAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getIs_aActorCrossReference_2_0_0()); }
(
{ before(grammarAccess.getActorAccess().getIs_aActorIDTerminalRuleCall_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getActorAccess().getIs_aActorIDTerminalRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getActorAccess().getIs_aActorCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Is_part_ofAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getIs_part_ofActorCrossReference_2_1_0()); }
(
{ before(grammarAccess.getActorAccess().getIs_part_ofActorIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getActorAccess().getIs_part_ofActorIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getActorAccess().getIs_part_ofActorCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__IntentionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getIntentionsIntentionParserRuleCall_3_1_0()); }
	ruleIntention{ after(grammarAccess.getActorAccess().getIntentionsIntentionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__IntentionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
	ruleIntention{ after(grammarAccess.getAgentAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRoleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__IntentionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
	ruleIntention{ after(grammarAccess.getRoleAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Position__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPositionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Position__IntentionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
	ruleIntention{ after(grammarAccess.getPositionAccess().getIntentionsIntentionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__DecompositionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getDecompositionsDecompositionCrossReference_2_1_0()); }
(
{ before(grammarAccess.getGoalAccess().getDecompositionsDecompositionIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGoalAccess().getDecompositionsDecompositionIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getGoalAccess().getDecompositionsDecompositionCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Softgoal__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSoftgoalAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSoftgoalAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Belief__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getBeliefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getSourceContainerCrossReference_0_0()); }
(
{ before(grammarAccess.getAssociationAccess().getSourceContainerIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getSourceContainerIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssociationAccess().getSourceContainerCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getTargetContainerCrossReference_2_0()); }
(
{ before(grammarAccess.getAssociationAccess().getTargetContainerIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getTargetContainerIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAssociationAccess().getTargetContainerCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__DependencyFromAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependencyAccess().getDependencyFromDependableCrossReference_0_0()); }
(
{ before(grammarAccess.getDependencyAccess().getDependencyFromDependableIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getDependencyAccess().getDependencyFromDependableIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getDependencyAccess().getDependencyFromDependableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__DependencyToAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependencyAccess().getDependencyToDependableCrossReference_2_0()); }
(
{ before(grammarAccess.getDependencyAccess().getDependencyToDependableIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDependencyAccess().getDependencyToDependableIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDependencyAccess().getDependencyToDependableCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndDecomposition__TargetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndDecompositionAccess().getTargetIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getAndDecompositionAccess().getTargetIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAndDecompositionAccess().getTargetIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAndDecompositionAccess().getTargetIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndDecomposition__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndDecompositionAccess().getSourceIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getAndDecompositionAccess().getSourceIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getAndDecompositionAccess().getSourceIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAndDecompositionAccess().getSourceIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrDecomposition__TargetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrDecompositionAccess().getTargetIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getOrDecompositionAccess().getTargetIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getOrDecompositionAccess().getTargetIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getOrDecompositionAccess().getTargetIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrDecomposition__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrDecompositionAccess().getSourceIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getOrDecompositionAccess().getSourceIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getOrDecompositionAccess().getSourceIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getOrDecompositionAccess().getSourceIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getAndContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAndContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAndContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getAndContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getAndContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAndContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getOrContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getOrContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getOrContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getOrContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getOrContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getOrContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HelpContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHelpContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getHelpContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getHelpContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getHelpContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HelpContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHelpContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getHelpContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getHelpContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getHelpContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MakeContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getMakeContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMakeContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMakeContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MakeContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMakeContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getMakeContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMakeContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getMakeContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HurtContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHurtContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getHurtContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getHurtContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getHurtContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HurtContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHurtContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getHurtContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getHurtContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getHurtContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BreakContribution__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContributionAccess().getSourceIntentionCrossReference_0_0()); }
(
{ before(grammarAccess.getBreakContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getBreakContributionAccess().getSourceIntentionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getBreakContributionAccess().getSourceIntentionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BreakContribution__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContributionAccess().getTargetIntentionCrossReference_2_0()); }
(
{ before(grammarAccess.getBreakContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getBreakContributionAccess().getTargetIntentionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getBreakContributionAccess().getTargetIntentionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('#' ~('#')+ '#'|'^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*);

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


