/*
* generated by Xtext
*/

package eu.securechange.ontology.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class OntologyGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class SituationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Situation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cModelKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTimeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cTimeIDTerminalRuleCall_0_1_0 = (RuleCall)cTimeAssignment_0_1.eContents().get(0);
		private final Keyword cColonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cWorldAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cWorldWorldParserRuleCall_1_0 = (RuleCall)cWorldAssignment_1.eContents().get(0);
		
		//Situation:
		//	("model" time=ID ":")? world=World;
		public ParserRule getRule() { return rule; }

		//("model" time=ID ":")? world=World
		public Group getGroup() { return cGroup; }

		//("model" time=ID ":")?
		public Group getGroup_0() { return cGroup_0; }

		//"model"
		public Keyword getModelKeyword_0_0() { return cModelKeyword_0_0; }

		//time=ID
		public Assignment getTimeAssignment_0_1() { return cTimeAssignment_0_1; }

		//ID
		public RuleCall getTimeIDTerminalRuleCall_0_1_0() { return cTimeIDTerminalRuleCall_0_1_0; }

		//":"
		public Keyword getColonKeyword_0_2() { return cColonKeyword_0_2; }

		//world=World
		public Assignment getWorldAssignment_1() { return cWorldAssignment_1; }

		//World
		public RuleCall getWorldWorldParserRuleCall_1_0() { return cWorldWorldParserRuleCall_1_0; }
	}

	public class WorldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "World");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWorldAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cEntitiesAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cEntitiesEntityParserRuleCall_1_0_0 = (RuleCall)cEntitiesAssignment_1_0.eContents().get(0);
		private final Assignment cRelationshipsAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cRelationshipsRelationshipParserRuleCall_1_1_0 = (RuleCall)cRelationshipsAssignment_1_1.eContents().get(0);
		
		//World:
		//	{World} (entities+=Entity | relationships+=Relationship)*;
		public ParserRule getRule() { return rule; }

		//{World} (entities+=Entity | relationships+=Relationship)*
		public Group getGroup() { return cGroup; }

		//{World}
		public Action getWorldAction_0() { return cWorldAction_0; }

		//(entities+=Entity | relationships+=Relationship)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//entities+=Entity
		public Assignment getEntitiesAssignment_1_0() { return cEntitiesAssignment_1_0; }

		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_1_0_0() { return cEntitiesEntityParserRuleCall_1_0_0; }

		//relationships+=Relationship
		public Assignment getRelationshipsAssignment_1_1() { return cRelationshipsAssignment_1_1; }

		//Relationship
		public RuleCall getRelationshipsRelationshipParserRuleCall_1_1_0() { return cRelationshipsRelationshipParserRuleCall_1_1_0; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGoalParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDomainParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Entity:
		//	Goal | Domain;
		public ParserRule getRule() { return rule; }

		//Goal | Domain
		public Alternatives getAlternatives() { return cAlternatives; }

		//Goal
		public RuleCall getGoalParserRuleCall_0() { return cGoalParserRuleCall_0; }

		//Domain
		public RuleCall getDomainParserRuleCall_1() { return cDomainParserRuleCall_1; }
	}

	public class GoalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Goal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cTypeGoalKeyword_0_1_0 = (Keyword)cTypeAssignment_0_1.eContents().get(0);
		private final Assignment cAssetAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cAssetAssetParserRuleCall_0_2_0 = (RuleCall)cAssetAssignment_0_2.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cGroup_0.eContents().get(3);
		private final Keyword cCommaKeyword_0_3_0 = (Keyword)cGroup_0_3.eContents().get(0);
		private final Assignment cPropertiesAssignment_0_3_1 = (Assignment)cGroup_0_3.eContents().get(1);
		private final RuleCall cPropertiesPropositionParserRuleCall_0_3_1_0 = (RuleCall)cPropertiesAssignment_0_3_1.eContents().get(0);
		private final RuleCall cSecurityGoalParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRequirementParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Goal:
		//	name=ID type="goal" asset=Asset? (","? properties+=Proposition)* | SecurityGoal | Requirement;
		public ParserRule getRule() { return rule; }

		//name=ID type="goal" asset=Asset? (","? properties+=Proposition)* | SecurityGoal | Requirement
		public Alternatives getAlternatives() { return cAlternatives; }

		//name=ID type="goal" asset=Asset? (","? properties+=Proposition)*
		public Group getGroup_0() { return cGroup_0; }

		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }

		//type="goal"
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }

		//"goal"
		public Keyword getTypeGoalKeyword_0_1_0() { return cTypeGoalKeyword_0_1_0; }

		//asset=Asset?
		public Assignment getAssetAssignment_0_2() { return cAssetAssignment_0_2; }

		//Asset
		public RuleCall getAssetAssetParserRuleCall_0_2_0() { return cAssetAssetParserRuleCall_0_2_0; }

		//(","? properties+=Proposition)*
		public Group getGroup_0_3() { return cGroup_0_3; }

		//","?
		public Keyword getCommaKeyword_0_3_0() { return cCommaKeyword_0_3_0; }

		//properties+=Proposition
		public Assignment getPropertiesAssignment_0_3_1() { return cPropertiesAssignment_0_3_1; }

		//Proposition
		public RuleCall getPropertiesPropositionParserRuleCall_0_3_1_0() { return cPropertiesPropositionParserRuleCall_0_3_1_0; }

		//SecurityGoal
		public RuleCall getSecurityGoalParserRuleCall_1() { return cSecurityGoalParserRuleCall_1; }

		//Requirement
		public RuleCall getRequirementParserRuleCall_2() { return cRequirementParserRuleCall_2; }
	}

	public class SecurityGoalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SecurityGoal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeSecKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Assignment cAssetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAssetAssetParserRuleCall_2_0 = (RuleCall)cAssetAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPropertiesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPropertiesPropositionParserRuleCall_3_1_0 = (RuleCall)cPropertiesAssignment_3_1.eContents().get(0);
		
		//SecurityGoal:
		//	name=ID type="sec" asset=Asset? (","? properties+=Proposition)*;
		public ParserRule getRule() { return rule; }

		//name=ID type="sec" asset=Asset? (","? properties+=Proposition)*
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//type="sec"
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//"sec"
		public Keyword getTypeSecKeyword_1_0() { return cTypeSecKeyword_1_0; }

		//asset=Asset?
		public Assignment getAssetAssignment_2() { return cAssetAssignment_2; }

		//Asset
		public RuleCall getAssetAssetParserRuleCall_2_0() { return cAssetAssetParserRuleCall_2_0; }

		//(","? properties+=Proposition)*
		public Group getGroup_3() { return cGroup_3; }

		//","?
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//properties+=Proposition
		public Assignment getPropertiesAssignment_3_1() { return cPropertiesAssignment_3_1; }

		//Proposition
		public RuleCall getPropertiesPropositionParserRuleCall_3_1_0() { return cPropertiesPropositionParserRuleCall_3_1_0; }
	}

	public class RequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Requirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeReqKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Assignment cAssetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAssetAssetParserRuleCall_2_0 = (RuleCall)cAssetAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPropertiesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPropertiesPropositionParserRuleCall_3_1_0 = (RuleCall)cPropertiesAssignment_3_1.eContents().get(0);
		
		//Requirement:
		//	name=ID type="req" asset=Asset? (","? properties+=Proposition)*;
		public ParserRule getRule() { return rule; }

		//name=ID type="req" asset=Asset? (","? properties+=Proposition)*
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//type="req"
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//"req"
		public Keyword getTypeReqKeyword_1_0() { return cTypeReqKeyword_1_0; }

		//asset=Asset?
		public Assignment getAssetAssignment_2() { return cAssetAssignment_2; }

		//Asset
		public RuleCall getAssetAssetParserRuleCall_2_0() { return cAssetAssetParserRuleCall_2_0; }

		//(","? properties+=Proposition)*
		public Group getGroup_3() { return cGroup_3; }

		//","?
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//properties+=Proposition
		public Assignment getPropertiesAssignment_3_1() { return cPropertiesAssignment_3_1; }

		//Proposition
		public RuleCall getPropertiesPropositionParserRuleCall_3_1_0() { return cPropertiesPropositionParserRuleCall_3_1_0; }
	}

	public class DomainElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Domain");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cTypeDomKeyword_0_1_0 = (Keyword)cTypeAssignment_0_1.eContents().get(0);
		private final Assignment cAssetAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cAssetAssetParserRuleCall_0_2_0 = (RuleCall)cAssetAssignment_0_2.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cGroup_0.eContents().get(3);
		private final Keyword cCommaKeyword_0_3_0 = (Keyword)cGroup_0_3.eContents().get(0);
		private final Assignment cPropertiesAssignment_0_3_1 = (Assignment)cGroup_0_3.eContents().get(1);
		private final RuleCall cPropertiesPropositionParserRuleCall_0_3_1_0 = (RuleCall)cPropertiesAssignment_0_3_1.eContents().get(0);
		private final RuleCall cActorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cActionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cResourceParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Domain:
		//	name=ID type="dom" asset=Asset? (","? properties+=Proposition)* | Actor | Action | Resource;
		public ParserRule getRule() { return rule; }

		//name=ID type="dom" asset=Asset? (","? properties+=Proposition)* | Actor | Action | Resource
		public Alternatives getAlternatives() { return cAlternatives; }

		//name=ID type="dom" asset=Asset? (","? properties+=Proposition)*
		public Group getGroup_0() { return cGroup_0; }

		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }

		//type="dom"
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }

		//"dom"
		public Keyword getTypeDomKeyword_0_1_0() { return cTypeDomKeyword_0_1_0; }

		//asset=Asset?
		public Assignment getAssetAssignment_0_2() { return cAssetAssignment_0_2; }

		//Asset
		public RuleCall getAssetAssetParserRuleCall_0_2_0() { return cAssetAssetParserRuleCall_0_2_0; }

		//(","? properties+=Proposition)*
		public Group getGroup_0_3() { return cGroup_0_3; }

		//","?
		public Keyword getCommaKeyword_0_3_0() { return cCommaKeyword_0_3_0; }

		//properties+=Proposition
		public Assignment getPropertiesAssignment_0_3_1() { return cPropertiesAssignment_0_3_1; }

		//Proposition
		public RuleCall getPropertiesPropositionParserRuleCall_0_3_1_0() { return cPropertiesPropositionParserRuleCall_0_3_1_0; }

		//Actor
		public RuleCall getActorParserRuleCall_1() { return cActorParserRuleCall_1; }

		//Action
		public RuleCall getActionParserRuleCall_2() { return cActionParserRuleCall_2; }

		//Resource
		public RuleCall getResourceParserRuleCall_3() { return cResourceParserRuleCall_3; }
	}

	public class AssetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Asset");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cDollarSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Asset:
		//	name=ID "$" value=STRING?;
		public ParserRule getRule() { return rule; }

		//name=ID "$" value=STRING?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"$"
		public Keyword getDollarSignKeyword_1() { return cDollarSignKeyword_1; }

		//value=STRING?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}

	public class ActorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Actor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeActorKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Assignment cAssetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAssetAssetParserRuleCall_2_0 = (RuleCall)cAssetAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPropertiesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPropertiesPropositionParserRuleCall_3_1_0 = (RuleCall)cPropertiesAssignment_3_1.eContents().get(0);
		
		//Actor:
		//	name=ID type="actor" asset=Asset? (","? properties+=Proposition)*;
		public ParserRule getRule() { return rule; }

		//name=ID type="actor" asset=Asset? (","? properties+=Proposition)*
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//type="actor"
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//"actor"
		public Keyword getTypeActorKeyword_1_0() { return cTypeActorKeyword_1_0; }

		//asset=Asset?
		public Assignment getAssetAssignment_2() { return cAssetAssignment_2; }

		//Asset
		public RuleCall getAssetAssetParserRuleCall_2_0() { return cAssetAssetParserRuleCall_2_0; }

		//(","? properties+=Proposition)*
		public Group getGroup_3() { return cGroup_3; }

		//","?
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//properties+=Proposition
		public Assignment getPropertiesAssignment_3_1() { return cPropertiesAssignment_3_1; }

		//Proposition
		public RuleCall getPropertiesPropositionParserRuleCall_3_1_0() { return cPropertiesPropositionParserRuleCall_3_1_0; }
	}

	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeActionKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Assignment cAssetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAssetAssetParserRuleCall_2_0 = (RuleCall)cAssetAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPropertiesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPropertiesPropositionParserRuleCall_3_1_0 = (RuleCall)cPropertiesAssignment_3_1.eContents().get(0);
		
		//Action:
		//	name=ID type="action" asset=Asset? (","? properties+=Proposition)*;
		public ParserRule getRule() { return rule; }

		//name=ID type="action" asset=Asset? (","? properties+=Proposition)*
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//type="action"
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//"action"
		public Keyword getTypeActionKeyword_1_0() { return cTypeActionKeyword_1_0; }

		//asset=Asset?
		public Assignment getAssetAssignment_2() { return cAssetAssignment_2; }

		//Asset
		public RuleCall getAssetAssetParserRuleCall_2_0() { return cAssetAssetParserRuleCall_2_0; }

		//(","? properties+=Proposition)*
		public Group getGroup_3() { return cGroup_3; }

		//","?
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//properties+=Proposition
		public Assignment getPropertiesAssignment_3_1() { return cPropertiesAssignment_3_1; }

		//Proposition
		public RuleCall getPropertiesPropositionParserRuleCall_3_1_0() { return cPropertiesPropositionParserRuleCall_3_1_0; }
	}

	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Resource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeResourceKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Assignment cAssetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAssetAssetParserRuleCall_2_0 = (RuleCall)cAssetAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPropertiesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPropertiesPropositionParserRuleCall_3_1_0 = (RuleCall)cPropertiesAssignment_3_1.eContents().get(0);
		
		//Resource:
		//	name=ID type="resource" asset=Asset? (","? properties+=Proposition)*;
		public ParserRule getRule() { return rule; }

		//name=ID type="resource" asset=Asset? (","? properties+=Proposition)*
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//type="resource"
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//"resource"
		public Keyword getTypeResourceKeyword_1_0() { return cTypeResourceKeyword_1_0; }

		//asset=Asset?
		public Assignment getAssetAssignment_2() { return cAssetAssignment_2; }

		//Asset
		public RuleCall getAssetAssetParserRuleCall_2_0() { return cAssetAssetParserRuleCall_2_0; }

		//(","? properties+=Proposition)*
		public Group getGroup_3() { return cGroup_3; }

		//","?
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//properties+=Proposition
		public Assignment getPropertiesAssignment_3_1() { return cPropertiesAssignment_3_1; }

		//Proposition
		public RuleCall getPropertiesPropositionParserRuleCall_3_1_0() { return cPropertiesPropositionParserRuleCall_3_1_0; }
	}

	public class PropositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Proposition");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Proposition:
		//	name=STRING;
		public ParserRule getRule() { return rule; }

		//name=STRING
		public Assignment getNameAssignment() { return cNameAssignment; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0() { return cNameSTRINGTerminalRuleCall_0; }
	}

	public class RelationshipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Relationship");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeRelTypeEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSourceEntityCrossReference_2_0 = (CrossReference)cSourceAssignment_2.eContents().get(0);
		private final RuleCall cSourceEntityIDTerminalRuleCall_2_0_1 = (RuleCall)cSourceEntityCrossReference_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTargetEntityCrossReference_4_0 = (CrossReference)cTargetAssignment_4.eContents().get(0);
		private final RuleCall cTargetEntityIDTerminalRuleCall_4_0_1 = (RuleCall)cTargetEntityCrossReference_4_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cPropertiesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cPropertiesPropositionParserRuleCall_6_1_0 = (RuleCall)cPropertiesAssignment_6_1.eContents().get(0);
		
		//Relationship:
		//	type=RelType "(" source=[Entity] "," target=[Entity] ")" (","? properties+=Proposition)*;
		public ParserRule getRule() { return rule; }

		//type=RelType "(" source=[Entity] "," target=[Entity] ")" (","? properties+=Proposition)*
		public Group getGroup() { return cGroup; }

		//type=RelType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//RelType
		public RuleCall getTypeRelTypeEnumRuleCall_0_0() { return cTypeRelTypeEnumRuleCall_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//source=[Entity]
		public Assignment getSourceAssignment_2() { return cSourceAssignment_2; }

		//[Entity]
		public CrossReference getSourceEntityCrossReference_2_0() { return cSourceEntityCrossReference_2_0; }

		//ID
		public RuleCall getSourceEntityIDTerminalRuleCall_2_0_1() { return cSourceEntityIDTerminalRuleCall_2_0_1; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//target=[Entity]
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }

		//[Entity]
		public CrossReference getTargetEntityCrossReference_4_0() { return cTargetEntityCrossReference_4_0; }

		//ID
		public RuleCall getTargetEntityIDTerminalRuleCall_4_0_1() { return cTargetEntityIDTerminalRuleCall_4_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//(","? properties+=Proposition)*
		public Group getGroup_6() { return cGroup_6; }

		//","?
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//properties+=Proposition
		public Assignment getPropertiesAssignment_6_1() { return cPropertiesAssignment_6_1; }

		//Proposition
		public RuleCall getPropertiesPropositionParserRuleCall_6_1_0() { return cPropertiesPropositionParserRuleCall_6_1_0; }
	}
	
	
	public class RelTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "RelType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCARRIESOUTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCARRIESOUTCarriesOutKeyword_0_0 = (Keyword)cCARRIESOUTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDEPENDSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDEPENDSDependsKeyword_1_0 = (Keyword)cDEPENDSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDECOMPOSESEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDECOMPOSESDecomposesKeyword_2_0 = (Keyword)cDECOMPOSESEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCONTRIBUTESEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCONTRIBUTESContributesKeyword_3_0 = (Keyword)cCONTRIBUTESEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDELEGATESEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDELEGATESDelegatesKeyword_4_0 = (Keyword)cDELEGATESEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cFULFILSEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cFULFILSFulfilsKeyword_5_0 = (Keyword)cFULFILSEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cPROVIDESEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cPROVIDESProvidesKeyword_6_0 = (Keyword)cPROVIDESEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cTRUSTSEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cTRUSTSTrustsKeyword_7_0 = (Keyword)cTRUSTSEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cWANTSEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cWANTSWantsKeyword_8_0 = (Keyword)cWANTSEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cDAMAGESEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cDAMAGESDamagesKeyword_9_0 = (Keyword)cDAMAGESEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cATTACKSEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cATTACKSAttacksKeyword_10_0 = (Keyword)cATTACKSEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cARGUESEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cARGUESArguesKeyword_11_0 = (Keyword)cARGUESEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cINTERFACESEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cINTERFACESInterfacesKeyword_12_0 = (Keyword)cINTERFACESEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cCONSUMEsEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cCONSUMEsConsumesKeyword_13_0 = (Keyword)cCONSUMEsEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cPROTECTSEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cPROTECTSProtectsKeyword_14_0 = (Keyword)cPROTECTSEnumLiteralDeclaration_14.eContents().get(0);
		
		//enum RelType:
		//	CARRIESOUT="carries out" | DEPENDS="depends" | DECOMPOSES="decomposes" | CONTRIBUTES="contributes" |
		//	DELEGATES="delegates" | FULFILS="fulfils" | PROVIDES="provides" | TRUSTS="trusts" | WANTS="wants" | DAMAGES="damages"
		//	| ATTACKS="attacks" | ARGUES="argues" | INTERFACES="interfaces" | CONSUMEs="consumes" | PROTECTS="protects";
		public EnumRule getRule() { return rule; }

		//CARRIESOUT="carries out" | DEPENDS="depends" | DECOMPOSES="decomposes" | CONTRIBUTES="contributes" |
		//DELEGATES="delegates" | FULFILS="fulfils" | PROVIDES="provides" | TRUSTS="trusts" | WANTS="wants" | DAMAGES="damages" |
		//ATTACKS="attacks" | ARGUES="argues" | INTERFACES="interfaces" | CONSUMEs="consumes" | PROTECTS="protects"
		public Alternatives getAlternatives() { return cAlternatives; }

		//CARRIESOUT="carries out"
		public EnumLiteralDeclaration getCARRIESOUTEnumLiteralDeclaration_0() { return cCARRIESOUTEnumLiteralDeclaration_0; }

		//"carries out"
		public Keyword getCARRIESOUTCarriesOutKeyword_0_0() { return cCARRIESOUTCarriesOutKeyword_0_0; }

		//DEPENDS="depends"
		public EnumLiteralDeclaration getDEPENDSEnumLiteralDeclaration_1() { return cDEPENDSEnumLiteralDeclaration_1; }

		//"depends"
		public Keyword getDEPENDSDependsKeyword_1_0() { return cDEPENDSDependsKeyword_1_0; }

		//DECOMPOSES="decomposes"
		public EnumLiteralDeclaration getDECOMPOSESEnumLiteralDeclaration_2() { return cDECOMPOSESEnumLiteralDeclaration_2; }

		//"decomposes"
		public Keyword getDECOMPOSESDecomposesKeyword_2_0() { return cDECOMPOSESDecomposesKeyword_2_0; }

		//CONTRIBUTES="contributes"
		public EnumLiteralDeclaration getCONTRIBUTESEnumLiteralDeclaration_3() { return cCONTRIBUTESEnumLiteralDeclaration_3; }

		//"contributes"
		public Keyword getCONTRIBUTESContributesKeyword_3_0() { return cCONTRIBUTESContributesKeyword_3_0; }

		//DELEGATES="delegates"
		public EnumLiteralDeclaration getDELEGATESEnumLiteralDeclaration_4() { return cDELEGATESEnumLiteralDeclaration_4; }

		//"delegates"
		public Keyword getDELEGATESDelegatesKeyword_4_0() { return cDELEGATESDelegatesKeyword_4_0; }

		//FULFILS="fulfils"
		public EnumLiteralDeclaration getFULFILSEnumLiteralDeclaration_5() { return cFULFILSEnumLiteralDeclaration_5; }

		//"fulfils"
		public Keyword getFULFILSFulfilsKeyword_5_0() { return cFULFILSFulfilsKeyword_5_0; }

		//PROVIDES="provides"
		public EnumLiteralDeclaration getPROVIDESEnumLiteralDeclaration_6() { return cPROVIDESEnumLiteralDeclaration_6; }

		//"provides"
		public Keyword getPROVIDESProvidesKeyword_6_0() { return cPROVIDESProvidesKeyword_6_0; }

		//TRUSTS="trusts"
		public EnumLiteralDeclaration getTRUSTSEnumLiteralDeclaration_7() { return cTRUSTSEnumLiteralDeclaration_7; }

		//"trusts"
		public Keyword getTRUSTSTrustsKeyword_7_0() { return cTRUSTSTrustsKeyword_7_0; }

		//WANTS="wants"
		public EnumLiteralDeclaration getWANTSEnumLiteralDeclaration_8() { return cWANTSEnumLiteralDeclaration_8; }

		//"wants"
		public Keyword getWANTSWantsKeyword_8_0() { return cWANTSWantsKeyword_8_0; }

		//DAMAGES="damages"
		public EnumLiteralDeclaration getDAMAGESEnumLiteralDeclaration_9() { return cDAMAGESEnumLiteralDeclaration_9; }

		//"damages"
		public Keyword getDAMAGESDamagesKeyword_9_0() { return cDAMAGESDamagesKeyword_9_0; }

		//ATTACKS="attacks"
		public EnumLiteralDeclaration getATTACKSEnumLiteralDeclaration_10() { return cATTACKSEnumLiteralDeclaration_10; }

		//"attacks"
		public Keyword getATTACKSAttacksKeyword_10_0() { return cATTACKSAttacksKeyword_10_0; }

		//ARGUES="argues"
		public EnumLiteralDeclaration getARGUESEnumLiteralDeclaration_11() { return cARGUESEnumLiteralDeclaration_11; }

		//"argues"
		public Keyword getARGUESArguesKeyword_11_0() { return cARGUESArguesKeyword_11_0; }

		//INTERFACES="interfaces"
		public EnumLiteralDeclaration getINTERFACESEnumLiteralDeclaration_12() { return cINTERFACESEnumLiteralDeclaration_12; }

		//"interfaces"
		public Keyword getINTERFACESInterfacesKeyword_12_0() { return cINTERFACESInterfacesKeyword_12_0; }

		//CONSUMEs="consumes"
		public EnumLiteralDeclaration getCONSUMEsEnumLiteralDeclaration_13() { return cCONSUMEsEnumLiteralDeclaration_13; }

		//"consumes"
		public Keyword getCONSUMEsConsumesKeyword_13_0() { return cCONSUMEsConsumesKeyword_13_0; }

		//PROTECTS="protects"
		public EnumLiteralDeclaration getPROTECTSEnumLiteralDeclaration_14() { return cPROTECTSEnumLiteralDeclaration_14; }

		//"protects"
		public Keyword getPROTECTSProtectsKeyword_14_0() { return cPROTECTSProtectsKeyword_14_0; }
	}
	
	private SituationElements pSituation;
	private WorldElements pWorld;
	private EntityElements pEntity;
	private GoalElements pGoal;
	private SecurityGoalElements pSecurityGoal;
	private RequirementElements pRequirement;
	private DomainElements pDomain;
	private AssetElements pAsset;
	private ActorElements pActor;
	private ActionElements pAction;
	private ResourceElements pResource;
	private PropositionElements pProposition;
	private RelationshipElements pRelationship;
	private RelTypeElements unknownRuleRelType;
	private TerminalRule tID;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public OntologyGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Situation:
	//	("model" time=ID ":")? world=World;
	public SituationElements getSituationAccess() {
		return (pSituation != null) ? pSituation : (pSituation = new SituationElements());
	}
	
	public ParserRule getSituationRule() {
		return getSituationAccess().getRule();
	}

	//World:
	//	{World} (entities+=Entity | relationships+=Relationship)*;
	public WorldElements getWorldAccess() {
		return (pWorld != null) ? pWorld : (pWorld = new WorldElements());
	}
	
	public ParserRule getWorldRule() {
		return getWorldAccess().getRule();
	}

	//Entity:
	//	Goal | Domain;
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Goal:
	//	name=ID type="goal" asset=Asset? (","? properties+=Proposition)* | SecurityGoal | Requirement;
	public GoalElements getGoalAccess() {
		return (pGoal != null) ? pGoal : (pGoal = new GoalElements());
	}
	
	public ParserRule getGoalRule() {
		return getGoalAccess().getRule();
	}

	//SecurityGoal:
	//	name=ID type="sec" asset=Asset? (","? properties+=Proposition)*;
	public SecurityGoalElements getSecurityGoalAccess() {
		return (pSecurityGoal != null) ? pSecurityGoal : (pSecurityGoal = new SecurityGoalElements());
	}
	
	public ParserRule getSecurityGoalRule() {
		return getSecurityGoalAccess().getRule();
	}

	//Requirement:
	//	name=ID type="req" asset=Asset? (","? properties+=Proposition)*;
	public RequirementElements getRequirementAccess() {
		return (pRequirement != null) ? pRequirement : (pRequirement = new RequirementElements());
	}
	
	public ParserRule getRequirementRule() {
		return getRequirementAccess().getRule();
	}

	//Domain:
	//	name=ID type="dom" asset=Asset? (","? properties+=Proposition)* | Actor | Action | Resource;
	public DomainElements getDomainAccess() {
		return (pDomain != null) ? pDomain : (pDomain = new DomainElements());
	}
	
	public ParserRule getDomainRule() {
		return getDomainAccess().getRule();
	}

	//Asset:
	//	name=ID "$" value=STRING?;
	public AssetElements getAssetAccess() {
		return (pAsset != null) ? pAsset : (pAsset = new AssetElements());
	}
	
	public ParserRule getAssetRule() {
		return getAssetAccess().getRule();
	}

	//Actor:
	//	name=ID type="actor" asset=Asset? (","? properties+=Proposition)*;
	public ActorElements getActorAccess() {
		return (pActor != null) ? pActor : (pActor = new ActorElements());
	}
	
	public ParserRule getActorRule() {
		return getActorAccess().getRule();
	}

	//Action:
	//	name=ID type="action" asset=Asset? (","? properties+=Proposition)*;
	public ActionElements getActionAccess() {
		return (pAction != null) ? pAction : (pAction = new ActionElements());
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}

	//Resource:
	//	name=ID type="resource" asset=Asset? (","? properties+=Proposition)*;
	public ResourceElements getResourceAccess() {
		return (pResource != null) ? pResource : (pResource = new ResourceElements());
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}

	//Proposition:
	//	name=STRING;
	public PropositionElements getPropositionAccess() {
		return (pProposition != null) ? pProposition : (pProposition = new PropositionElements());
	}
	
	public ParserRule getPropositionRule() {
		return getPropositionAccess().getRule();
	}

	//Relationship:
	//	type=RelType "(" source=[Entity] "," target=[Entity] ")" (","? properties+=Proposition)*;
	public RelationshipElements getRelationshipAccess() {
		return (pRelationship != null) ? pRelationship : (pRelationship = new RelationshipElements());
	}
	
	public ParserRule getRelationshipRule() {
		return getRelationshipAccess().getRule();
	}

	//enum RelType:
	//	CARRIESOUT="carries out" | DEPENDS="depends" | DECOMPOSES="decomposes" | CONTRIBUTES="contributes" |
	//	DELEGATES="delegates" | FULFILS="fulfils" | PROVIDES="provides" | TRUSTS="trusts" | WANTS="wants" | DAMAGES="damages"
	//	| ATTACKS="attacks" | ARGUES="argues" | INTERFACES="interfaces" | CONSUMEs="consumes" | PROTECTS="protects";
	public RelTypeElements getRelTypeAccess() {
		return (unknownRuleRelType != null) ? unknownRuleRelType : (unknownRuleRelType = new RelTypeElements());
	}
	
	public EnumRule getRelTypeRule() {
		return getRelTypeAccess().getRule();
	}

	//terminal ID:
	//	"#" !"#"+ "#" | "^"? ("a".."z" | "A".."Z" | "_" | ".") ("a".."z" | "A".."Z" | "_" | "0".."9" | ".")*;
	public TerminalRule getIDRule() {
		return (tID != null) ? tID : (tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID"));
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" | "n" |
	//	"f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
